diff --git a/.idea/libraries/aapt2_proto_0_3_1.xml b/.idea/libraries/aapt2_proto_0_3_1.xml
index c43bc18..323a43d 100644
--- a/.idea/libraries/aapt2_proto_0_3_1.xml
+++ b/.idea/libraries/aapt2_proto_0_3_1.xml
@@ -1,9 +1,9 @@
 <component name="libraryTable">
   <library name="aapt2-proto-0.3.1">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/aapt2-proto/aapt2-proto-0.3.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aapt2-proto/aapt2-proto-0.3.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/android.xml b/.idea/libraries/android.xml
index 97ca62f..53a83e9 100644
--- a/.idea/libraries/android.xml
+++ b/.idea/libraries/android.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="android">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/android.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/android.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/android_sdklib_25_3_0.xml b/.idea/libraries/android_sdklib_25_3_0.xml
index f31dc32..ce24c60 100644
--- a/.idea/libraries/android_sdklib_25_3_0.xml
+++ b/.idea/libraries/android_sdklib_25_3_0.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="android-sdklib-25.3.0">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/sdklib-25.3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/sdklib-25.3.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/sdklib-25.3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/sdklib-25.3.0-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/android_tools_25_3_0.xml b/.idea/libraries/android_tools_25_3_0.xml
index 5b9c850..bd1b8e4 100644
--- a/.idea/libraries/android_tools_25_3_0.xml
+++ b/.idea/libraries/android_tools_25_3_0.xml
@@ -1,15 +1,15 @@
 <component name="libraryTable">
   <library name="android-tools-25.3.0">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/common-25.3.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/layoutlib-api-25.3.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/sdk-common-25.3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/common-25.3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/layoutlib-api-25.3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/sdk-common-25.3.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/common-25.3.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/layoutlib-api-25.3.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/sdk-common-25.3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/common-25.3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/layoutlib-api-25.3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/sdk-common-25.3.0-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/apksig.xml b/.idea/libraries/apksig.xml
index 5c595a4..6ad0570 100644
--- a/.idea/libraries/apksig.xml
+++ b/.idea/libraries/apksig.xml
@@ -1,9 +1,9 @@
 <component name="libraryTable">
   <library name="apksig">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/aosp/apksig.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aosp/apksig.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/args4j.xml b/.idea/libraries/args4j.xml
index fe4d409..cf725b9 100644
--- a/.idea/libraries/args4j.xml
+++ b/.idea/libraries/args4j.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="args4j">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/args4j/args4j-2.0.30.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/args4j/args4j-2.0.30.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/args4j/args4j-2.0.30-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/args4j/args4j-2.0.30-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/asm.xml b/.idea/libraries/asm.xml
index cc3ef63..e3e6d67 100644
--- a/.idea/libraries/asm.xml
+++ b/.idea/libraries/asm.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="asm">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/asm/asm-7.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/asm/asm-tree-7.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/asm/asm-analysis-7.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/asm/asm-commons-7.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/asm/asm-util-7.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/asm/asm-7.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/asm/asm-tree-7.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/asm/asm-analysis-7.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/asm/asm-commons-7.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/asm/asm-util-7.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
@@ -16,4 +16,4 @@
       <root url="jar://$PROJECT_DIR$/third-party/java/asm/asm-util-7.0-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/bazel.xml b/.idea/libraries/bazel.xml
index 068dabe..1e71a1e 100644
--- a/.idea/libraries/bazel.xml
+++ b/.idea/libraries/bazel.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="bazel">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/bazel/bazel_deploy.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/bazel/bazel_deploy.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/bazel/bazel_deploy-src.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/bazel/bazel_deploy-src.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/buck_lib.xml b/.idea/libraries/buck_lib.xml
index 38ef6f9..ef9dad5 100644
--- a/.idea/libraries/buck_lib.xml
+++ b/.idea/libraries/buck_lib.xml
@@ -1,50 +1,50 @@
 <component name="libraryTable">
   <library name="buck-lib">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/sdklib-25.3.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/args4j/args4j-2.0.30.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/ini4j/ini4j-0.5.5-SNAPSHOT.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jsr/jsr305.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-4.5.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-platform-4.5.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/stringtemplate/ST-4.0.8.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/ObjCBridge/ObjCBridge.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/thrift/libthrift-0.11.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/slf4j/slf4j-jdk14-1.7.5.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/oshi/oshi-core-3.3-SNAPSHOT.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jimfs/jimfs-1.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/ddmlib-25.3.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/errorprone/error_prone_annotations-2.0.19.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/nuprocess/nuprocess-1.2.4.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/nailgun/nailgun-server-1.0.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-annotations-2.9.7.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-core-2.9.7.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-databind-2.9.7.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-datatype-guava-2.9.7.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-datatype-jdk8-2.9.7.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-module-mrbean-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/sdklib-25.3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/args4j/args4j-2.0.30.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/ini4j/ini4j-0.5.5-SNAPSHOT.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jsr/jsr305.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-4.5.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-platform-4.5.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/stringtemplate/ST-4.0.8.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/ObjCBridge/ObjCBridge.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/thrift/libthrift-0.11.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/slf4j/slf4j-jdk14-1.7.5.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/oshi/oshi-core-3.3-SNAPSHOT.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jimfs/jimfs-1.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/ddmlib-25.3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/errorprone/error_prone_annotations-2.0.19.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/nuprocess/nuprocess-1.2.4.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/nailgun/nailgun-server-1.0.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-annotations-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-core-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-databind-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-datatype-guava-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-datatype-jdk8-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-module-mrbean-2.9.7.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/args4j/args4j-2.0.30-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-4.5.1-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-platform-4.5.1-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jsr/jsr305.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/oshi/oshi-core-3.3-SNAPSHOT-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/thrift/libthrift-0.11.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/slf4j/slf4j-jdk14-1.7.5-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jimfs/jimfs-1.1-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/android/ddmlib-25.3.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/errorprone/error_prone_annotations-2.0.19-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/sqlite/sqlite-jdbc-3.20.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/nuprocess/nuprocess-1.2.4-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/nailgun/nailgun-server-1.0.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-annotations-2.9.7-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-core-2.9.7-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-databind-2.9.7-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-datatype-guava-2.9.7-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-datatype-jdk8-2.9.7-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-module-mrbean-2.9.7-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/args4j/args4j-2.0.30-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-4.5.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-platform-4.5.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jsr/jsr305.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/oshi/oshi-core-3.3-SNAPSHOT-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/thrift/libthrift-0.11.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/slf4j/slf4j-jdk14-1.7.5-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jimfs/jimfs-1.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/ddmlib-25.3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/errorprone/error_prone_annotations-2.0.19-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/sqlite/sqlite-jdbc-3.20.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/nuprocess/nuprocess-1.2.4-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/nailgun/nailgun-server-1.0.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-annotations-2.9.7-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-core-2.9.7-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-databind-2.9.7-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-datatype-guava-2.9.7-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-datatype-jdk8-2.9.7-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-module-mrbean-2.9.7-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/bundletool_0_7_1.xml b/.idea/libraries/bundletool_0_7_1.xml
index c7c90b7..46ae7af 100644
--- a/.idea/libraries/bundletool_0_7_1.xml
+++ b/.idea/libraries/bundletool_0_7_1.xml
@@ -1,9 +1,9 @@
 <component name="libraryTable">
   <library name="bundletool-0.7.1">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/bundletool/bundletool-0.7.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/bundletool/bundletool-0.7.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/commons_compress_1_18.xml b/.idea/libraries/commons_compress_1_18.xml
index f520380..99eec91 100644
--- a/.idea/libraries/commons_compress_1_18.xml
+++ b/.idea/libraries/commons_compress_1_18.xml
@@ -1,9 +1,9 @@
 <component name="libraryTable">
   <library name="commons-compress-1.18">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/commons-compress/commons-compress-1.18.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/commons-compress/commons-compress-1.18.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/concurrent_locks.xml b/.idea/libraries/concurrent_locks.xml
index b32113e..7ce414c 100644
--- a/.idea/libraries/concurrent_locks.xml
+++ b/.idea/libraries/concurrent_locks.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="concurrent-locks">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/concurrent-locks/concurrent-locks-1.0.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/concurrent-locks/concurrent-locks-1.0.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/concurrent-locks/concurrent-locks-1.0.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/concurrent-locks/concurrent-locks-1.0.0-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/d8.xml b/.idea/libraries/d8.xml
index af4e80f..c79d9d5 100644
--- a/.idea/libraries/d8.xml
+++ b/.idea/libraries/d8.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="d8">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/d8/d8.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/d8/d8.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/dd_plist.xml b/.idea/libraries/dd_plist.xml
index ef08f48..c3509e6 100644
--- a/.idea/libraries/dd_plist.xml
+++ b/.idea/libraries/dd_plist.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="dd-plist">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/dd-plist/dd-plist.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/dd-plist/dd-plist.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/dd-plist/dd-plist-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/dd-plist/dd-plist-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/diffutils_1_3_0.xml b/.idea/libraries/diffutils_1_3_0.xml
index 2efb651..f46644b 100644
--- a/.idea/libraries/diffutils_1_3_0.xml
+++ b/.idea/libraries/diffutils_1_3_0.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="diffutils-1.3.0">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/diffutils/diffutils-1.3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/diffutils/diffutils-1.3.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/diffutils/diffutils-1.3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/diffutils/diffutils-1.3.0-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/eclipse.xml b/.idea/libraries/eclipse.xml
index 6d1118f..bab9136 100644
--- a/.idea/libraries/eclipse.xml
+++ b/.idea/libraries/eclipse.xml
@@ -1,10 +1,10 @@
 <component name="libraryTable">
   <library name="eclipse">
     <CLASSES>
-      <root url="file://$PROJECT_DIR$/third-party/java/eclipse" />
+      <root url="file://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/eclipse" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
-    <jarDirectory url="file://$PROJECT_DIR$/third-party/java/eclipse" recursive="false" />
+    <jarDirectory url="file://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/eclipse" recursive="false" />
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/eden.xml b/.idea/libraries/eden.xml
index 5ec7717..c9892f6 100644
--- a/.idea/libraries/eden.xml
+++ b/.idea/libraries/eden.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="eden">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/eden/eden.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/eden/eden.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/fastutil_7_2_0.xml b/.idea/libraries/fastutil_7_2_0.xml
index fabaacf..b631111 100644
--- a/.idea/libraries/fastutil_7_2_0.xml
+++ b/.idea/libraries/fastutil_7_2_0.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="fastutil-7.2.0">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/fastutil/fastutil-7.2.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/fastutil/fastutil-7.2.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/fastutil/fastutil-7.2.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/fastutil/fastutil-7.2.0-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/grpc.xml b/.idea/libraries/grpc.xml
index 63232dc..90b035d 100644
--- a/.idea/libraries/grpc.xml
+++ b/.idea/libraries/grpc.xml
@@ -1,21 +1,21 @@
 <component name="libraryTable">
   <library name="grpc">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-stub-1.18.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-protobuf-lite-1.18.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-protobuf-1.18.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-netty-shaded-1.18.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-core-1.18.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-context-1.18.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-stub-1.18.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-protobuf-lite-1.18.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-protobuf-1.18.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-netty-shaded-1.18.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-core-1.18.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-context-1.18.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-stub-1.18.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-protobuf-lite-1.18.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-protobuf-1.18.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-core-1.18.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-context-1.18.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/grpc/grpc-netty-shaded-1.18.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-stub-1.18.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-protobuf-lite-1.18.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-protobuf-1.18.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-core-1.18.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-context-1.18.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grpc/grpc-netty-shaded-1.18.0-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/gson.xml b/.idea/libraries/gson.xml
index 88cb9f4..b4e42e7 100644
--- a/.idea/libraries/gson.xml
+++ b/.idea/libraries/gson.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="gson">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/gson/gson-2.8.2.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/gson/gson-2.8.2.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/gson/gson-2.8.2-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/gson/gson-2.8.2-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/guava.xml b/.idea/libraries/guava.xml
index b9fa92b..6324b3c 100644
--- a/.idea/libraries/guava.xml
+++ b/.idea/libraries/guava.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="guava">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/guava/guava-23.3-jre.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guava/guava-23.3-jre.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/guava/guava-23.3-jre-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guava/guava-23.3-jre-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/guava_20_0.xml b/.idea/libraries/guava_20_0.xml
index 2a41a7d..ca27283 100644
--- a/.idea/libraries/guava_20_0.xml
+++ b/.idea/libraries/guava_20_0.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="guava-20.0">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/guava/guava-20.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guava/guava-20.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/guava_testlib.xml b/.idea/libraries/guava_testlib.xml
index fe02cb9..1dcce27 100644
--- a/.idea/libraries/guava_testlib.xml
+++ b/.idea/libraries/guava_testlib.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="guava-testlib">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/guava/guava-testlib-23.3-jre.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guava/guava-testlib-23.3-jre.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/guava/guava-testlib-23.3-jre-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guava/guava-testlib-23.3-jre-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/idea_ce_2018_3_4.xml b/.idea/libraries/idea_ce_2018_3_4.xml
index a248e9c..e3ec65e 100644
--- a/.idea/libraries/idea_ce_2018_3_4.xml
+++ b/.idea/libraries/idea_ce_2018_3_4.xml
@@ -1,19 +1,19 @@
 <component name="libraryTable">
   <library name="idea-ce-2018.3.4">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/android.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/annotations.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/extensions.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/idea.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/java-api.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/java-impl.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/jdom.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/openapi.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/picocontainer-1.2.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/platform-api.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/platform-impl.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/serviceMessages.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/intellij/util.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/android.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/annotations.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/extensions.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/idea.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/java-api.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/java-impl.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/jdom.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/openapi.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/picocontainer-1.2.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/platform-api.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/platform-impl.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/serviceMessages.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/intellij/util.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/immutables_annotations.xml b/.idea/libraries/immutables_annotations.xml
index 028b7b3..230623f 100644
--- a/.idea/libraries/immutables_annotations.xml
+++ b/.idea/libraries/immutables_annotations.xml
@@ -1,13 +1,13 @@
 <component name="libraryTable">
   <library name="immutables-annotations">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/immutables/builder-2.7.3.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/immutables/value-2.7.3.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/immutables/builder-2.7.3.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/immutables/value-2.7.3.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/immutables/builder-2.7.3-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/immutables/value-2.7.3-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/immutables/builder-2.7.3-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/immutables/value-2.7.3-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/infer_annotations.xml b/.idea/libraries/infer_annotations.xml
index c9a1937..bfa25ca 100644
--- a/.idea/libraries/infer_annotations.xml
+++ b/.idea/libraries/infer_annotations.xml
@@ -1,9 +1,9 @@
 <component name="libraryTable">
   <library name="infer-annotations">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/infer-annotations/infer-annotations-4.2.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/infer-annotations/infer-annotations-4.2.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/jackson_datatype_guava_2_9_7.xml b/.idea/libraries/jackson_datatype_guava_2_9_7.xml
index a1c9bda..e1cac11 100644
--- a/.idea/libraries/jackson_datatype_guava_2_9_7.xml
+++ b/.idea/libraries/jackson_datatype_guava_2_9_7.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="jackson-datatype-guava-2.9.7">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-datatype-guava-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-datatype-guava-2.9.7.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-datatype-guava-2.9.7-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-datatype-guava-2.9.7-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/jackson_mrbean_2_9_7.xml b/.idea/libraries/jackson_mrbean_2_9_7.xml
index c6ad942..9707f14 100644
--- a/.idea/libraries/jackson_mrbean_2_9_7.xml
+++ b/.idea/libraries/jackson_mrbean_2_9_7.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="jackson-mrbean-2.9.7">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-module-mrbean-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-module-mrbean-2.9.7.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-module-mrbean-2.9.7-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-module-mrbean-2.9.7-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/jacoco.xml b/.idea/libraries/jacoco.xml
index fb82945..eef318b 100644
--- a/.idea/libraries/jacoco.xml
+++ b/.idea/libraries/jacoco.xml
@@ -1,8 +1,8 @@
 <component name="libraryTable">
   <library name="jacoco">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jacoco/org.jacoco.core-0.8.3.201812281252.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jacoco/org.jacoco.report-0.8.3.201812281252.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jacoco/org.jacoco.core-0.8.3.201812281252.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jacoco/org.jacoco.report-0.8.3.201812281252.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/java_thrift_dependencies.xml b/.idea/libraries/java_thrift_dependencies.xml
index b14ea7a..e1d9498 100644
--- a/.idea/libraries/java_thrift_dependencies.xml
+++ b/.idea/libraries/java_thrift_dependencies.xml
@@ -1,9 +1,9 @@
 <component name="libraryTable">
   <library name="java-thrift-dependencies">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/fbthrift/java-thrift-dependencies.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/fbthrift/java-thrift-dependencies.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/jetty.xml b/.idea/libraries/jetty.xml
index 365b564..f61dde0 100644
--- a/.idea/libraries/jetty.xml
+++ b/.idea/libraries/jetty.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="jetty">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jetty/jetty-all-9.4.9.v20180320-uber.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jetty/jetty-all-9.4.9.v20180320-uber.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/jmh.xml b/.idea/libraries/jmh.xml
index 0bdf9cd..73f9fd7 100644
--- a/.idea/libraries/jmh.xml
+++ b/.idea/libraries/jmh.xml
@@ -1,17 +1,17 @@
 <component name="libraryTable">
   <library name="jmh">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/commons-math3/commons-math3-3.6.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jopt-simple/jopt-simple-4.6.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jmh/jmh-core-1.19.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jmh/jmh-generator-annprocess-1.19.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/commons-math3/commons-math3-3.6.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jopt-simple/jopt-simple-4.6.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jmh/jmh-core-1.19.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jmh/jmh-generator-annprocess-1.19.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/commons-math3/commons-math3-3.6.1-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jopt-simple/jopt-simple-4.6-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jmh/jmh-core-1.19-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jmh/jmh-generator-annprocess-1.19-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/commons-math3/commons-math3-3.6.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jopt-simple/jopt-simple-4.6-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jmh/jmh-core-1.19-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jmh/jmh-generator-annprocess-1.19-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/jna.xml b/.idea/libraries/jna.xml
index d05e27b..3741ea1 100644
--- a/.idea/libraries/jna.xml
+++ b/.idea/libraries/jna.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="jna">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-4.5.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-4.5.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-4.5.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-4.5.1-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/jna_4_5_1.xml b/.idea/libraries/jna_4_5_1.xml
index df7d436..095a16f 100644
--- a/.idea/libraries/jna_4_5_1.xml
+++ b/.idea/libraries/jna_4_5_1.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="jna-4.5.1">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-4.5.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-4.5.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-4.5.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-4.5.1-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/jna_platform.xml b/.idea/libraries/jna_platform.xml
index 542205e..0ef1fba 100644
--- a/.idea/libraries/jna_platform.xml
+++ b/.idea/libraries/jna_platform.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="jna-platform">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-platform-4.5.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-platform-4.5.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-platform-4.5.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-platform-4.5.1-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/jna_platform_4_5_1.xml b/.idea/libraries/jna_platform_4_5_1.xml
index 24acb1e..0ccba73 100644
--- a/.idea/libraries/jna_platform_4_5_1.xml
+++ b/.idea/libraries/jna_platform_4_5_1.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="jna-platform-4.5.1">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-platform-4.5.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-platform-4.5.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jna/jna-platform-4.5.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jna/jna-platform-4.5.1-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/jopt_simple.xml b/.idea/libraries/jopt_simple.xml
index 9cf2f37..f52098d 100644
--- a/.idea/libraries/jopt_simple.xml
+++ b/.idea/libraries/jopt_simple.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="jopt-simple">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jopt-simple/jopt-simple-4.6.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jopt-simple/jopt-simple-4.6.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jopt-simple/jopt-simple-4.6-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jopt-simple/jopt-simple-4.6-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/json_simple.xml b/.idea/libraries/json_simple.xml
index f53db14..1770e9f 100644
--- a/.idea/libraries/json_simple.xml
+++ b/.idea/libraries/json_simple.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="json-simple">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/json-simple/json-simple-1.1.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/json-simple/json-simple-1.1.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/json-simple/json-simple-1.1.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/json-simple/json-simple-1.1.1-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/junit.xml b/.idea/libraries/junit.xml
index 7d59ae6..060d4bf 100644
--- a/.idea/libraries/junit.xml
+++ b/.idea/libraries/junit.xml
@@ -1,15 +1,15 @@
 <component name="libraryTable">
   <library name="junit">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/junit/junit-4.12.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/hamcrest/hamcrest-junit-2.0.0.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/hamcrest/hamcrest-2.1-rc3.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/junit/junit-4.12.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/hamcrest/hamcrest-junit-2.0.0.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/hamcrest/hamcrest-2.1-rc3.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/junit/junit-4.12-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/hamcrest/hamcrest-junit-2.0.0.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/hamcrest/hamcrest-2.1-rc3-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/junit/junit-4.12-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/hamcrest/hamcrest-junit-2.0.0.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/hamcrest/hamcrest-2.1-rc3-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/junitparams.xml b/.idea/libraries/junitparams.xml
index 02bfe5a..e4c21af 100644
--- a/.idea/libraries/junitparams.xml
+++ b/.idea/libraries/junitparams.xml
@@ -1,13 +1,13 @@
 <component name="libraryTable">
   <library name="junitparams">
     <CLASSES>
-      <root url="file://$PROJECT_DIR$/third-party/java/junitparams" />
+      <root url="file://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/junitparams" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="file://$PROJECT_DIR$/third-party/java/junitparams" />
+      <root url="file://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/junitparams" />
     </SOURCES>
-    <jarDirectory url="file://$PROJECT_DIR$/third-party/java/junitparams" recursive="false" />
-    <jarDirectory url="file://$PROJECT_DIR$/third-party/java/junitparams" recursive="false" type="SOURCES" />
+    <jarDirectory url="file://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/junitparams" recursive="false" />
+    <jarDirectory url="file://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/junitparams" recursive="false" type="SOURCES" />
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/light_psi_all.xml b/.idea/libraries/light_psi_all.xml
index 0be791d..1d8ce10 100644
--- a/.idea/libraries/light_psi_all.xml
+++ b/.idea/libraries/light_psi_all.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="light-psi-all">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/grammar-kit/light-psi-all-2018.3-SNAPSHOT.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/grammar-kit/light-psi-all-2018.3-SNAPSHOT.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/maven_lib.xml b/.idea/libraries/maven_lib.xml
index 743ccaa..ff8c073 100644
--- a/.idea/libraries/maven_lib.xml
+++ b/.idea/libraries/maven_lib.xml
@@ -1,41 +1,41 @@
 <component name="libraryTable">
   <library name="maven-lib">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-transport-http-1.0.2.v20150114.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-util-1.0.2.v20150114.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-api-1.0.2.v20150114.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-spi-1.0.2.v20150114.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-connector-basic-1.0.2.v20150114.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-impl-1.0.0.v20140518.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/maven/maven-aether-provider-3.2.5.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/maven/maven-model-3.2.5.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/maven/maven-repository-metadata-3.2.5.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/maven/maven-model-builder-3.2.5.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/plexus/plexus-utils-3.0.20.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/plexus/plexus-interpolation-1.21.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/plexus/plexus-component-annotations-1.5.5.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/slf4j/jcl-over-slf4j-1.6.2.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/httpcomponents/httpclient-4.4.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/httpcomponents/httpcore-4.4.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-transport-file-1.0.2.v20150114.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-transport-http-1.0.2.v20150114.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-util-1.0.2.v20150114.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-api-1.0.2.v20150114.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-spi-1.0.2.v20150114.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-connector-basic-1.0.2.v20150114.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-impl-1.0.0.v20140518.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/maven/maven-aether-provider-3.2.5.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/maven/maven-model-3.2.5.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/maven/maven-repository-metadata-3.2.5.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/maven/maven-model-builder-3.2.5.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/plexus/plexus-utils-3.0.20.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/plexus/plexus-interpolation-1.21.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/plexus/plexus-component-annotations-1.5.5.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/slf4j/jcl-over-slf4j-1.6.2.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/httpcomponents/httpclient-4.4.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/httpcomponents/httpcore-4.4.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-transport-file-1.0.2.v20150114.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-api-1.0.2.v20150114-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-transport-http-1.0.2.v20150114-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-connector-basic-1.0.2.v20150114-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-impl-1.0.0.v20140518-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-spi-1.0.2.v20150114-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-util-1.0.2.v20150114-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/maven/maven-aether-provider-3.2.5-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/maven/maven-model-3.2.5-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/maven/maven-repository-metadata-3.2.5-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/maven/maven-model-builder-3.2.5-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/plexus/plexus-component-annotations-1.5.5-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/plexus/plexus-utils-3.0.20-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/plexus/plexus-interpolation-1.21-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/slf4j/jcl-over-slf4j-1.6.2-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aether/aether-transport-file-1.0.2.v20150114-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-api-1.0.2.v20150114-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-transport-http-1.0.2.v20150114-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-connector-basic-1.0.2.v20150114-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-impl-1.0.0.v20140518-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-spi-1.0.2.v20150114-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-util-1.0.2.v20150114-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/maven/maven-aether-provider-3.2.5-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/maven/maven-model-3.2.5-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/maven/maven-repository-metadata-3.2.5-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/maven/maven-model-builder-3.2.5-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/plexus/plexus-component-annotations-1.5.5-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/plexus/plexus-utils-3.0.20-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/plexus/plexus-interpolation-1.21-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/slf4j/jcl-over-slf4j-1.6.2-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aether/aether-transport-file-1.0.2.v20150114-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/objenesis_1_2.xml b/.idea/libraries/objenesis_1_2.xml
index 711a15e..28271f0 100644
--- a/.idea/libraries/objenesis_1_2.xml
+++ b/.idea/libraries/objenesis_1_2.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="objenesis-1.2">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/objenesis/objenesis-1.2.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/objenesis/objenesis-1.2.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/okhttp.xml b/.idea/libraries/okhttp.xml
index 6783dac..8bba5a3 100644
--- a/.idea/libraries/okhttp.xml
+++ b/.idea/libraries/okhttp.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="okhttp">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/okhttp/okhttp-3.11.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/okhttp/okhttp-3.11.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/okhttp/okhttp-3.11.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/okhttp/okhttp-3.11.0-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/okhttp_tls.xml b/.idea/libraries/okhttp_tls.xml
index d80ee00..225bb11 100644
--- a/.idea/libraries/okhttp_tls.xml
+++ b/.idea/libraries/okhttp_tls.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="okhttp-tls">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/okhttp/okhttp-tls-3.11.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/okhttp/okhttp-tls-3.11.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/okhttp/okhttp-tls-3.11.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/okhttp/okhttp-tls-3.11.0-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/okio.xml b/.idea/libraries/okio.xml
index b456225..6652cfb 100644
--- a/.idea/libraries/okio.xml
+++ b/.idea/libraries/okio.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="okio">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/okio/okio-1.13.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/okio/okio-1.13.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/okio/okio-1.13.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/okio/okio-1.13.0-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/opencensus_api_0_18_0.xml b/.idea/libraries/opencensus_api_0_18_0.xml
index 4bc715c..2b84b8a 100644
--- a/.idea/libraries/opencensus_api_0_18_0.xml
+++ b/.idea/libraries/opencensus_api_0_18_0.xml
@@ -1,13 +1,13 @@
 <component name="libraryTable">
   <library name="opencensus-api-0.18.0">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/opencensus/opencensus-api-0.18.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/opencensus/opencensus-contrib-grpc-metrics-0.18.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/opencensus/opencensus-api-0.18.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/opencensus/opencensus-contrib-grpc-metrics-0.18.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/opencensus/opencensus-api-0.18.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/opencensus/opencensus-contrib-grpc-metrics-0.18.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/opencensus/opencensus-api-0.18.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/opencensus/opencensus-contrib-grpc-metrics-0.18.0-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/oracle_jdk_stubs.xml b/.idea/libraries/oracle_jdk_stubs.xml
index 2814b72..9d9d443 100644
--- a/.idea/libraries/oracle_jdk_stubs.xml
+++ b/.idea/libraries/oracle_jdk_stubs.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="oracle-jdk-stubs">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/jdk/stub-compiler-tree-api.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jdk/stub-compiler-tree-api.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/pf4j_2_0_0_SNAPSHOT.xml b/.idea/libraries/pf4j_2_0_0_SNAPSHOT.xml
index 16df98d..47f0c5e 100644
--- a/.idea/libraries/pf4j_2_0_0_SNAPSHOT.xml
+++ b/.idea/libraries/pf4j_2_0_0_SNAPSHOT.xml
@@ -1,13 +1,13 @@
 <component name="libraryTable">
   <library name="pf4j-2.0.0-SNAPSHOT">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/pf4j/pf4j-2.0.0-SNAPSHOT.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/pf4j/pf4j-2.0.0-SNAPSHOT.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$PROJECT_DIR$/third-party/java/pf4j/pf4j-2.0.0-SNAPSHOT-javadoc.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/pf4j/pf4j-2.0.0-SNAPSHOT-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/pf4j/pf4j-2.0.0-SNAPSHOT-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/pf4j/pf4j-2.0.0-SNAPSHOT-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/protobuf_java_3_7_0.xml b/.idea/libraries/protobuf_java_3_7_0.xml
index c8f487e..1772b99 100644
--- a/.idea/libraries/protobuf_java_3_7_0.xml
+++ b/.idea/libraries/protobuf_java_3_7_0.xml
@@ -1,15 +1,15 @@
 <component name="libraryTable">
   <library name="protobuf-java-3.7.0">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/protobuf/protobuf-java-3.7.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/protobuf/protobuf-lite-3.0.1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/protobuf/protobuf-java-util-3.7.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/protobuf/protobuf-java-3.7.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/protobuf/protobuf-lite-3.0.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/protobuf/protobuf-java-util-3.7.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/protobuf/protobuf-java-3.7.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/protobuf/protobuf-lite-3.0.1-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/protobuf/protobuf-java-util-3.7.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/protobuf/protobuf-java-3.7.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/protobuf/protobuf-lite-3.0.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/protobuf/protobuf-java-util-3.7.0-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/remote_apis.xml b/.idea/libraries/remote_apis.xml
index 58aa2a1..d24bd47 100644
--- a/.idea/libraries/remote_apis.xml
+++ b/.idea/libraries/remote_apis.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="remote-apis">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/remote-apis/remote-apis.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/remote-apis/remote-apis.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/remote-apis/remote-apis.src.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/remote-apis/remote-apis.src.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/slf4j_api_1_7_2.xml b/.idea/libraries/slf4j_api_1_7_2.xml
index acb8979..2973eee 100644
--- a/.idea/libraries/slf4j_api_1_7_2.xml
+++ b/.idea/libraries/slf4j_api_1_7_2.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="slf4j-api-1.7.2">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/slf4j/slf4j-api-1.7.5.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/slf4j/slf4j-api-1.7.5.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/slf4j/slf4j-api-1.7.5-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/slf4j/slf4j-api-1.7.5-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/soy_no_guava.xml b/.idea/libraries/soy_no_guava.xml
index beaf650..5caf7d3 100644
--- a/.idea/libraries/soy_no_guava.xml
+++ b/.idea/libraries/soy_no_guava.xml
@@ -1,21 +1,21 @@
 <component name="libraryTable">
   <library name="soy-no-guava">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/guice/guice-3.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jsr/javax.inject-1.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/guice/guice-multibindings-3.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/aopalliance/aopalliance.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/guice/guice-assistedinject-3.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/closure-templates/soy-excluding-deps.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/icu4j/icu4j-54.1.1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guice/guice-3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jsr/javax.inject-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guice/guice-multibindings-3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aopalliance/aopalliance.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guice/guice-assistedinject-3.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/closure-templates/soy-excluding-deps.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/icu4j/icu4j-54.1.1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/guice/guice-3.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/guice/guice-multibindings-3.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/guice/guice-assistedinject-3.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/closure-templates/soy-excluding-deps-sources.zip!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/icu4j/icu4j-54.1.1-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guice/guice-3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guice/guice-multibindings-3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guice/guice-assistedinject-3.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/closure-templates/soy-excluding-deps-sources.zip!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/icu4j/icu4j-54.1.1-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/sqlite.xml b/.idea/libraries/sqlite.xml
index 63fd7a9..ac56435 100644
--- a/.idea/libraries/sqlite.xml
+++ b/.idea/libraries/sqlite.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="sqlite">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/sqlite/sqlite-jdbc-3.20.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/sqlite/sqlite-jdbc-3.20.0.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/sqlite/sqlite-jdbc-3.20.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/sqlite/sqlite-jdbc-3.20.0-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/stringtemplate.xml b/.idea/libraries/stringtemplate.xml
index dbed12b..6ecbf73 100644
--- a/.idea/libraries/stringtemplate.xml
+++ b/.idea/libraries/stringtemplate.xml
@@ -1,10 +1,10 @@
 <component name="libraryTable">
   <library name="stringtemplate">
     <CLASSES>
-      <root url="file://$PROJECT_DIR$/third-party/java/stringtemplate" />
+      <root url="file://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/stringtemplate" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
-    <jarDirectory url="file://$PROJECT_DIR$/third-party/java/stringtemplate" recursive="false" />
+    <jarDirectory url="file://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/stringtemplate" recursive="false" />
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/test_lib.xml b/.idea/libraries/test_lib.xml
index 05d2589..012d01e 100644
--- a/.idea/libraries/test_lib.xml
+++ b/.idea/libraries/test_lib.xml
@@ -1,26 +1,26 @@
 <component name="libraryTable">
   <library name="test-lib">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/hamcrest/hamcrest-junit-2.0.0.0.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/junit/junit-4.12.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/cglib/cglib-nodep-2.2.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jsr/jsr305.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/args4j/args4j-2.0.30.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/guava/guava-23.3-jre.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/caliper/caliper-1.0-all.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jackson/jackson-core-2.9.7.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/hamcrest/hamcrest-2.1-rc3.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/easymock/easymock-4.0.2.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/hamcrest/hamcrest-junit-2.0.0.0.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/junit/junit-4.12.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/cglib/cglib-nodep-2.2.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jsr/jsr305.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/args4j/args4j-2.0.30.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guava/guava-23.3-jre.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/caliper/caliper-1.0-all.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jackson/jackson-core-2.9.7.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/hamcrest/hamcrest-2.1-rc3.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/easymock/easymock-4.0.2.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/junit/junit-4.12-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/jsr/jsr305.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/args4j/args4j-2.0.30-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/guava/guava-23.3-jre-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/hamcrest/hamcrest-junit-2.0.0.0-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/hamcrest/hamcrest-2.1-rc3-sources.jar!/" />
-      <root url="jar://$PROJECT_DIR$/third-party/java/easymock/easymock-4.0.2-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/junit/junit-4.12-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/jsr/jsr305.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/args4j/args4j-2.0.30-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/guava/guava-23.3-jre-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/hamcrest/hamcrest-junit-2.0.0.0-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/hamcrest/hamcrest-2.1-rc3-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/easymock/easymock-4.0.2-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/testng.xml b/.idea/libraries/testng.xml
index 600e4cd..d55f159 100644
--- a/.idea/libraries/testng.xml
+++ b/.idea/libraries/testng.xml
@@ -1,7 +1,7 @@
 <component name="libraryTable">
   <library name="testng">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/testng/testng-6.8.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/testng/testng-6.8.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
diff --git a/.idea/libraries/vavr_0_9_2.xml b/.idea/libraries/vavr_0_9_2.xml
index b21e47a..42ad9be 100644
--- a/.idea/libraries/vavr_0_9_2.xml
+++ b/.idea/libraries/vavr_0_9_2.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="vavr-0.9.2">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/vavr/vavr-0.9.2.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/vavr/vavr-0.9.2.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/vavr/vavr-0.9.2-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/vavr/vavr-0.9.2-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
diff --git a/.idea/libraries/xz_java_1_5.xml b/.idea/libraries/xz_java_1_5.xml
index a53c10b..6099252 100644
--- a/.idea/libraries/xz_java_1_5.xml
+++ b/.idea/libraries/xz_java_1_5.xml
@@ -1,11 +1,11 @@
 <component name="libraryTable">
   <library name="xz-java-1.5">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/xz-java-1.5/xz-1.5.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/xz-java-1.5/xz-1.5.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/xz-java-1.5/xz-1.5-sources.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/xz-java-1.5/xz-1.5-sources.jar!/" />
     </SOURCES>
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/libraries/zstd_jni_1_4_0_1.xml b/.idea/libraries/zstd_jni_1_4_0_1.xml
index fcefd6a..a4861d4 100644
--- a/.idea/libraries/zstd_jni_1_4_0_1.xml
+++ b/.idea/libraries/zstd_jni_1_4_0_1.xml
@@ -1,9 +1,9 @@
 <component name="libraryTable">
   <library name="zstd-jni-1.4.0-1">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/third-party/java/zstd-jni/zstd-jni-1.4.0-1.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/zstd-jni/zstd-jni-1.4.0-1.jar!/" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
   </library>
-</component>
+</component>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
index 6512af3..1b652cb 100644
--- a/.idea/misc.xml
+++ b/.idea/misc.xml
@@ -45,22 +45,34 @@
     <option name="myDefaultNotNull" value="javax.annotation.Nonnull" />
     <option name="myNullables">
       <value>
-        <list size="5">
+        <list size="11">
           <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />
           <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />
           <item index="2" class="java.lang.String" itemvalue="javax.annotation.CheckForNull" />
           <item index="3" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />
           <item index="4" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />
+          <item index="5" class="java.lang.String" itemvalue="androidx.annotation.Nullable" />
+          <item index="6" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNullable" />
+          <item index="7" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.Nullable" />
+          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableDecl" />
+          <item index="9" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NullableType" />
+          <item index="10" class="java.lang.String" itemvalue="com.android.annotations.Nullable" />
         </list>
       </value>
     </option>
     <option name="myNotNulls">
       <value>
-        <list size="4">
+        <list size="10">
           <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />
           <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />
           <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />
           <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />
+          <item index="4" class="java.lang.String" itemvalue="androidx.annotation.NonNull" />
+          <item index="5" class="java.lang.String" itemvalue="androidx.annotation.RecentlyNonNull" />
+          <item index="6" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.qual.NonNull" />
+          <item index="7" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullDecl" />
+          <item index="8" class="java.lang.String" itemvalue="org.checkerframework.checker.nullness.compatqual.NonNullType" />
+          <item index="9" class="java.lang.String" itemvalue="com.android.annotations.NonNull" />
         </list>
       </value>
     </option>
@@ -68,10 +80,10 @@
   <component name="ProjectResources">
     <default-html-doctype>http://www.w3.org/1999/xhtml</default-html-doctype>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="java 1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/intellij-out/classes" />
   </component>
   <component name="PythonCompatibilityInspectionAdvertiser">
     <option name="version" value="2" />
   </component>
-</project>
+</project>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
index c80f219..b5d870f 100644
--- a/.idea/vcs.xml
+++ b/.idea/vcs.xml
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$/../../../../../MoveMethodDataset/buck/buck" vcs="Git" />
   </component>
-</project>
-
+</project>
\ No newline at end of file
diff --git a/buck.iml b/buck.iml
index 0e5f713..264118a 100644
--- a/buck.iml
+++ b/buck.iml
@@ -2,95 +2,95 @@
 <module type="JAVA_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$">
+    <content url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck">
       <sourceFolder url="file://$MODULE_DIR$/intellij-out/immutables" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/intellij-out/immutables-test" isTestSource="true" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src-gen" isTestSource="false" generated="true" />
-      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
-      <sourceFolder url="file://$MODULE_DIR$/test/com/facebook/buck/android/toolchain/ndk/impl/testdata" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/test/com/facebook/buck/apple/toolchain/impl/testdata" type="java-test-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/test/com/facebook/buck/cli/testdata" type="java-test-resource" relativeOutputPath="com/facebook/buck/cli/testdata" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src-gen" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/android/toolchain/ndk/impl/testdata" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/apple/toolchain/impl/testdata" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/cli/testdata" type="java-test-resource" relativeOutputPath="com/facebook/buck/cli/testdata" />
       <sourceFolder url="file://$MODULE_DIR$/test/com/facebook/buck/config/testdata" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/third-party/java/dx/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/com/facebook/buck/jvm/java/abi/java8" isTestSource="false" packagePrefix="com.facebook.buck.jvm.java.abi" />
-      <sourceFolder url="file://$MODULE_DIR$/src/com/facebook/buck/jvm/java/abi/source/java8" isTestSource="false" packagePrefix="com.facebook.buck.jvm.java.abi.source" />
-      <sourceFolder url="file://$MODULE_DIR$/src/com/facebook/buck/jvm/java/plugin/adapter/java8" isTestSource="false" packagePrefix="com.facebook.buck.jvm.java.plugin.adapter" />
-      <sourceFolder url="file://$MODULE_DIR$/third-party/java/android/annotations/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/third-party/java/aosp/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/com/facebook/buck/core/util/immutables/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/dx/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/jvm/java/abi/java8" isTestSource="false" packagePrefix="com.facebook.buck.jvm.java.abi" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/jvm/java/abi/source/java8" isTestSource="false" packagePrefix="com.facebook.buck.jvm.java.abi.source" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/jvm/java/plugin/adapter/java8" isTestSource="false" packagePrefix="com.facebook.buck.jvm.java.plugin.adapter" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/android/annotations/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/third-party/java/aosp/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/core/util/immutables/resources" type="java-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/jvm/java/abi/java11" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/jvm/java/abi/source/java11" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/jvm/java/plugin/adapter/java11" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/multitenant" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/android/agent/util/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/android/exopackage/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/android/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/apple/clang/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/apple/simulator/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/apple/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/cli/bootstrapper/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/cli/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/core/model/actiongraph/computation/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/core/model/targetgraph/impl/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/core/rules/configsetting/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/core/select/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/crosscell/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/cxx/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/cxx/toolchain/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/distributed/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/event/listener/integration/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/features/gwt/testdata/gwt_binary" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/features/js/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/features/project/intellij/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/features/zip/rules/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/io/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/io/watchman/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/jvm/groovy/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/jvm/java/abi/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/jvm/java/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/jvm/kotlin/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/jvm/scala/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/log/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/maven/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/multitenant" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/parser/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/rules/modern/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/shell/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/step/fs/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/swift/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/test/labels/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/testrunner/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/testutil/endtoend/testdata" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/testutil/integration/testlibs" />
+      <excludeFolder url="file://$MODULE_DIR$/../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/util/versioncontrol/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/.buckd" />
       <excludeFolder url="file://$MODULE_DIR$/ant-out" />
       <excludeFolder url="file://$MODULE_DIR$/buck-out" />
       <excludeFolder url="file://$MODULE_DIR$/src/com/facebook/buck/android/support" />
       <excludeFolder url="file://$MODULE_DIR$/src/com/facebook/buck/intellij" />
-      <excludeFolder url="file://$MODULE_DIR$/src/com/facebook/buck/jvm/java/abi/java11" />
-      <excludeFolder url="file://$MODULE_DIR$/src/com/facebook/buck/jvm/java/abi/source/java11" />
-      <excludeFolder url="file://$MODULE_DIR$/src/com/facebook/buck/jvm/java/plugin/adapter/java11" />
-      <excludeFolder url="file://$MODULE_DIR$/src/com/facebook/buck/multitenant" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/android/agent/util/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/android/exopackage/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/android/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/apple/clang/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/apple/simulator/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/apple/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/apple/xcode/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/cli/bootstrapper/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/cli/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/core/model/actiongraph/computation/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/core/model/targetgraph/impl/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/core/rules/configsetting/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/core/select/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/crosscell/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/cxx/elf/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/cxx/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/cxx/toolchain/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/d/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/distributed/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/dotnet/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/event/listener/integration/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/event/listener/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/features/gwt/testdata/gwt_binary" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/features/js/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/features/project/intellij/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/features/zip/rules/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/go/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/go/testdata/go_test/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/gwt/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/haskell/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/io/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/io/watchman/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/jvm/groovy/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/jvm/java/abi/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/jvm/java/autodeps/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/jvm/java/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/jvm/kotlin/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/jvm/scala/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/log/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/lua/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/macho/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/maven/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/multitenant" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/ocaml/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/parser/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/python/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/rage/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/rules/modern/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/rules/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/rust/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/shell/filegroup/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/shell/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/step/fs/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/swift/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/test/labels/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/testrunner/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/testutil/endtoend/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/testutil/integration/testlibs" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/testutil/packaged_resource/testdata" />
-      <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/util/versioncontrol/testdata" />
       <excludeFolder url="file://$MODULE_DIR$/test/com/facebook/buck/zip/testdata" />
     </content>
-    <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
+    <orderEntry type="jdk" jdkName="java 1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="asm" level="project" />
     <orderEntry type="library" name="buck-lib" level="project" />
@@ -145,4 +145,4 @@
     <orderEntry type="library" name="devspeed.logging" level="project" />
     <orderEntry type="library" name="KotlinJavaRuntime" level="project" />
   </component>
-</module>
+</module>
\ No newline at end of file
diff --git a/programs/programs.iml b/programs/programs.iml
index 09ca534..0622cec 100644
--- a/programs/programs.iml
+++ b/programs/programs.iml
@@ -2,15 +2,15 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 2.7" jdkType="Python SDK" />
+    <content url="file://$MODULE_DIR$/../../../../../../MoveMethodDataset/buck/buck/programs" />
+    <orderEntry type="jdk" jdkName="java 1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="module-library">
       <library name="Third-Party Deps">
         <CLASSES />
         <JAVADOC />
         <SOURCES>
-          <root url="file://$MODULE_DIR$/../third-party/nailgun" />
+          <root url="file://$MODULE_DIR$/../../../../../../MoveMethodDataset/buck/buck/third-party/nailgun" />
         </SOURCES>
       </library>
     </orderEntry>
diff --git a/python-dsl/python-dsl.iml b/python-dsl/python-dsl.iml
index 1705db2..67b4ef5 100644
--- a/python-dsl/python-dsl.iml
+++ b/python-dsl/python-dsl.iml
@@ -2,13 +2,13 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 2.7" jdkType="Python SDK" />
+    <content url="file://$MODULE_DIR$/../../../../../../MoveMethodDataset/buck/buck/python-dsl" />
+    <orderEntry type="jdk" jdkName="java 1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="module-library">
       <library>
         <CLASSES>
-          <root url="file://$MODULE_DIR$/../third-party/py/pywatchman" />
+          <root url="file://$MODULE_DIR$/../../../../../../MoveMethodDataset/buck/buck/third-party/py/pywatchman" />
         </CLASSES>
         <JAVADOC />
         <SOURCES />
@@ -17,7 +17,7 @@
     <orderEntry type="module-library">
       <library>
         <CLASSES>
-          <root url="file://$MODULE_DIR$/../third-party/py/pathlib" />
+          <root url="file://$MODULE_DIR$/../../../../../../MoveMethodDataset/buck/buck/third-party/py/pathlib" />
         </CLASSES>
         <JAVADOC />
         <SOURCES />
@@ -26,11 +26,11 @@
     <orderEntry type="module-library">
       <library>
         <CLASSES>
-          <root url="file://$MODULE_DIR$/../third-party/py/six" />
+          <root url="file://$MODULE_DIR$/../../../../../../MoveMethodDataset/buck/buck/third-party/py/six" />
         </CLASSES>
         <JAVADOC />
         <SOURCES />
       </library>
     </orderEntry>
   </component>
-</module>
+</module>
\ No newline at end of file
diff --git a/scripts/scripts.iml b/scripts/scripts.iml
index 20f48fa..68d0999 100644
--- a/scripts/scripts.iml
+++ b/scripts/scripts.iml
@@ -2,8 +2,8 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 2.7" jdkType="Python SDK" />
+    <content url="file://$MODULE_DIR$/../../../../../../MoveMethodDataset/buck/buck/scripts" />
+    <orderEntry type="jdk" jdkName="java 1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/ArtifactMetadata.java b/src-gen/com/facebook/buck/artifact_cache/thrift/ArtifactMetadata.java
index d8710f4..0d9d722 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/ArtifactMetadata.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/ArtifactMetadata.java
@@ -258,13 +258,6 @@ public class ArtifactMetadata implements org.apache.thrift.TBase<ArtifactMetadat
     return (this.ruleKeys == null) ? null : this.ruleKeys.iterator();
   }
 
-  public void addToRuleKeys(RuleKey elem) {
-    if (this.ruleKeys == null) {
-      this.ruleKeys = new java.util.ArrayList<RuleKey>();
-    }
-    this.ruleKeys.add(elem);
-  }
-
   public java.util.List<RuleKey> getRuleKeys() {
     return this.ruleKeys;
   }
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheDeleteResponse.java b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheDeleteResponse.java
index f73c2d9..b970a3e 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheDeleteResponse.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheDeleteResponse.java
@@ -112,11 +112,6 @@ public class BuckCacheDeleteResponse implements org.apache.thrift.TBase<BuckCach
     return this.debugInfo;
   }
 
-  public BuckCacheDeleteResponse setDebugInfo(DeleteDebugInfo debugInfo) {
-    this.debugInfo = debugInfo;
-    return this;
-  }
-
   public void unsetDebugInfo() {
     this.debugInfo = null;
   }
@@ -138,7 +133,7 @@ public class BuckCacheDeleteResponse implements org.apache.thrift.TBase<BuckCach
       if (value == null) {
         unsetDebugInfo();
       } else {
-        setDebugInfo((DeleteDebugInfo)value);
+        ((DeleteDebugInfo)value).setDebugInfo(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheFetchResponse.java b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheFetchResponse.java
index 92b22ca..913f3a6 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheFetchResponse.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheFetchResponse.java
@@ -194,11 +194,6 @@ public class BuckCacheFetchResponse implements org.apache.thrift.TBase<BuckCache
     return this.debugInfo;
   }
 
-  public BuckCacheFetchResponse setDebugInfo(FetchDebugInfo debugInfo) {
-    this.debugInfo = debugInfo;
-    return this;
-  }
-
   public void unsetDebugInfo() {
     this.debugInfo = null;
   }
@@ -270,7 +265,7 @@ public class BuckCacheFetchResponse implements org.apache.thrift.TBase<BuckCache
       if (value == null) {
         unsetDebugInfo();
       } else {
-        setDebugInfo((FetchDebugInfo)value);
+        ((FetchDebugInfo)value).setDebugInfo(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheRequest.java b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheRequest.java
index 3b42bae..6caf360 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheRequest.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheRequest.java
@@ -253,15 +253,6 @@ public class BuckCacheRequest implements org.apache.thrift.TBase<BuckCacheReques
     return this.type;
   }
 
-  /**
-   * 
-   * @see BuckCacheRequestType
-   */
-  public BuckCacheRequest setType(BuckCacheRequestType type) {
-    this.type = type;
-    return this;
-  }
-
   public void unsetType() {
     this.type = null;
   }
@@ -562,7 +553,7 @@ public class BuckCacheRequest implements org.apache.thrift.TBase<BuckCacheReques
       if (value == null) {
         unsetType();
       } else {
-        setType((BuckCacheRequestType)value);
+        ((BuckCacheRequestType)value).setType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheRequestType.java b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheRequestType.java
index fe1a0aa..a326c04 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheRequestType.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheRequestType.java
@@ -62,4 +62,14 @@ public enum BuckCacheRequestType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see BuckCacheRequestType
+   * @param buckCacheRequest
+   */
+  public BuckCacheRequest setType(BuckCacheRequest buckCacheRequest) {
+    buckCacheRequest.type = this;
+    return buckCacheRequest;
+  }
 }
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheResponse.java b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheResponse.java
index 2ee42ff..db5adc9 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheResponse.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheResponse.java
@@ -380,13 +380,6 @@ public class BuckCacheResponse implements org.apache.thrift.TBase<BuckCacheRespo
     return (this.payloads == null) ? null : this.payloads.iterator();
   }
 
-  public void addToPayloads(PayloadInfo elem) {
-    if (this.payloads == null) {
-      this.payloads = new java.util.ArrayList<PayloadInfo>();
-    }
-    this.payloads.add(elem);
-  }
-
   public java.util.List<PayloadInfo> getPayloads() {
     return this.payloads;
   }
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheStoreResponse.java b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheStoreResponse.java
index 2f50803..7f1d6ad 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheStoreResponse.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/BuckCacheStoreResponse.java
@@ -112,11 +112,6 @@ public class BuckCacheStoreResponse implements org.apache.thrift.TBase<BuckCache
     return this.debugInfo;
   }
 
-  public BuckCacheStoreResponse setDebugInfo(StoreDebugInfo debugInfo) {
-    this.debugInfo = debugInfo;
-    return this;
-  }
-
   public void unsetDebugInfo() {
     this.debugInfo = null;
   }
@@ -138,7 +133,7 @@ public class BuckCacheStoreResponse implements org.apache.thrift.TBase<BuckCache
       if (value == null) {
         unsetDebugInfo();
       } else {
-        setDebugInfo((StoreDebugInfo)value);
+        ((StoreDebugInfo)value).setDebugInfo(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/ContainsResult.java b/src-gen/com/facebook/buck/artifact_cache/thrift/ContainsResult.java
index 089b1f3..4064e12 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/ContainsResult.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/ContainsResult.java
@@ -135,15 +135,6 @@ public class ContainsResult implements org.apache.thrift.TBase<ContainsResult, C
     return this.resultType;
   }
 
-  /**
-   * 
-   * @see ContainsResultType
-   */
-  public ContainsResult setResultType(ContainsResultType resultType) {
-    this.resultType = resultType;
-    return this;
-  }
-
   public void unsetResultType() {
     this.resultType = null;
   }
@@ -189,7 +180,7 @@ public class ContainsResult implements org.apache.thrift.TBase<ContainsResult, C
       if (value == null) {
         unsetResultType();
       } else {
-        setResultType((ContainsResultType)value);
+        ((ContainsResultType)value).setResultType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/ContainsResultType.java b/src-gen/com/facebook/buck/artifact_cache/thrift/ContainsResultType.java
index 8cd21b2..71d50b3 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/ContainsResultType.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/ContainsResultType.java
@@ -41,4 +41,14 @@ public enum ContainsResultType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see ContainsResultType
+   * @param containsResult
+   */
+  public ContainsResult setResultType(ContainsResult containsResult) {
+    containsResult.resultType = this;
+    return containsResult;
+  }
 }
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/DeleteDebugInfo.java b/src-gen/com/facebook/buck/artifact_cache/thrift/DeleteDebugInfo.java
index 69701f0..5afe1e2 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/DeleteDebugInfo.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/DeleteDebugInfo.java
@@ -18,6 +18,11 @@ public class DeleteDebugInfo implements org.apache.thrift.TBase<DeleteDebugInfo,
 
   public java.util.List<java.lang.String> storesDeletedFrom; // optional
 
+  public BuckCacheDeleteResponse setDebugInfo(BuckCacheDeleteResponse buckCacheDeleteResponse) {
+    buckCacheDeleteResponse.debugInfo = this;
+    return buckCacheDeleteResponse;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     STORES_DELETED_FROM((short)1, "storesDeletedFrom");
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/FetchDebugInfo.java b/src-gen/com/facebook/buck/artifact_cache/thrift/FetchDebugInfo.java
index 53ad686..3e3b8c7 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/FetchDebugInfo.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/FetchDebugInfo.java
@@ -22,6 +22,11 @@ public class FetchDebugInfo implements org.apache.thrift.TBase<FetchDebugInfo, F
   public java.lang.String fastestCacheHitStore; // optional
   public java.lang.String fastestCacheHitStoreId; // optional
 
+  public BuckCacheFetchResponse setDebugInfo(BuckCacheFetchResponse buckCacheFetchResponse) {
+    buckCacheFetchResponse.debugInfo = this;
+    return buckCacheFetchResponse;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     STORES_LOOKED_UP((short)1, "storesLookedUp"),
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/FetchResult.java b/src-gen/com/facebook/buck/artifact_cache/thrift/FetchResult.java
index 25119ed..5987694 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/FetchResult.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/FetchResult.java
@@ -157,15 +157,6 @@ public class FetchResult implements org.apache.thrift.TBase<FetchResult, FetchRe
     return this.resultType;
   }
 
-  /**
-   * 
-   * @see FetchResultType
-   */
-  public FetchResult setResultType(FetchResultType resultType) {
-    this.resultType = resultType;
-    return this;
-  }
-
   public void unsetResultType() {
     this.resultType = null;
   }
@@ -269,7 +260,7 @@ public class FetchResult implements org.apache.thrift.TBase<FetchResult, FetchRe
       if (value == null) {
         unsetResultType();
       } else {
-        setResultType((FetchResultType)value);
+        ((FetchResultType)value).setResultType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/FetchResultType.java b/src-gen/com/facebook/buck/artifact_cache/thrift/FetchResultType.java
index 8834860..939acf1 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/FetchResultType.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/FetchResultType.java
@@ -50,4 +50,14 @@ public enum FetchResultType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see FetchResultType
+   * @param fetchResult
+   */
+  public FetchResult setResultType(FetchResult fetchResult) {
+    fetchResult.resultType = this;
+    return fetchResult;
+  }
 }
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/Manifest.java b/src-gen/com/facebook/buck/artifact_cache/thrift/Manifest.java
index ead6329..1579014 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/Manifest.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/Manifest.java
@@ -20,6 +20,11 @@ public class Manifest implements org.apache.thrift.TBase<Manifest, Manifest._Fie
   public java.lang.String key; // optional
   public java.util.List<java.nio.ByteBuffer> values; // optional
 
+  public ManifestSetRequest setManifest(ManifestSetRequest manifestSetRequest) {
+    manifestSetRequest.manifest = this;
+    return manifestSetRequest;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     KEY((short)1, "key"),
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/ManifestSetRequest.java b/src-gen/com/facebook/buck/artifact_cache/thrift/ManifestSetRequest.java
index 8ef5d34..fba898f 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/ManifestSetRequest.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/ManifestSetRequest.java
@@ -112,11 +112,6 @@ public class ManifestSetRequest implements org.apache.thrift.TBase<ManifestSetRe
     return this.manifest;
   }
 
-  public ManifestSetRequest setManifest(Manifest manifest) {
-    this.manifest = manifest;
-    return this;
-  }
-
   public void unsetManifest() {
     this.manifest = null;
   }
@@ -138,7 +133,7 @@ public class ManifestSetRequest implements org.apache.thrift.TBase<ManifestSetRe
       if (value == null) {
         unsetManifest();
       } else {
-        setManifest((Manifest)value);
+        ((Manifest)value).setManifest(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/PayloadInfo.java b/src-gen/com/facebook/buck/artifact_cache/thrift/PayloadInfo.java
index 131b71b..8d8d7b3 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/PayloadInfo.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/PayloadInfo.java
@@ -18,6 +18,13 @@ public class PayloadInfo implements org.apache.thrift.TBase<PayloadInfo, Payload
 
   public long sizeBytes; // optional
 
+  public void addToPayloads(BuckCacheResponse buckCacheResponse) {
+    if (buckCacheResponse.payloads == null) {
+      buckCacheResponse.payloads = new java.util.ArrayList<PayloadInfo>();
+    }
+    buckCacheResponse.payloads.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     SIZE_BYTES((short)1, "sizeBytes");
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/RuleKey.java b/src-gen/com/facebook/buck/artifact_cache/thrift/RuleKey.java
index 99075ab..2cd4009 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/RuleKey.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/RuleKey.java
@@ -18,6 +18,13 @@ public class RuleKey implements org.apache.thrift.TBase<RuleKey, RuleKey._Fields
 
   public java.lang.String hashString; // optional
 
+  public void addToRuleKeys(ArtifactMetadata artifactMetadata) {
+    if (artifactMetadata.ruleKeys == null) {
+      artifactMetadata.ruleKeys = new java.util.ArrayList<RuleKey>();
+    }
+    artifactMetadata.ruleKeys.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     HASH_STRING((short)1, "hashString");
diff --git a/src-gen/com/facebook/buck/artifact_cache/thrift/StoreDebugInfo.java b/src-gen/com/facebook/buck/artifact_cache/thrift/StoreDebugInfo.java
index 152413f..5276a0a 100644
--- a/src-gen/com/facebook/buck/artifact_cache/thrift/StoreDebugInfo.java
+++ b/src-gen/com/facebook/buck/artifact_cache/thrift/StoreDebugInfo.java
@@ -20,6 +20,11 @@ public class StoreDebugInfo implements org.apache.thrift.TBase<StoreDebugInfo, S
   public java.util.List<java.lang.String> storesWrittenInto; // optional
   public long artifactSizeBytes; // optional
 
+  public BuckCacheStoreResponse setDebugInfo(BuckCacheStoreResponse buckCacheStoreResponse) {
+    buckCacheStoreResponse.debugInfo = this;
+    return buckCacheStoreResponse;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     STORES_WRITTEN_INTO((short)1, "storesWrittenInto"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/Announcement.java b/src-gen/com/facebook/buck/distributed/thrift/Announcement.java
index e27c1bf..6579bd0 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/Announcement.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/Announcement.java
@@ -20,6 +20,13 @@ public class Announcement implements org.apache.thrift.TBase<Announcement, Annou
   public java.lang.String errorMessage; // optional
   public java.lang.String solutionMessage; // optional
 
+  public void addToAnnouncements(AnnouncementResponse announcementResponse) {
+    if (announcementResponse.announcements == null) {
+      announcementResponse.announcements = new java.util.ArrayList<Announcement>();
+    }
+    announcementResponse.announcements.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     ERROR_MESSAGE((short)1, "errorMessage"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/AnnouncementResponse.java b/src-gen/com/facebook/buck/distributed/thrift/AnnouncementResponse.java
index ec3752d..bb9c841 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/AnnouncementResponse.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/AnnouncementResponse.java
@@ -121,13 +121,6 @@ public class AnnouncementResponse implements org.apache.thrift.TBase<Announcemen
     return (this.announcements == null) ? null : this.announcements.iterator();
   }
 
-  public void addToAnnouncements(Announcement elem) {
-    if (this.announcements == null) {
-      this.announcements = new java.util.ArrayList<Announcement>();
-    }
-    this.announcements.add(elem);
-  }
-
   public java.util.List<Announcement> getAnnouncements() {
     return this.announcements;
   }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuckVersion.java b/src-gen/com/facebook/buck/distributed/thrift/BuckVersion.java
index 4791ed6..7bd37ce 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuckVersion.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuckVersion.java
@@ -149,15 +149,6 @@ public class BuckVersion implements org.apache.thrift.TBase<BuckVersion, BuckVer
     return this.type;
   }
 
-  /**
-   * 
-   * @see BuckVersionType
-   */
-  public BuckVersion setType(BuckVersionType type) {
-    this.type = type;
-    return this;
-  }
-
   public void unsetType() {
     this.type = null;
   }
@@ -227,7 +218,7 @@ public class BuckVersion implements org.apache.thrift.TBase<BuckVersion, BuckVer
       if (value == null) {
         unsetType();
       } else {
-        setType((BuckVersionType)value);
+        ((BuckVersionType)value).setType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuckVersionType.java b/src-gen/com/facebook/buck/distributed/thrift/BuckVersionType.java
index a731f66..7eefce1 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuckVersionType.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuckVersionType.java
@@ -41,4 +41,14 @@ public enum BuckVersionType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see BuckVersionType
+   * @param buckVersion
+   */
+  public BuckVersion setType(BuckVersion buckVersion) {
+    buckVersion.type = this;
+    return buckVersion;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildJob.java b/src-gen/com/facebook/buck/distributed/thrift/BuildJob.java
index be95dd8..095d29a 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildJob.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildJob.java
@@ -6,6 +6,9 @@
  */
 package com.facebook.buck.distributed.thrift;
 
+import com.facebook.buck.distributed.BuildStatusUtil;
+import com.facebook.buck.distributed.build_client.BuildPhase;
+
 @SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
 @javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)")
 public class BuildJob implements org.apache.thrift.TBase<BuildJob, BuildJob._Fields>, java.io.Serializable, Cloneable, Comparable<BuildJob> {
@@ -50,6 +53,20 @@ public class BuildJob implements org.apache.thrift.TBase<BuildJob, BuildJob._Fie
    */
   public QueueType queueType; // optional
 
+  public boolean allSlavesFinished(BuildPhase buildPhase) {
+    // In case no slaves ever joined the build.
+    if (!isSetBuildSlaves()) {
+      return true;
+    }
+
+    for (BuildSlaveInfo slaveInfo : getBuildSlaves()) {
+      if (!BuildStatusUtil.isTerminalBuildStatus(slaveInfo.getStatus())) {
+        return false;
+      }
+    }
+    return true;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     STAMPEDE_ID((short)1, "stampedeId"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildJobState.java b/src-gen/com/facebook/buck/distributed/thrift/BuildJobState.java
index 88beb54..2fd1544 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildJobState.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildJobState.java
@@ -185,13 +185,6 @@ public class BuildJobState implements org.apache.thrift.TBase<BuildJobState, Bui
     return (this.cells == null) ? 0 : this.cells.size();
   }
 
-  public void putToCells(int key, BuildJobStateCell val) {
-    if (this.cells == null) {
-      this.cells = new java.util.HashMap<java.lang.Integer,BuildJobStateCell>();
-    }
-    this.cells.put(key, val);
-  }
-
   public java.util.Map<java.lang.Integer,BuildJobStateCell> getCells() {
     return this.cells;
   }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateBuildTarget.java b/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateBuildTarget.java
index 75f8d57..042ebdd 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateBuildTarget.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateBuildTarget.java
@@ -24,6 +24,11 @@ public class BuildJobStateBuildTarget implements org.apache.thrift.TBase<BuildJo
   public java.lang.String shortName; // optional
   public java.util.Set<java.lang.String> flavors; // optional
 
+  public BuildJobStateTargetNode setBuildTarget(BuildJobStateTargetNode buildJobStateTargetNode) {
+    buildJobStateTargetNode.buildTarget = this;
+    return buildJobStateTargetNode;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     CELL_NAME((short)1, "cellName"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateCell.java b/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateCell.java
index da7c669..0447230 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateCell.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateCell.java
@@ -22,6 +22,13 @@ public class BuildJobStateCell implements org.apache.thrift.TBase<BuildJobStateC
   public BuildJobStateBuckConfig config; // optional
   public java.lang.String canonicalName; // optional
 
+  public void putToCells(int key, BuildJobState buildJobState) {
+    if (buildJobState.cells == null) {
+      buildJobState.cells = new java.util.HashMap<Integer,BuildJobStateCell>();
+    }
+    buildJobState.cells.put(key, this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     NAME_HINT((short)1, "nameHint"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateFileHashEntry.java b/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateFileHashEntry.java
index 8970e19..614f2ac 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateFileHashEntry.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateFileHashEntry.java
@@ -6,6 +6,11 @@
  */
 package com.facebook.buck.distributed.thrift;
 
+import com.facebook.buck.distributed.InlineContentsProvider;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.nio.file.Path;
+
 @SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
 @javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)")
 public class BuildJobStateFileHashEntry implements org.apache.thrift.TBase<BuildJobStateFileHashEntry, BuildJobStateFileHashEntry._Fields>, java.io.Serializable, Cloneable, Comparable<BuildJobStateFileHashEntry> {
@@ -38,6 +43,20 @@ public class BuildJobStateFileHashEntry implements org.apache.thrift.TBase<Build
   public boolean isExecutable; // optional
   public boolean materializeDuringPreloading; // optional
 
+  public boolean materializeFileContents(Path targetAbsPath,
+      InlineContentsProvider inlineContentsProvider)
+      throws IOException {
+    if (isSetContents()) {
+      try (OutputStream outputStream = inlineContentsProvider.newOutputStream(targetAbsPath)) {
+        outputStream.write(getContents());
+      }
+
+      return true;
+    }
+
+    return false;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     PATH((short)1, "path"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateTargetNode.java b/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateTargetNode.java
index e5bf1b6..b4ce935 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateTargetNode.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildJobStateTargetNode.java
@@ -183,11 +183,6 @@ public class BuildJobStateTargetNode implements org.apache.thrift.TBase<BuildJob
     return this.buildTarget;
   }
 
-  public BuildJobStateTargetNode setBuildTarget(BuildJobStateBuildTarget buildTarget) {
-    this.buildTarget = buildTarget;
-    return this;
-  }
-
   public void unsetBuildTarget() {
     this.buildTarget = null;
   }
@@ -225,7 +220,7 @@ public class BuildJobStateTargetNode implements org.apache.thrift.TBase<BuildJob
       if (value == null) {
         unsetBuildTarget();
       } else {
-        setBuildTarget((BuildJobStateBuildTarget)value);
+        ((BuildJobStateBuildTarget)value).setBuildTarget(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildMode.java b/src-gen/com/facebook/buck/distributed/thrift/BuildMode.java
index 58034c2..eb8173f 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildMode.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildMode.java
@@ -47,4 +47,14 @@ public enum BuildMode implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see BuildMode
+   * @param buildModeInfo
+   */
+  public BuildModeInfo setMode(BuildModeInfo buildModeInfo) {
+    buildModeInfo.mode = this;
+    return buildModeInfo;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildModeInfo.java b/src-gen/com/facebook/buck/distributed/thrift/BuildModeInfo.java
index b01ae52..c07c66c 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildModeInfo.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildModeInfo.java
@@ -173,15 +173,6 @@ public class BuildModeInfo implements org.apache.thrift.TBase<BuildModeInfo, Bui
     return this.mode;
   }
 
-  /**
-   * 
-   * @see BuildMode
-   */
-  public BuildModeInfo setMode(BuildMode mode) {
-    this.mode = mode;
-    return this;
-  }
-
   public void unsetMode() {
     this.mode = null;
   }
@@ -297,7 +288,7 @@ public class BuildModeInfo implements org.apache.thrift.TBase<BuildModeInfo, Bui
       if (value == null) {
         unsetMode();
       } else {
-        setMode((BuildMode)value);
+        ((BuildMode)value).setMode(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveConsoleEvent.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveConsoleEvent.java
index 83d6f45..63f9ba7 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveConsoleEvent.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveConsoleEvent.java
@@ -159,15 +159,6 @@ public class BuildSlaveConsoleEvent implements org.apache.thrift.TBase<BuildSlav
     return this.severity;
   }
 
-  /**
-   * 
-   * @see ConsoleEventSeverity
-   */
-  public BuildSlaveConsoleEvent setSeverity(ConsoleEventSeverity severity) {
-    this.severity = severity;
-    return this;
-  }
-
   public void unsetSeverity() {
     this.severity = null;
   }
@@ -197,7 +188,7 @@ public class BuildSlaveConsoleEvent implements org.apache.thrift.TBase<BuildSlav
       if (value == null) {
         unsetSeverity();
       } else {
-        setSeverity((ConsoleEventSeverity)value);
+        ((ConsoleEventSeverity)value).setSeverity(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEvent.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEvent.java
index dadfec0..8e4f5dc 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEvent.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEvent.java
@@ -206,15 +206,6 @@ public class BuildSlaveEvent implements org.apache.thrift.TBase<BuildSlaveEvent,
     return this.eventType;
   }
 
-  /**
-   * 
-   * @see BuildSlaveEventType
-   */
-  public BuildSlaveEvent setEventType(BuildSlaveEventType eventType) {
-    this.eventType = eventType;
-    return this;
-  }
-
   public void unsetEventType() {
     this.eventType = null;
   }
@@ -403,7 +394,7 @@ public class BuildSlaveEvent implements org.apache.thrift.TBase<BuildSlaveEvent,
       if (value == null) {
         unsetEventType();
       } else {
-        setEventType((BuildSlaveEventType)value);
+        ((BuildSlaveEventType)value).setEventType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventType.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventType.java
index 6443799..8441cb3 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventType.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventType.java
@@ -59,4 +59,14 @@ public enum BuildSlaveEventType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see BuildSlaveEventType
+   * @param buildSlaveEvent
+   */
+  public BuildSlaveEvent setEventType(BuildSlaveEvent buildSlaveEvent) {
+    buildSlaveEvent.eventType = this;
+    return buildSlaveEvent;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventsQuery.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventsQuery.java
index f957b26..22974f5 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventsQuery.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventsQuery.java
@@ -22,6 +22,11 @@ public class BuildSlaveEventsQuery implements org.apache.thrift.TBase<BuildSlave
   public BuildSlaveRunId buildSlaveRunId; // optional
   public int firstEventNumber; // optional
 
+  public BuildSlaveEventsRange setQuery(BuildSlaveEventsRange buildSlaveEventsRange) {
+    buildSlaveEventsRange.query = this;
+    return buildSlaveEventsRange;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     STAMPEDE_ID((short)1, "stampedeId"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventsRange.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventsRange.java
index c24cd57..1093685 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventsRange.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveEventsRange.java
@@ -199,11 +199,6 @@ public class BuildSlaveEventsRange implements org.apache.thrift.TBase<BuildSlave
     return this.query;
   }
 
-  public BuildSlaveEventsRange setQuery(BuildSlaveEventsQuery query) {
-    this.query = query;
-    return this;
-  }
-
   public void unsetQuery() {
     this.query = null;
   }
@@ -280,7 +275,7 @@ public class BuildSlaveEventsRange implements org.apache.thrift.TBase<BuildSlave
       if (value == null) {
         unsetQuery();
       } else {
-        setQuery((BuildSlaveEventsQuery)value);
+        ((BuildSlaveEventsQuery)value).setQuery(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveFinishedStats.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveFinishedStats.java
index 49a31e6..843f79c 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveFinishedStats.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveFinishedStats.java
@@ -238,11 +238,6 @@ public class BuildSlaveFinishedStats implements org.apache.thrift.TBase<BuildSla
     return this.fileMaterializationStats;
   }
 
-  public BuildSlaveFinishedStats setFileMaterializationStats(FileMaterializationStats fileMaterializationStats) {
-    this.fileMaterializationStats = fileMaterializationStats;
-    return this;
-  }
-
   public void unsetFileMaterializationStats() {
     this.fileMaterializationStats = null;
   }
@@ -400,7 +395,7 @@ public class BuildSlaveFinishedStats implements org.apache.thrift.TBase<BuildSla
       if (value == null) {
         unsetFileMaterializationStats();
       } else {
-        setFileMaterializationStats((FileMaterializationStats)value);
+        ((FileMaterializationStats)value).setFileMaterializationStats(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveInfo.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveInfo.java
index f1ce423..413abc7 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveInfo.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveInfo.java
@@ -233,15 +233,6 @@ public class BuildSlaveInfo implements org.apache.thrift.TBase<BuildSlaveInfo, B
     return this.status;
   }
 
-  /**
-   * 
-   * @see BuildStatus
-   */
-  public BuildSlaveInfo setStatus(BuildStatus status) {
-    this.status = status;
-    return this;
-  }
-
   public void unsetStatus() {
     this.status = null;
   }
@@ -287,7 +278,7 @@ public class BuildSlaveInfo implements org.apache.thrift.TBase<BuildSlaveInfo, B
       if (value == null) {
         unsetStatus();
       } else {
-        setStatus((BuildStatus)value);
+        ((BuildStatus)value).setStatus(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRequest.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRequest.java
index 438e7c5..bc86a42 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRequest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRequest.java
@@ -171,15 +171,6 @@ public class BuildSlaveRequest implements org.apache.thrift.TBase<BuildSlaveRequ
     return this.type;
   }
 
-  /**
-   * 
-   * @see BuildSlaveRequestType
-   */
-  public BuildSlaveRequest setType(BuildSlaveRequestType type) {
-    this.type = type;
-    return this;
-  }
-
   public void unsetType() {
     this.type = null;
   }
@@ -297,7 +288,7 @@ public class BuildSlaveRequest implements org.apache.thrift.TBase<BuildSlaveRequ
       if (value == null) {
         unsetType();
       } else {
-        setType((BuildSlaveRequestType)value);
+        ((BuildSlaveRequestType)value).setType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRequestType.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRequestType.java
index 5a9bd5a..3a09ffe 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRequestType.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRequestType.java
@@ -47,4 +47,14 @@ public enum BuildSlaveRequestType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see BuildSlaveRequestType
+   * @param buildSlaveRequest
+   */
+  public BuildSlaveRequest setType(BuildSlaveRequest buildSlaveRequest) {
+    buildSlaveRequest.type = this;
+    return buildSlaveRequest;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveResponse.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveResponse.java
index 351c470..bb405e4 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveResponse.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveResponse.java
@@ -270,11 +270,6 @@ public class BuildSlaveResponse implements org.apache.thrift.TBase<BuildSlaveRes
     return this.getAllAvailableCapacityResponse;
   }
 
-  public BuildSlaveResponse setGetAllAvailableCapacityResponse(GetAllAvailableCapacityResponse getAllAvailableCapacityResponse) {
-    this.getAllAvailableCapacityResponse = getAllAvailableCapacityResponse;
-    return this;
-  }
-
   public void unsetGetAllAvailableCapacityResponse() {
     this.getAllAvailableCapacityResponse = null;
   }
@@ -392,7 +387,7 @@ public class BuildSlaveResponse implements org.apache.thrift.TBase<BuildSlaveRes
       if (value == null) {
         unsetGetAllAvailableCapacityResponse();
       } else {
-        setGetAllAvailableCapacityResponse((GetAllAvailableCapacityResponse)value);
+        ((GetAllAvailableCapacityResponse)value).setGetAllAvailableCapacityResponse(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRunId.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRunId.java
index 0aa12a5..14dc8d8 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRunId.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveRunId.java
@@ -6,6 +6,8 @@
  */
 package com.facebook.buck.distributed.thrift;
 
+import com.facebook.buck.distributed.DistBuildService;
+
 @SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
 @javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)")
 public class BuildSlaveRunId implements org.apache.thrift.TBase<BuildSlaveRunId, BuildSlaveRunId._Fields>, java.io.Serializable, Cloneable, Comparable<BuildSlaveRunId> {
@@ -18,6 +20,15 @@ public class BuildSlaveRunId implements org.apache.thrift.TBase<BuildSlaveRunId,
 
   public java.lang.String id; // optional
 
+  public BuildSlaveEventsQuery createBuildSlaveEventsQuery(
+      StampedeId stampedeId, int firstEventToBeFetched, DistBuildService distBuildService) {
+    BuildSlaveEventsQuery query = new BuildSlaveEventsQuery();
+    query.setStampedeId(stampedeId);
+    query.setBuildSlaveRunId(this);
+    query.setFirstEventNumber(firstEventToBeFetched);
+    return query;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     ID((short)1, "id");
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveStatus.java b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveStatus.java
index 21b08d8..1ef21cd 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveStatus.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildSlaveStatus.java
@@ -6,6 +6,8 @@
  */
 package com.facebook.buck.distributed.thrift;
 
+import com.facebook.buck.event.listener.DistBuildSlaveStateRenderer;
+
 @SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
 @javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)")
 public class BuildSlaveStatus implements org.apache.thrift.TBase<BuildSlaveStatus, BuildSlaveStatus._Fields>, java.io.Serializable, Cloneable, Comparable<BuildSlaveStatus> {
@@ -42,6 +44,10 @@ public class BuildSlaveStatus implements org.apache.thrift.TBase<BuildSlaveStatu
   public int httpArtifactUploadsFailureCount; // optional
   public int filesMaterializedCount; // optional
 
+  public boolean isSlaveIdle(DistBuildSlaveStateRenderer distBuildSlaveStateRenderer) {
+    return getTotalRulesCount() != 0 && getRulesBuildingCount() == 0;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     STAMPEDE_ID((short)1, "stampedeId"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/BuildStatus.java b/src-gen/com/facebook/buck/distributed/thrift/BuildStatus.java
index 7b0c932..bfe0ed8 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/BuildStatus.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/BuildStatus.java
@@ -53,4 +53,14 @@ public enum BuildStatus implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see BuildStatus
+   * @param buildSlaveInfo
+   */
+  public BuildSlaveInfo setStatus(BuildSlaveInfo buildSlaveInfo) {
+    buildSlaveInfo.status = this;
+    return buildSlaveInfo;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/ConsoleEventSeverity.java b/src-gen/com/facebook/buck/distributed/thrift/ConsoleEventSeverity.java
index e627720..2f13e56 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/ConsoleEventSeverity.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/ConsoleEventSeverity.java
@@ -41,4 +41,14 @@ public enum ConsoleEventSeverity implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see ConsoleEventSeverity
+   * @param buildSlaveConsoleEvent
+   */
+  public BuildSlaveConsoleEvent setSeverity(BuildSlaveConsoleEvent buildSlaveConsoleEvent) {
+    buildSlaveConsoleEvent.severity = this;
+    return buildSlaveConsoleEvent;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/CoordinatorBuildProgress.java b/src-gen/com/facebook/buck/distributed/thrift/CoordinatorBuildProgress.java
index 79f0b99..fc924bd 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/CoordinatorBuildProgress.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/CoordinatorBuildProgress.java
@@ -22,6 +22,12 @@ public class CoordinatorBuildProgress implements org.apache.thrift.TBase<Coordin
   public int builtRulesCount; // optional
   public int skippedRulesCount; // optional
 
+  public CoordinatorBuildProgressEvent setBuildProgress(
+      CoordinatorBuildProgressEvent coordinatorBuildProgressEvent) {
+    coordinatorBuildProgressEvent.buildProgress = this;
+    return coordinatorBuildProgressEvent;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     TOTAL_RULES_COUNT((short)1, "totalRulesCount"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/CoordinatorBuildProgressEvent.java b/src-gen/com/facebook/buck/distributed/thrift/CoordinatorBuildProgressEvent.java
index eb3a2e3..186958a 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/CoordinatorBuildProgressEvent.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/CoordinatorBuildProgressEvent.java
@@ -112,11 +112,6 @@ public class CoordinatorBuildProgressEvent implements org.apache.thrift.TBase<Co
     return this.buildProgress;
   }
 
-  public CoordinatorBuildProgressEvent setBuildProgress(CoordinatorBuildProgress buildProgress) {
-    this.buildProgress = buildProgress;
-    return this;
-  }
-
   public void unsetBuildProgress() {
     this.buildProgress = null;
   }
@@ -138,7 +133,7 @@ public class CoordinatorBuildProgressEvent implements org.apache.thrift.TBase<Co
       if (value == null) {
         unsetBuildProgress();
       } else {
-        setBuildProgress((CoordinatorBuildProgress)value);
+        ((CoordinatorBuildProgress)value).setBuildProgress(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/CreateBuildRequest.java b/src-gen/com/facebook/buck/distributed/thrift/CreateBuildRequest.java
index 2b6bf7c..1c4399a 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/CreateBuildRequest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/CreateBuildRequest.java
@@ -463,11 +463,6 @@ public class CreateBuildRequest implements org.apache.thrift.TBase<CreateBuildRe
     return this.minionRequirements;
   }
 
-  public CreateBuildRequest setMinionRequirements(MinionRequirements minionRequirements) {
-    this.minionRequirements = minionRequirements;
-    return this;
-  }
-
   public void unsetMinionRequirements() {
     this.minionRequirements = null;
   }
@@ -561,7 +556,7 @@ public class CreateBuildRequest implements org.apache.thrift.TBase<CreateBuildRe
       if (value == null) {
         unsetMinionRequirements();
       } else {
-        setMinionRequirements((MinionRequirements)value);
+        ((MinionRequirements)value).setMinionRequirements(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/Digest.java b/src-gen/com/facebook/buck/distributed/thrift/Digest.java
index acdc6ec..a52efbf 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/Digest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/Digest.java
@@ -20,6 +20,11 @@ public class Digest implements org.apache.thrift.TBase<Digest, Digest._Fields>,
   public java.lang.String hash; // optional
   public long sizeBytes; // optional
 
+  public DigestAndContent setDigest(DigestAndContent digestAndContent) {
+    digestAndContent.digest = this;
+    return digestAndContent;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     HASH((short)1, "hash"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/DigestAndContent.java b/src-gen/com/facebook/buck/distributed/thrift/DigestAndContent.java
index 51b9dde..fb6877e 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/DigestAndContent.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/DigestAndContent.java
@@ -123,11 +123,6 @@ public class DigestAndContent implements org.apache.thrift.TBase<DigestAndConten
     return this.digest;
   }
 
-  public DigestAndContent setDigest(Digest digest) {
-    this.digest = digest;
-    return this;
-  }
-
   public void unsetDigest() {
     this.digest = null;
   }
@@ -183,7 +178,7 @@ public class DigestAndContent implements org.apache.thrift.TBase<DigestAndConten
       if (value == null) {
         unsetDigest();
       } else {
-        setDigest((Digest)value);
+        ((Digest)value).setDigest(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/FetchSourceFilesResponse.java b/src-gen/com/facebook/buck/distributed/thrift/FetchSourceFilesResponse.java
index 62039c4..8f316d1 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/FetchSourceFilesResponse.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/FetchSourceFilesResponse.java
@@ -121,13 +121,6 @@ public class FetchSourceFilesResponse implements org.apache.thrift.TBase<FetchSo
     return (this.files == null) ? null : this.files.iterator();
   }
 
-  public void addToFiles(FileInfo elem) {
-    if (this.files == null) {
-      this.files = new java.util.ArrayList<FileInfo>();
-    }
-    this.files.add(elem);
-  }
-
   public java.util.List<FileInfo> getFiles() {
     return this.files;
   }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/FileInfo.java b/src-gen/com/facebook/buck/distributed/thrift/FileInfo.java
index 9ed6e20..b550ee3 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/FileInfo.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/FileInfo.java
@@ -20,6 +20,13 @@ public class FileInfo implements org.apache.thrift.TBase<FileInfo, FileInfo._Fie
   public java.lang.String contentHash; // optional
   public java.nio.ByteBuffer content; // optional
 
+  public void addToFiles(FetchSourceFilesResponse fetchSourceFilesResponse) {
+    if (fetchSourceFilesResponse.files == null) {
+      fetchSourceFilesResponse.files = new java.util.ArrayList<FileInfo>();
+    }
+    fetchSourceFilesResponse.files.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     CONTENT_HASH((short)1, "contentHash"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/FileMaterializationStats.java b/src-gen/com/facebook/buck/distributed/thrift/FileMaterializationStats.java
index c338235..78d404b 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/FileMaterializationStats.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/FileMaterializationStats.java
@@ -28,6 +28,12 @@ public class FileMaterializationStats implements org.apache.thrift.TBase<FileMat
   public int periodicCasMultiFetchCount; // optional
   public long timeSpentInMultiFetchNetworkCallsMs; // optional
 
+  public BuildSlaveFinishedStats setFileMaterializationStats(
+      BuildSlaveFinishedStats buildSlaveFinishedStats) {
+    buildSlaveFinishedStats.fileMaterializationStats = this;
+    return buildSlaveFinishedStats;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     TOTAL_FILES_MATERIALIZED_COUNT((short)1, "totalFilesMaterializedCount"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/FrontendRequest.java b/src-gen/com/facebook/buck/distributed/thrift/FrontendRequest.java
index 671d0d6..363d3cb 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/FrontendRequest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/FrontendRequest.java
@@ -446,15 +446,6 @@ public class FrontendRequest implements org.apache.thrift.TBase<FrontendRequest,
     return this.type;
   }
 
-  /**
-   * 
-   * @see FrontendRequestType
-   */
-  public FrontendRequest setType(FrontendRequestType type) {
-    this.type = type;
-    return this;
-  }
-
   public void unsetType() {
     this.type = null;
   }
@@ -1172,7 +1163,7 @@ public class FrontendRequest implements org.apache.thrift.TBase<FrontendRequest,
       if (value == null) {
         unsetType();
       } else {
-        setType((FrontendRequestType)value);
+        ((FrontendRequestType)value).setType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/FrontendRequestType.java b/src-gen/com/facebook/buck/distributed/thrift/FrontendRequestType.java
index 1ca03f9..3df3c3c 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/FrontendRequestType.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/FrontendRequestType.java
@@ -125,4 +125,14 @@ public enum FrontendRequestType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see FrontendRequestType
+   * @param frontendRequest
+   */
+  public FrontendRequest setType(FrontendRequest frontendRequest) {
+    frontendRequest.type = this;
+    return frontendRequest;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/FrontendResponse.java b/src-gen/com/facebook/buck/distributed/thrift/FrontendResponse.java
index 5ddad01..bbbcca1 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/FrontendResponse.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/FrontendResponse.java
@@ -490,11 +490,6 @@ public class FrontendResponse implements org.apache.thrift.TBase<FrontendRespons
     return this.startBuildResponse;
   }
 
-  public FrontendResponse setStartBuildResponse(StartBuildResponse startBuildResponse) {
-    this.startBuildResponse = startBuildResponse;
-    return this;
-  }
-
   public void unsetStartBuildResponse() {
     this.startBuildResponse = null;
   }
@@ -1092,7 +1087,7 @@ public class FrontendResponse implements org.apache.thrift.TBase<FrontendRespons
       if (value == null) {
         unsetStartBuildResponse();
       } else {
-        setStartBuildResponse((StartBuildResponse)value);
+        ((StartBuildResponse)value).setStartBuildResponse(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/GetAllAvailableCapacityResponse.java b/src-gen/com/facebook/buck/distributed/thrift/GetAllAvailableCapacityResponse.java
index eadcafb..e618aa3 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/GetAllAvailableCapacityResponse.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/GetAllAvailableCapacityResponse.java
@@ -18,6 +18,12 @@ public class GetAllAvailableCapacityResponse implements org.apache.thrift.TBase<
 
   public int availableCapacity; // optional
 
+  public BuildSlaveResponse setGetAllAvailableCapacityResponse(
+      BuildSlaveResponse buildSlaveResponse) {
+    buildSlaveResponse.getAllAvailableCapacityResponse = this;
+    return buildSlaveResponse;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     AVAILABLE_CAPACITY((short)1, "availableCapacity");
diff --git a/src-gen/com/facebook/buck/distributed/thrift/GetWorkRequest.java b/src-gen/com/facebook/buck/distributed/thrift/GetWorkRequest.java
index 9f4041e..0094b67 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/GetWorkRequest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/GetWorkRequest.java
@@ -207,15 +207,6 @@ public class GetWorkRequest implements org.apache.thrift.TBase<GetWorkRequest, G
     return this.minionType;
   }
 
-  /**
-   * 
-   * @see com.facebook.buck.distributed.thrift.MinionType
-   */
-  public GetWorkRequest setMinionType(com.facebook.buck.distributed.thrift.MinionType minionType) {
-    this.minionType = minionType;
-    return this;
-  }
-
   public void unsetMinionType() {
     this.minionType = null;
   }
@@ -354,7 +345,7 @@ public class GetWorkRequest implements org.apache.thrift.TBase<GetWorkRequest, G
       if (value == null) {
         unsetMinionType();
       } else {
-        setMinionType((com.facebook.buck.distributed.thrift.MinionType)value);
+        ((MinionType)value).setMinionType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/GetWorkResponse.java b/src-gen/com/facebook/buck/distributed/thrift/GetWorkResponse.java
index fbad74a..bc57ff9 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/GetWorkResponse.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/GetWorkResponse.java
@@ -157,13 +157,6 @@ public class GetWorkResponse implements org.apache.thrift.TBase<GetWorkResponse,
     return (this.workUnits == null) ? null : this.workUnits.iterator();
   }
 
-  public void addToWorkUnits(WorkUnit elem) {
-    if (this.workUnits == null) {
-      this.workUnits = new java.util.ArrayList<WorkUnit>();
-    }
-    this.workUnits.add(elem);
-  }
-
   public java.util.List<WorkUnit> getWorkUnits() {
     return this.workUnits;
   }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/LogDir.java b/src-gen/com/facebook/buck/distributed/thrift/LogDir.java
index 2132cab..dea79f4 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/LogDir.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/LogDir.java
@@ -22,6 +22,13 @@ public class LogDir implements org.apache.thrift.TBase<LogDir, LogDir._Fields>,
   public java.nio.ByteBuffer data; // optional
   public java.lang.String errorMessage; // optional
 
+  public void addToLogDirs(MultiGetBuildSlaveLogDirResponse multiGetBuildSlaveLogDirResponse) {
+    if (multiGetBuildSlaveLogDirResponse.logDirs == null) {
+      multiGetBuildSlaveLogDirResponse.logDirs = new java.util.ArrayList<LogDir>();
+    }
+    multiGetBuildSlaveLogDirResponse.logDirs.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     BUILD_SLAVE_RUN_ID((short)1, "buildSlaveRunId"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/LogLineBatchRequest.java b/src-gen/com/facebook/buck/distributed/thrift/LogLineBatchRequest.java
index 947475d..e50c8f4 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/LogLineBatchRequest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/LogLineBatchRequest.java
@@ -20,6 +20,14 @@ public class LogLineBatchRequest implements org.apache.thrift.TBase<LogLineBatch
   public SlaveStream slaveStream; // optional
   public int batchNumber; // optional
 
+  public void addToBatches(
+      MultiGetBuildSlaveRealTimeLogsRequest multiGetBuildSlaveRealTimeLogsRequest) {
+    if (multiGetBuildSlaveRealTimeLogsRequest.batches == null) {
+      multiGetBuildSlaveRealTimeLogsRequest.batches = new java.util.ArrayList<LogLineBatchRequest>();
+    }
+    multiGetBuildSlaveRealTimeLogsRequest.batches.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     SLAVE_STREAM((short)1, "slaveStream"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/LogRequest.java b/src-gen/com/facebook/buck/distributed/thrift/LogRequest.java
index 7ec298e..4f7e33e 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/LogRequest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/LogRequest.java
@@ -138,15 +138,6 @@ public class LogRequest implements org.apache.thrift.TBase<LogRequest, LogReques
     return this.type;
   }
 
-  /**
-   * 
-   * @see LogRequestType
-   */
-  public LogRequest setType(LogRequestType type) {
-    this.type = type;
-    return this;
-  }
-
   public void unsetType() {
     this.type = null;
   }
@@ -192,7 +183,7 @@ public class LogRequest implements org.apache.thrift.TBase<LogRequest, LogReques
       if (value == null) {
         unsetType();
       } else {
-        setType((LogRequestType)value);
+        ((LogRequestType)value).setType(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/LogRequestType.java b/src-gen/com/facebook/buck/distributed/thrift/LogRequestType.java
index f59944a..382005a 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/LogRequestType.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/LogRequestType.java
@@ -38,4 +38,14 @@ public enum LogRequestType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see LogRequestType
+   * @param logRequest
+   */
+  public LogRequest setType(LogRequest logRequest) {
+    logRequest.type = this;
+    return logRequest;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/MinionRequirements.java b/src-gen/com/facebook/buck/distributed/thrift/MinionRequirements.java
index 80e7a5b..e1c88ee 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/MinionRequirements.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/MinionRequirements.java
@@ -18,6 +18,11 @@ public class MinionRequirements implements org.apache.thrift.TBase<MinionRequire
 
   public java.util.List<MinionRequirement> requirements; // optional
 
+  public CreateBuildRequest setMinionRequirements(CreateBuildRequest createBuildRequest) {
+    createBuildRequest.minionRequirements = this;
+    return createBuildRequest;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     REQUIREMENTS((short)1, "requirements");
diff --git a/src-gen/com/facebook/buck/distributed/thrift/MinionType.java b/src-gen/com/facebook/buck/distributed/thrift/MinionType.java
index de09b14..72d1557 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/MinionType.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/MinionType.java
@@ -41,4 +41,14 @@ public enum MinionType implements org.apache.thrift.TEnum {
         return null;
     }
   }
+
+  /**
+   *
+   * @see MinionType
+   * @param getWorkRequest
+   */
+  public GetWorkRequest setMinionType(GetWorkRequest getWorkRequest) {
+    getWorkRequest.minionType = this;
+    return getWorkRequest;
+  }
 }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/MultiGetBuildSlaveLogDirResponse.java b/src-gen/com/facebook/buck/distributed/thrift/MultiGetBuildSlaveLogDirResponse.java
index c96fea2..5705c0c 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/MultiGetBuildSlaveLogDirResponse.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/MultiGetBuildSlaveLogDirResponse.java
@@ -121,13 +121,6 @@ public class MultiGetBuildSlaveLogDirResponse implements org.apache.thrift.TBase
     return (this.logDirs == null) ? null : this.logDirs.iterator();
   }
 
-  public void addToLogDirs(LogDir elem) {
-    if (this.logDirs == null) {
-      this.logDirs = new java.util.ArrayList<LogDir>();
-    }
-    this.logDirs.add(elem);
-  }
-
   public java.util.List<LogDir> getLogDirs() {
     return this.logDirs;
   }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/MultiGetBuildSlaveRealTimeLogsRequest.java b/src-gen/com/facebook/buck/distributed/thrift/MultiGetBuildSlaveRealTimeLogsRequest.java
index 63c9a19..4165871 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/MultiGetBuildSlaveRealTimeLogsRequest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/MultiGetBuildSlaveRealTimeLogsRequest.java
@@ -156,13 +156,6 @@ public class MultiGetBuildSlaveRealTimeLogsRequest implements org.apache.thrift.
     return (this.batches == null) ? null : this.batches.iterator();
   }
 
-  public void addToBatches(LogLineBatchRequest elem) {
-    if (this.batches == null) {
-      this.batches = new java.util.ArrayList<LogLineBatchRequest>();
-    }
-    this.batches.add(elem);
-  }
-
   public java.util.List<LogLineBatchRequest> getBatches() {
     return this.batches;
   }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/PathInfo.java b/src-gen/com/facebook/buck/distributed/thrift/PathInfo.java
index 98ce1b9..8579448 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/PathInfo.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/PathInfo.java
@@ -20,6 +20,13 @@ public class PathInfo implements org.apache.thrift.TBase<PathInfo, PathInfo._Fie
   public java.lang.String contentHash; // optional
   public java.lang.String path; // optional
 
+  public void addToDotFiles(SetBuckDotFilePathsRequest setBuckDotFilePathsRequest) {
+    if (setBuckDotFilePathsRequest.dotFiles == null) {
+      setBuckDotFilePathsRequest.dotFiles = new java.util.ArrayList<PathInfo>();
+    }
+    setBuckDotFilePathsRequest.dotFiles.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     CONTENT_HASH((short)1, "contentHash"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/RuleKeyLogEntry.java b/src-gen/com/facebook/buck/distributed/thrift/RuleKeyLogEntry.java
index ac46e84..5d74c1e 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/RuleKeyLogEntry.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/RuleKeyLogEntry.java
@@ -226,13 +226,6 @@ public class RuleKeyLogEntry implements org.apache.thrift.TBase<RuleKeyLogEntry,
     return (this.storeLogEntries == null) ? null : this.storeLogEntries.iterator();
   }
 
-  public void addToStoreLogEntries(RuleKeyStoreLogEntry elem) {
-    if (this.storeLogEntries == null) {
-      this.storeLogEntries = new java.util.ArrayList<RuleKeyStoreLogEntry>();
-    }
-    this.storeLogEntries.add(elem);
-  }
-
   public java.util.List<RuleKeyStoreLogEntry> getStoreLogEntries() {
     return this.storeLogEntries;
   }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/RuleKeyStoreLogEntry.java b/src-gen/com/facebook/buck/distributed/thrift/RuleKeyStoreLogEntry.java
index 76b659c..60547d4 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/RuleKeyStoreLogEntry.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/RuleKeyStoreLogEntry.java
@@ -26,6 +26,13 @@ public class RuleKeyStoreLogEntry implements org.apache.thrift.TBase<RuleKeyStor
   public long lastAttemptedStoreEpochSeconds; // optional
   public long lastFetchEpochSeconds; // optional
 
+  public void addToStoreLogEntries(RuleKeyLogEntry ruleKeyLogEntry) {
+    if (ruleKeyLogEntry.storeLogEntries == null) {
+      ruleKeyLogEntry.storeLogEntries = new java.util.ArrayList<RuleKeyStoreLogEntry>();
+    }
+    ruleKeyLogEntry.storeLogEntries.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     STORE_ID((short)1, "storeId"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/SetBuckDotFilePathsRequest.java b/src-gen/com/facebook/buck/distributed/thrift/SetBuckDotFilePathsRequest.java
index 1afeea5..cc78bdb 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/SetBuckDotFilePathsRequest.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/SetBuckDotFilePathsRequest.java
@@ -156,13 +156,6 @@ public class SetBuckDotFilePathsRequest implements org.apache.thrift.TBase<SetBu
     return (this.dotFiles == null) ? null : this.dotFiles.iterator();
   }
 
-  public void addToDotFiles(PathInfo elem) {
-    if (this.dotFiles == null) {
-      this.dotFiles = new java.util.ArrayList<PathInfo>();
-    }
-    this.dotFiles.add(elem);
-  }
-
   public java.util.List<PathInfo> getDotFiles() {
     return this.dotFiles;
   }
diff --git a/src-gen/com/facebook/buck/distributed/thrift/SlaveStream.java b/src-gen/com/facebook/buck/distributed/thrift/SlaveStream.java
index a016f04..63ad0a4 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/SlaveStream.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/SlaveStream.java
@@ -24,6 +24,11 @@ public class SlaveStream implements org.apache.thrift.TBase<SlaveStream, SlaveSt
    */
   public LogStreamType streamType; // optional
 
+  public StreamLogs setSlaveStream(StreamLogs streamLogs) {
+    streamLogs.slaveStream = this;
+    return streamLogs;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     BUILD_SLAVE_RUN_ID((short)1, "buildSlaveRunId"),
diff --git a/src-gen/com/facebook/buck/distributed/thrift/StampedeId.java b/src-gen/com/facebook/buck/distributed/thrift/StampedeId.java
index 8ba949a..6636ef3 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/StampedeId.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/StampedeId.java
@@ -6,6 +6,10 @@
  */
 package com.facebook.buck.distributed.thrift;
 
+import com.facebook.buck.distributed.build_client.BuildSlaveLogsMaterializer;
+import java.util.List;
+import java.util.stream.Collectors;
+
 @SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
 @javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)")
 public class StampedeId implements org.apache.thrift.TBase<StampedeId, StampedeId._Fields>, java.io.Serializable, Cloneable, Comparable<StampedeId> {
@@ -18,6 +22,21 @@ public class StampedeId implements org.apache.thrift.TBase<StampedeId, StampedeI
 
   public java.lang.String id; // optional
 
+  /**
+   * @param toMaterialize
+   * @param buildSlaveLogsMaterializer
+   * @return The list BuildSlaveRunIds that still not have their logs available to materialize.
+   */
+  public List<BuildSlaveRunId> fetchAndMaterializeAvailableLogs(
+      List<BuildSlaveRunId> toMaterialize, BuildSlaveLogsMaterializer buildSlaveLogsMaterializer) {
+    List<LogDir> logDirs = buildSlaveLogsMaterializer.fetchBuildSlaveLogDirs(this, toMaterialize);
+    buildSlaveLogsMaterializer.materializeLogDirs(logDirs);
+    return logDirs.stream()
+        .filter(x -> x.isSetErrorMessage())
+        .map(x -> x.getBuildSlaveRunId())
+        .collect(Collectors.toList());
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     ID((short)1, "id");
diff --git a/src-gen/com/facebook/buck/distributed/thrift/StartBuildResponse.java b/src-gen/com/facebook/buck/distributed/thrift/StartBuildResponse.java
index 8c1db92..61eaff2 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/StartBuildResponse.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/StartBuildResponse.java
@@ -18,6 +18,11 @@ public class StartBuildResponse implements org.apache.thrift.TBase<StartBuildRes
 
   public BuildJob buildJob; // optional
 
+  public FrontendResponse setStartBuildResponse(FrontendResponse frontendResponse) {
+    frontendResponse.startBuildResponse = this;
+    return frontendResponse;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     BUILD_JOB((short)1, "buildJob");
diff --git a/src-gen/com/facebook/buck/distributed/thrift/StreamLogs.java b/src-gen/com/facebook/buck/distributed/thrift/StreamLogs.java
index 307bf5a..7ff2776 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/StreamLogs.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/StreamLogs.java
@@ -139,11 +139,6 @@ public class StreamLogs implements org.apache.thrift.TBase<StreamLogs, StreamLog
     return this.slaveStream;
   }
 
-  public StreamLogs setSlaveStream(SlaveStream slaveStream) {
-    this.slaveStream = slaveStream;
-    return this;
-  }
-
   public void unsetSlaveStream() {
     this.slaveStream = null;
   }
@@ -228,7 +223,7 @@ public class StreamLogs implements org.apache.thrift.TBase<StreamLogs, StreamLog
       if (value == null) {
         unsetSlaveStream();
       } else {
-        setSlaveStream((SlaveStream)value);
+        ((SlaveStream)value).setSlaveStream(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/distributed/thrift/WorkUnit.java b/src-gen/com/facebook/buck/distributed/thrift/WorkUnit.java
index 7febc48..d6804e8 100644
--- a/src-gen/com/facebook/buck/distributed/thrift/WorkUnit.java
+++ b/src-gen/com/facebook/buck/distributed/thrift/WorkUnit.java
@@ -18,6 +18,13 @@ public class WorkUnit implements org.apache.thrift.TBase<WorkUnit, WorkUnit._Fie
 
   public java.util.List<java.lang.String> buildTargets; // optional
 
+  public void addToWorkUnits(GetWorkResponse getWorkResponse) {
+    if (getWorkResponse.workUnits == null) {
+      getWorkResponse.workUnits = new java.util.ArrayList<WorkUnit>();
+    }
+    getWorkResponse.workUnits.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     BUILD_TARGETS((short)1, "buildTargets");
diff --git a/src-gen/com/facebook/buck/log/thrift/rulekeys/Value.java b/src-gen/com/facebook/buck/log/thrift/rulekeys/Value.java
index ba54eab..2d430db 100644
--- a/src-gen/com/facebook/buck/log/thrift/rulekeys/Value.java
+++ b/src-gen/com/facebook/buck/log/thrift/rulekeys/Value.java
@@ -28,6 +28,11 @@ public class Value extends org.apache.thrift.TUnion<Value, Value._Fields> {
   private static final org.apache.thrift.protocol.TField TARGET_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("targetPath", org.apache.thrift.protocol.TType.STRUCT, (short)18);
   private static final org.apache.thrift.protocol.TField KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("key", org.apache.thrift.protocol.TType.STRUCT, (short)19);
 
+  public Wrapper setValue(Wrapper wrapper) {
+    wrapper.value = this;
+    return wrapper;
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     STRING_VALUE((short)1, "stringValue"),
diff --git a/src-gen/com/facebook/buck/log/thrift/rulekeys/Wrapper.java b/src-gen/com/facebook/buck/log/thrift/rulekeys/Wrapper.java
index 16a9f47..79df5c4 100644
--- a/src-gen/com/facebook/buck/log/thrift/rulekeys/Wrapper.java
+++ b/src-gen/com/facebook/buck/log/thrift/rulekeys/Wrapper.java
@@ -155,11 +155,6 @@ public class Wrapper implements org.apache.thrift.TBase<Wrapper, Wrapper._Fields
     return this.value;
   }
 
-  public Wrapper setValue(Value value) {
-    this.value = value;
-    return this;
-  }
-
   public void unsetValue() {
     this.value = null;
   }
@@ -189,7 +184,7 @@ public class Wrapper implements org.apache.thrift.TBase<Wrapper, Wrapper._Fields
       if (value == null) {
         unsetValue();
       } else {
-        setValue((Value)value);
+        ((Value)value).setValue(this);
       }
       break;
 
diff --git a/src-gen/com/facebook/buck/parser/thrift/RemoteDaemonicCellState.java b/src-gen/com/facebook/buck/parser/thrift/RemoteDaemonicCellState.java
index 691d97a..964d38e 100644
--- a/src-gen/com/facebook/buck/parser/thrift/RemoteDaemonicCellState.java
+++ b/src-gen/com/facebook/buck/parser/thrift/RemoteDaemonicCellState.java
@@ -22,6 +22,14 @@ public class RemoteDaemonicCellState implements org.apache.thrift.TBase<RemoteDa
   public java.util.Map<java.lang.String,java.util.List<java.lang.String>> buildFileDependents; // optional
   public java.util.Map<java.lang.String,java.util.Map<java.lang.String,BuildFileEnvProperty>> buildFileEnv; // optional
 
+  public void putToCellPathToDaemonicState(String key,
+      RemoteDaemonicParserState remoteDaemonicParserState) {
+    if (remoteDaemonicParserState.cellPathToDaemonicState == null) {
+      remoteDaemonicParserState.cellPathToDaemonicState = new java.util.HashMap<String,RemoteDaemonicCellState>();
+    }
+    remoteDaemonicParserState.cellPathToDaemonicState.put(key, this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     ALL_RAW_NODES_JSONS((short)1, "allRawNodesJsons"),
diff --git a/src-gen/com/facebook/buck/parser/thrift/RemoteDaemonicParserState.java b/src-gen/com/facebook/buck/parser/thrift/RemoteDaemonicParserState.java
index 2788cd3..71cdcb7 100644
--- a/src-gen/com/facebook/buck/parser/thrift/RemoteDaemonicParserState.java
+++ b/src-gen/com/facebook/buck/parser/thrift/RemoteDaemonicParserState.java
@@ -200,13 +200,6 @@ public class RemoteDaemonicParserState implements org.apache.thrift.TBase<Remote
     return (this.cellPathToDaemonicState == null) ? 0 : this.cellPathToDaemonicState.size();
   }
 
-  public void putToCellPathToDaemonicState(java.lang.String key, RemoteDaemonicCellState val) {
-    if (this.cellPathToDaemonicState == null) {
-      this.cellPathToDaemonicState = new java.util.HashMap<java.lang.String,RemoteDaemonicCellState>();
-    }
-    this.cellPathToDaemonicState.put(key, val);
-  }
-
   public java.util.Map<java.lang.String,RemoteDaemonicCellState> getCellPathToDaemonicState() {
     return this.cellPathToDaemonicState;
   }
diff --git a/src-gen/com/facebook/buck/query/thrift/DirectedAcyclicGraph.java b/src-gen/com/facebook/buck/query/thrift/DirectedAcyclicGraph.java
index d918f88..464d244 100644
--- a/src-gen/com/facebook/buck/query/thrift/DirectedAcyclicGraph.java
+++ b/src-gen/com/facebook/buck/query/thrift/DirectedAcyclicGraph.java
@@ -145,13 +145,6 @@ public class DirectedAcyclicGraph implements org.apache.thrift.TBase<DirectedAcy
     return (this.nodes == null) ? null : this.nodes.iterator();
   }
 
-  public void addToNodes(DirectedAcyclicGraphNode elem) {
-    if (this.nodes == null) {
-      this.nodes = new java.util.ArrayList<DirectedAcyclicGraphNode>();
-    }
-    this.nodes.add(elem);
-  }
-
   public java.util.List<DirectedAcyclicGraphNode> getNodes() {
     return this.nodes;
   }
diff --git a/src-gen/com/facebook/buck/query/thrift/DirectedAcyclicGraphNode.java b/src-gen/com/facebook/buck/query/thrift/DirectedAcyclicGraphNode.java
index a5cb77f..c0c970d 100644
--- a/src-gen/com/facebook/buck/query/thrift/DirectedAcyclicGraphNode.java
+++ b/src-gen/com/facebook/buck/query/thrift/DirectedAcyclicGraphNode.java
@@ -20,6 +20,13 @@ public class DirectedAcyclicGraphNode implements org.apache.thrift.TBase<Directe
   public java.lang.String name; // required
   public java.util.Map<java.lang.String,java.lang.String> nodeAttributes; // optional
 
+  public void addToNodes(DirectedAcyclicGraph directedAcyclicGraph) {
+    if (directedAcyclicGraph.nodes == null) {
+      directedAcyclicGraph.nodes = new java.util.ArrayList<DirectedAcyclicGraphNode>();
+    }
+    directedAcyclicGraph.nodes.add(this);
+  }
+
   /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
   public enum _Fields implements org.apache.thrift.TFieldIdEnum {
     NAME((short)1, "name"),
diff --git a/src/com/facebook/buck/android/AndroidBuckConfig.java b/src/com/facebook/buck/android/AndroidBuckConfig.java
index 9fff8fb..9aeb342 100644
--- a/src/com/facebook/buck/android/AndroidBuckConfig.java
+++ b/src/com/facebook/buck/android/AndroidBuckConfig.java
@@ -19,11 +19,14 @@ package com.facebook.buck.android;
 import com.facebook.buck.android.toolchain.ndk.NdkCompilerType;
 import com.facebook.buck.android.toolchain.ndk.NdkCxxRuntime;
 import com.facebook.buck.android.toolchain.ndk.NdkCxxRuntimeType;
+import com.facebook.buck.android.toolchain.ndk.impl.AndroidNdkFactory;
+import com.facebook.buck.android.toolchain.ndk.impl.AndroidNdkResolver;
 import com.facebook.buck.core.config.BuckConfig;
 import com.facebook.buck.core.exceptions.HumanReadableException;
 import com.facebook.buck.core.model.BuildTarget;
 import com.facebook.buck.core.model.TargetConfiguration;
 import com.facebook.buck.core.rules.BuildRuleResolver;
+import com.facebook.buck.core.toolchain.ToolchainInstantiationException;
 import com.facebook.buck.core.toolchain.tool.Tool;
 import com.facebook.buck.rules.tool.config.ToolConfig;
 import com.facebook.buck.util.environment.Platform;
@@ -41,6 +44,16 @@ public class AndroidBuckConfig {
 
   private static final String CONFIG_ENTRY_IN_SDK_PATH_SEARCH_ORDER = "<CONFIG>";
 
+  public String detectNdkVersion(
+      AndroidNdkResolver ndkResolver, AndroidNdkFactory androidNdkFactory) {
+    Optional<String> ndkVersion =
+        getNdkVersion().map(Optional::of).orElseGet(ndkResolver::getNdkVersion);
+    if (!ndkVersion.isPresent()) {
+      throw new ToolchainInstantiationException("Cannot detect NDK version");
+    }
+    return ndkVersion.get();
+  }
+
   /** Values acceptable for ndk.ndk_search_order. */
   public enum NdkSearchOrderEntry {
     ANDROID_NDK_REPOSITORY_ENV("ANDROID_NDK_REPOSITORY"),
diff --git a/src/com/facebook/buck/android/resources/ResTablePackage.java b/src/com/facebook/buck/android/resources/ResTablePackage.java
index 3d4071c..ddc41a1 100644
--- a/src/com/facebook/buck/android/resources/ResTablePackage.java
+++ b/src/com/facebook/buck/android/resources/ResTablePackage.java
@@ -245,6 +245,17 @@ public class ResTablePackage extends ResChunk {
     int idx = i & 0xFFFF;
     ResTableTypeSpec spec = typeSpecs.get(type - 1);
     Preconditions.checkState(spec.getResourceType() == type);
-    return spec.getResourceName(this, idx);
+    return getResourceName(idx, spec);
+  }
+
+  public String getResourceName(int id, ResTableTypeSpec resTableTypeSpec) {
+    // We need to find an actual entry in one of the configs to find the name of this resource.
+    for (ResTableType t : resTableTypeSpec.getConfigs()) {
+      int refId = t.getResourceRef(id);
+      if (refId >= 0) {
+        return getKeys().getString(refId);
+      }
+    }
+    throw new RuntimeException();
   }
 }
diff --git a/src/com/facebook/buck/android/resources/ResTableTypeSpec.java b/src/com/facebook/buck/android/resources/ResTableTypeSpec.java
index bc1c62a..b74a9c8 100644
--- a/src/com/facebook/buck/android/resources/ResTableTypeSpec.java
+++ b/src/com/facebook/buck/android/resources/ResTableTypeSpec.java
@@ -119,17 +119,6 @@ public class ResTableTypeSpec extends ResChunk {
     return totalSize;
   }
 
-  String getResourceName(ResTablePackage resPackage, int id) {
-    // We need to find an actual entry in one of the configs to find the name of this resource.
-    for (ResTableType t : configs) {
-      int refId = t.getResourceRef(id);
-      if (refId >= 0) {
-        return resPackage.getKeys().getString(refId);
-      }
-    }
-    throw new RuntimeException();
-  }
-
   public String getResourceTypeName(ResTablePackage resPackage) {
     return resPackage.getTypes().getString(id);
   }
@@ -146,7 +135,7 @@ public class ResTableTypeSpec extends ResChunk {
           i,
           resPackage.getPackageName(),
           getResourceTypeName(resPackage),
-          getResourceName(resPackage, i),
+          resPackage.getResourceName(i, this),
           entryFlags.getInt(i * 4));
     }
     for (ResTableType type : configs) {
diff --git a/src/com/facebook/buck/android/toolchain/ndk/impl/AndroidNdkFactory.java b/src/com/facebook/buck/android/toolchain/ndk/impl/AndroidNdkFactory.java
index 089cb64..5b20b26 100644
--- a/src/com/facebook/buck/android/toolchain/ndk/impl/AndroidNdkFactory.java
+++ b/src/com/facebook/buck/android/toolchain/ndk/impl/AndroidNdkFactory.java
@@ -54,7 +54,7 @@ public class AndroidNdkFactory implements ToolchainFactory<AndroidNdk> {
       throw new ToolchainInstantiationException(e, e.getHumanReadableErrorMessage());
     }
 
-    String ndkVersion = detectNdkVersion(androidBuckConfig, ndkResolver);
+    String ndkVersion = androidBuckConfig.detectNdkVersion(ndkResolver, this);
     VersionStringComparator versionComparator = new VersionStringComparator();
     boolean escapeCFlags = versionComparator.compare(ndkVersion, "16") >= 0;
 
@@ -70,13 +70,4 @@ public class AndroidNdkFactory implements ToolchainFactory<AndroidNdk> {
     return new AndroidNdkResolver(filesystem, environment, androidBuckConfig);
   }
 
-  private String detectNdkVersion(
-      AndroidBuckConfig androidBuckConfig, AndroidNdkResolver ndkResolver) {
-    Optional<String> ndkVersion =
-        androidBuckConfig.getNdkVersion().map(Optional::of).orElseGet(ndkResolver::getNdkVersion);
-    if (!ndkVersion.isPresent()) {
-      throw new ToolchainInstantiationException("Cannot detect NDK version");
-    }
-    return ndkVersion.get();
-  }
 }
diff --git a/src/com/facebook/buck/apple/AppleBundle.java b/src/com/facebook/buck/apple/AppleBundle.java
index 4cc1a9e..fb1d85d 100644
--- a/src/com/facebook/buck/apple/AppleBundle.java
+++ b/src/com/facebook/buck/apple/AppleBundle.java
@@ -1188,4 +1188,29 @@ public class AppleBundle extends AbstractBuildRuleWithDeclaredAndExtraDeps
         .addArg(SourcePathArg.of(PathSourcePath.of(getProjectFilesystem(), bundleBinaryPath)))
         .build();
   }
+
+  /**
+   * Get the stub binary rule from a legacy Apple Watch Extension build rule.
+   *
+   * @return the WatchOS 1 stub binary if appleBundle represents a legacy Watch Extension.
+   *     Otherwise, return absent.
+   * @param builtinApplePackage
+   */
+  public Optional<WriteFile> getLegacyWatchStubFromDeps(BuiltinApplePackage builtinApplePackage) {
+    for (BuildRule rule : getBuildDeps()) {
+      if (rule instanceof AppleBundle
+          && rule.getBuildTarget()
+              .getFlavors()
+              .contains(AppleBinaryDescription.LEGACY_WATCH_FLAVOR)) {
+        AppleBundle legacyWatchApp = (AppleBundle) rule;
+        if (legacyWatchApp.getBinary().isPresent()) {
+          BuildRule legacyWatchStub = legacyWatchApp.getBinary().get();
+          if (legacyWatchStub instanceof WriteFile) {
+            return Optional.of((WriteFile) legacyWatchStub);
+          }
+        }
+      }
+    }
+    return Optional.empty();
+  }
 }
diff --git a/src/com/facebook/buck/apple/AppleDebugFormat.java b/src/com/facebook/buck/apple/AppleDebugFormat.java
index 35d126e..0daeb5b 100644
--- a/src/com/facebook/buck/apple/AppleDebugFormat.java
+++ b/src/com/facebook/buck/apple/AppleDebugFormat.java
@@ -16,10 +16,17 @@
 
 package com.facebook.buck.apple;
 
+import com.facebook.buck.core.description.impl.DescriptionCache;
+import com.facebook.buck.core.exceptions.HumanReadableException;
+import com.facebook.buck.core.model.BuildTarget;
 import com.facebook.buck.core.model.Flavor;
 import com.facebook.buck.core.model.FlavorConvertible;
 import com.facebook.buck.core.model.FlavorDomain;
 import com.facebook.buck.core.model.UserFlavor;
+import com.facebook.buck.core.rules.ActionGraphBuilder;
+import com.facebook.buck.core.rules.BuildRule;
+import com.facebook.buck.cxx.toolchain.StripStyle;
+import com.google.common.collect.ImmutableSet;
 
 public enum AppleDebugFormat implements FlavorConvertible {
   /** Produces a binary with the debug map stripped. */
@@ -48,4 +55,29 @@ public enum AppleDebugFormat implements FlavorConvertible {
   public Flavor getFlavor() {
     return flavor;
   }
+
+  public AppleBundle getBuildRuleForTestHostAppTarget(
+      BuildTarget buildTarget,
+      ActionGraphBuilder graphBuilder,
+      BuildTarget testHostBuildTarget,
+      Iterable<Flavor> additionalFlavors,
+      String testHostKeyName, AppleTestDescription appleTestDescription) {
+    BuildRule rule =
+        graphBuilder.requireRule(
+            testHostBuildTarget.withAppendedFlavors(
+                ImmutableSet.<Flavor>builder()
+                    .addAll(additionalFlavors)
+                    .add(getFlavor(), StripStyle.NON_GLOBAL_SYMBOLS.getFlavor())
+                    .build()));
+
+    if (!(rule instanceof AppleBundle)) {
+      throw new HumanReadableException(
+          "Apple test rule '%s' has %s '%s' not of type '%s'.",
+          buildTarget,
+          testHostKeyName,
+          testHostBuildTarget,
+          DescriptionCache.getRuleType(AppleBundleDescription.class));
+    }
+    return (AppleBundle) rule;
+  }
 }
diff --git a/src/com/facebook/buck/apple/AppleTestDescription.java b/src/com/facebook/buck/apple/AppleTestDescription.java
index 84072a7..abce972 100644
--- a/src/com/facebook/buck/apple/AppleTestDescription.java
+++ b/src/com/facebook/buck/apple/AppleTestDescription.java
@@ -28,7 +28,6 @@ import com.facebook.buck.core.description.MetadataProvidingDescription;
 import com.facebook.buck.core.description.arg.HasContacts;
 import com.facebook.buck.core.description.arg.HasTestTimeout;
 import com.facebook.buck.core.description.attr.ImplicitDepsInferringDescription;
-import com.facebook.buck.core.description.impl.DescriptionCache;
 import com.facebook.buck.core.exceptions.HumanReadableException;
 import com.facebook.buck.core.model.BuildTarget;
 import com.facebook.buck.core.model.Flavor;
@@ -534,32 +533,6 @@ public class AppleTestDescription
     }
   }
 
-  private AppleBundle getBuildRuleForTestHostAppTarget(
-      BuildTarget buildTarget,
-      ActionGraphBuilder graphBuilder,
-      BuildTarget testHostBuildTarget,
-      AppleDebugFormat debugFormat,
-      Iterable<Flavor> additionalFlavors,
-      String testHostKeyName) {
-    BuildRule rule =
-        graphBuilder.requireRule(
-            testHostBuildTarget.withAppendedFlavors(
-                ImmutableSet.<Flavor>builder()
-                    .addAll(additionalFlavors)
-                    .add(debugFormat.getFlavor(), StripStyle.NON_GLOBAL_SYMBOLS.getFlavor())
-                    .build()));
-
-    if (!(rule instanceof AppleBundle)) {
-      throw new HumanReadableException(
-          "Apple test rule '%s' has %s '%s' not of type '%s'.",
-          buildTarget,
-          testHostKeyName,
-          testHostBuildTarget,
-          DescriptionCache.getRuleType(AppleBundleDescription.class));
-    }
-    return (AppleBundle) rule;
-  }
-
   @VisibleForTesting
   TestHostInfo createTestHostInfo(
       BuildTarget buildTarget,
@@ -572,13 +545,12 @@ public class AppleTestDescription
       ImmutableList<CxxPlatform> cxxPlatforms) {
 
     AppleBundle testHostWithTargetApp =
-        getBuildRuleForTestHostAppTarget(
+        debugFormat.getBuildRuleForTestHostAppTarget(
             buildTarget,
             graphBuilder,
             testHostAppBuildTarget,
-            debugFormat,
             additionalFlavors,
-            "test_host_app");
+            "test_host_app", this);
 
     SourcePath testHostAppBinarySourcePath =
         testHostWithTargetApp.getBinaryBuildRule().getSourcePathToOutput();
@@ -620,13 +592,12 @@ public class AppleTestDescription
           blacklistBuilder.build());
     }
     AppleBundle uiTestTargetApp =
-        getBuildRuleForTestHostAppTarget(
+        debugFormat.getBuildRuleForTestHostAppTarget(
             buildTarget,
             graphBuilder,
             uiTestTargetAppBuildTarget.get(),
-            debugFormat,
             additionalFlavors,
-            "ui_test_target_app");
+            "ui_test_target_app", this);
     SourcePath uiTestTargetAppBinarySourcePath =
         uiTestTargetApp.getBinaryBuildRule().getSourcePathToOutput();
 
diff --git a/src/com/facebook/buck/apple/BuiltinApplePackage.java b/src/com/facebook/buck/apple/BuiltinApplePackage.java
index 6c150f1..057bad3 100644
--- a/src/com/facebook/buck/apple/BuiltinApplePackage.java
+++ b/src/com/facebook/buck/apple/BuiltinApplePackage.java
@@ -181,7 +181,7 @@ public class BuiltinApplePackage extends AbstractBuildRuleWithDeclaredAndExtraDe
                     watchKitSupportDir.resolve("WK"),
                     true /* executable */));
           } else {
-            Optional<WriteFile> legacyWatchStub = getLegacyWatchStubFromDeps(appleBundle);
+            Optional<WriteFile> legacyWatchStub = appleBundle.getLegacyWatchStubFromDeps(this);
             if (legacyWatchStub.isPresent()) {
               Path watchKitSupportDir = temp.resolve("WatchKitSupport");
               commands.add(
@@ -203,30 +203,6 @@ public class BuiltinApplePackage extends AbstractBuildRuleWithDeclaredAndExtraDe
     }
   }
 
-  /**
-   * Get the stub binary rule from a legacy Apple Watch Extension build rule.
-   *
-   * @return the WatchOS 1 stub binary if appleBundle represents a legacy Watch Extension.
-   *     Otherwise, return absent.
-   */
-  private Optional<WriteFile> getLegacyWatchStubFromDeps(AppleBundle appleBundle) {
-    for (BuildRule rule : appleBundle.getBuildDeps()) {
-      if (rule instanceof AppleBundle
-          && rule.getBuildTarget()
-              .getFlavors()
-              .contains(AppleBinaryDescription.LEGACY_WATCH_FLAVOR)) {
-        AppleBundle legacyWatchApp = (AppleBundle) rule;
-        if (legacyWatchApp.getBinary().isPresent()) {
-          BuildRule legacyWatchStub = legacyWatchApp.getBinary().get();
-          if (legacyWatchStub instanceof WriteFile) {
-            return Optional.of((WriteFile) legacyWatchStub);
-          }
-        }
-      }
-    }
-    return Optional.empty();
-  }
-
   @Override
   public SourcePath getSourcePathToOutput() {
     return ExplicitBuildTargetSourcePath.of(getBuildTarget(), pathToOutputFile);
diff --git a/src/com/facebook/buck/apple/xcode/xcodeproj/PBXGroup.java b/src/com/facebook/buck/apple/xcode/xcodeproj/PBXGroup.java
index 2e08ae7..f0bc498 100644
--- a/src/com/facebook/buck/apple/xcode/xcodeproj/PBXGroup.java
+++ b/src/com/facebook/buck/apple/xcode/xcodeproj/PBXGroup.java
@@ -16,18 +16,50 @@
 
 package com.facebook.buck.apple.xcode.xcodeproj;
 
+import com.facebook.buck.apple.AppleBundle;
+import com.facebook.buck.apple.HasAppleBundleFields;
+import com.facebook.buck.apple.InfoPlistSubstitution;
 import com.facebook.buck.apple.xcode.XcodeprojSerializer;
+import com.facebook.buck.core.model.targetgraph.TargetNode;
+import com.facebook.buck.features.apple.project.ProjectGenerator;
 import com.google.common.cache.CacheBuilder;
 import com.google.common.cache.CacheLoader;
 import com.google.common.cache.LoadingCache;
 import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
+import java.nio.file.Paths;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
+import java.util.Optional;
 import javax.annotation.Nullable;
 
 /** A collection of files in Xcode's virtual filesystem hierarchy. */
 public class PBXGroup extends PBXReference {
+
+  public void addEntitlementsPlistIntoTarget(
+      TargetNode<? extends HasAppleBundleFields> targetNode, ProjectGenerator projectGenerator) {
+    ImmutableMap<String, String> infoPlistSubstitutions =
+        targetNode.getConstructorArg().getInfoPlistSubstitutions();
+
+    if (infoPlistSubstitutions.containsKey(AppleBundle.CODE_SIGN_ENTITLEMENTS)) {
+      String entitlementsPlistPath =
+          InfoPlistSubstitution.replaceVariablesInString(
+              "$(" + AppleBundle.CODE_SIGN_ENTITLEMENTS + ")",
+              AppleBundle.withDefaults(
+                  infoPlistSubstitutions,
+                  ImmutableMap.of(
+                      "SOURCE_ROOT", ".",
+                      "SRCROOT", ".")));
+
+      getOrCreateFileReferenceBySourceTreePath(
+          new SourceTreePath(
+              SourceTree.SOURCE_ROOT,
+              Paths.get(entitlementsPlistPath),
+              Optional.empty()));
+    }
+  }
+
   /** Method by which group contents will be sorted. */
   public enum SortPolicy {
     /** By name, in default Java sort order. */
diff --git a/src/com/facebook/buck/artifact_cache/HybridPayloadGenerator.java b/src/com/facebook/buck/artifact_cache/HybridPayloadGenerator.java
index cee3e89..84290ea 100644
--- a/src/com/facebook/buck/artifact_cache/HybridPayloadGenerator.java
+++ b/src/com/facebook/buck/artifact_cache/HybridPayloadGenerator.java
@@ -107,16 +107,16 @@ public class HybridPayloadGenerator {
     fetchRequest.setRuleKey(ruleKey);
 
     BuckCacheRequest cacheRequest = new BuckCacheRequest();
-    cacheRequest.setType(BuckCacheRequestType.FETCH);
+    BuckCacheRequestType.FETCH.setType(cacheRequest);
     cacheRequest.setFetchRequest(fetchRequest);
-    cacheRequest.setType(BuckCacheRequestType.FETCH);
+    BuckCacheRequestType.FETCH.setType(cacheRequest);
 
     return cacheRequest;
   }
 
   private BuckCacheRequest createStoreRequest() {
     BuckCacheRequest cacheRequest = new BuckCacheRequest();
-    cacheRequest.setType(BuckCacheRequestType.STORE);
+    BuckCacheRequestType.STORE.setType(cacheRequest);
     BuckCacheStoreRequest storeRequest = new BuckCacheStoreRequest();
 
     ArtifactMetadata metadata = new ArtifactMetadata();
diff --git a/src/com/facebook/buck/artifact_cache/ThriftArtifactCache.java b/src/com/facebook/buck/artifact_cache/ThriftArtifactCache.java
index 460f610..a14d7c4 100644
--- a/src/com/facebook/buck/artifact_cache/ThriftArtifactCache.java
+++ b/src/com/facebook/buck/artifact_cache/ThriftArtifactCache.java
@@ -134,7 +134,7 @@ public class ThriftArtifactCache extends AbstractNetworkCache {
     }
 
     BuckCacheRequest cacheRequest = newCacheRequest();
-    cacheRequest.setType(BuckCacheRequestType.FETCH);
+    BuckCacheRequestType.FETCH.setType(cacheRequest);
     cacheRequest.setFetchRequest(fetchRequest);
 
     LOG.verbose("Will fetch key %s", thriftRuleKey);
@@ -381,7 +381,7 @@ public class ThriftArtifactCache extends AbstractNetworkCache {
     containsRequest.setDistributedBuildModeEnabled(distributedBuildModeEnabled);
 
     BuckCacheRequest cacheRequest = newCacheRequest();
-    cacheRequest.setType(BuckCacheRequestType.CONTAINS);
+    BuckCacheRequestType.CONTAINS.setType(cacheRequest);
     cacheRequest.setMultiContainsRequest(containsRequest);
 
     ThriftArtifactCacheProtocol.Request request =
@@ -455,7 +455,7 @@ public class ThriftArtifactCache extends AbstractNetworkCache {
     targets.forEach(t -> multiFetchRequest.addToBuildTargets(t));
 
     BuckCacheRequest cacheRequest = newCacheRequest();
-    cacheRequest.setType(BuckCacheRequestType.MULTI_FETCH);
+    BuckCacheRequestType.MULTI_FETCH.setType(cacheRequest);
     cacheRequest.setMultiFetchRequest(multiFetchRequest);
     return cacheRequest;
   }
@@ -715,7 +715,7 @@ public class ThriftArtifactCache extends AbstractNetworkCache {
     payloadInfo.setSizeBytes(artifactSizeBytes);
     BuckCacheRequest cacheRequest = newCacheRequest();
     cacheRequest.addToPayloads(payloadInfo);
-    cacheRequest.setType(BuckCacheRequestType.STORE);
+    BuckCacheRequestType.STORE.setType(cacheRequest);
     cacheRequest.setStoreRequest(storeRequest);
 
     // Handling for file system issues may lead us to upload empty manifests
@@ -864,7 +864,7 @@ public class ThriftArtifactCache extends AbstractNetworkCache {
     deleteRequest.setRuleKeys(ruleKeysThrift);
     deleteRequest.setScheduleType(scheduleType);
     BuckCacheRequest cacheRequest = newCacheRequest();
-    cacheRequest.setType(BuckCacheRequestType.DELETE_REQUEST);
+    BuckCacheRequestType.DELETE_REQUEST.setType(cacheRequest);
     cacheRequest.setDeleteRequest(deleteRequest);
 
     if (LOG.isVerboseEnabled()) {
diff --git a/src/com/facebook/buck/cli/BuckCommand.java b/src/com/facebook/buck/cli/BuckCommand.java
index c48a8ab..1eb3798 100644
--- a/src/com/facebook/buck/cli/BuckCommand.java
+++ b/src/com/facebook/buck/cli/BuckCommand.java
@@ -16,9 +16,16 @@
 
 package com.facebook.buck.cli;
 
+import com.facebook.buck.core.cell.InvalidCellOverrideException;
 import com.facebook.buck.core.exceptions.HumanReadableException;
 import com.facebook.buck.util.ExitCode;
+import com.facebook.buck.util.config.Config;
+import com.facebook.buck.util.config.Configs;
+import com.google.common.collect.ImmutableMap;
+import java.io.IOException;
 import java.io.PrintStream;
+import java.nio.file.Path;
+import java.util.Objects;
 import java.util.Optional;
 import javax.annotation.Nullable;
 import org.kohsuke.args4j.Argument;
@@ -135,4 +142,22 @@ public class BuckCommand extends AbstractContainerCommand {
       }
     }
   }
+
+  public Config setupDefaultConfig(ImmutableMap<CellName, Path> cellMapping, MainRunner mainRunner)
+      throws IOException {
+    Path rootPath = cellMapping.get(CellName.ROOT_CELL_NAME);
+    Objects.requireNonNull(rootPath, "Root cell should be implicitly added");
+    RawConfig rootCellConfigOverrides;
+
+    try {
+      ImmutableMap<Path, RawConfig> overridesByPath =
+          getConfigOverrides(cellMapping).getOverridesByPath(cellMapping);
+      rootCellConfigOverrides =
+          Optional.ofNullable(overridesByPath.get(rootPath)).orElse(RawConfig.of());
+    } catch (InvalidCellOverrideException exception) {
+      rootCellConfigOverrides =
+          getConfigOverrides(cellMapping).getForCell(CellName.ROOT_CELL_NAME);
+    }
+    return Configs.createDefaultConfig(Objects.requireNonNull(rootPath), rootCellConfigOverrides);
+  }
 }
diff --git a/src/com/facebook/buck/cli/CacheCommand.java b/src/com/facebook/buck/cli/CacheCommand.java
index 276a0e6..8b0a8ec 100644
--- a/src/com/facebook/buck/cli/CacheCommand.java
+++ b/src/com/facebook/buck/cli/CacheCommand.java
@@ -22,7 +22,6 @@ import com.facebook.buck.artifact_cache.CacheCountersSummaryEvent;
 import com.facebook.buck.artifact_cache.CacheResult;
 import com.facebook.buck.artifact_cache.CacheResultType;
 import com.facebook.buck.artifact_cache.config.ArtifactCacheMode;
-import com.facebook.buck.core.build.engine.buildinfo.BuildInfo;
 import com.facebook.buck.core.build.event.BuildEvent;
 import com.facebook.buck.core.model.BuildTarget;
 import com.facebook.buck.core.rulekey.RuleKey;
@@ -37,19 +36,15 @@ import com.facebook.buck.util.ExitCode;
 import com.facebook.buck.util.concurrent.WeightedListeningExecutorService;
 import com.facebook.buck.util.json.ObjectMappers;
 import com.facebook.buck.util.types.Pair;
-import com.facebook.buck.util.unarchive.ArchiveFormat;
-import com.facebook.buck.util.unarchive.ExistingFileMode;
 import com.fasterxml.jackson.core.JsonProcessingException;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.util.concurrent.Futures;
 import com.google.common.util.concurrent.ListenableFuture;
-import java.io.IOException;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.Paths;
-import java.nio.file.StandardCopyOption;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -332,72 +327,6 @@ public class CacheCommand extends AbstractCommand {
     }
   }
 
-  private boolean extractArtifact(
-      ProjectFilesystemFactory projectFilesystemFactory,
-      Path outputPath,
-      Path tmpDir,
-      RuleKey ruleKey,
-      Path artifact,
-      CacheResult success,
-      StringBuilder resultString)
-      throws InterruptedException {
-
-    String buckTarget = "Unknown Target";
-    ImmutableMap<String, String> metadata = success.getMetadata();
-    if (metadata.containsKey(BuildInfo.MetadataKey.TARGET)) {
-      buckTarget = success.metadata().get().get(BuildInfo.MetadataKey.TARGET);
-    }
-    ImmutableList<Path> paths;
-    try {
-      paths =
-          ArchiveFormat.TAR_ZSTD
-              .getUnarchiver()
-              .extractArchive(
-                  projectFilesystemFactory,
-                  artifact.toAbsolutePath(),
-                  tmpDir,
-                  ExistingFileMode.OVERWRITE_AND_CLEAN_DIRECTORIES);
-    } catch (IOException e) {
-      resultString.append(String.format("%s %s !(Unable to extract) %s\n", ruleKey, buckTarget, e));
-      return false;
-    }
-    int filesMoved = 0;
-    for (Path path : paths) {
-      if (path.getParent().getFileName().toString().equals("metadata")) {
-        continue;
-      }
-      Path relative = tmpDir.relativize(path);
-      Path destination = outputPath.resolve(relative);
-      try {
-        Files.createDirectories(destination.getParent());
-        try {
-          Files.move(path, destination, StandardCopyOption.ATOMIC_MOVE);
-        } catch (IOException e) {
-          String differentMountError =
-              String.format(
-                  "%s and %s are not on the same mount. Falling back to non atomic move\n",
-                  path, destination);
-          Files.move(path, destination);
-          // We are adding it after moving file, so in case we fail due to
-          // different reason, we won't show message twice.
-          resultString.append(differentMountError);
-        }
-        resultString.append(String.format("%s %s => %s\n", ruleKey, buckTarget, relative));
-        filesMoved += 1;
-      } catch (IOException e) {
-        resultString.append(
-            String.format(
-                "%s %s !(could not move file: %s) %s\n",
-                ruleKey, buckTarget, e.getMessage(), relative));
-        return false;
-      }
-    }
-    if (filesMoved == 0) {
-      resultString.append(String.format("%s %s !(Nothing to extract)\n", ruleKey, buckTarget));
-    }
-    return filesMoved > 0;
-  }
-
   @Override
   public String getShortDescription() {
     return "makes calls to the artifact cache";
@@ -474,14 +403,13 @@ public class CacheCommand extends AbstractCommand {
         resultString.append(String.format("%s !success\n", ruleKey));
       } else {
         statusString = "Extracting";
-        if (extractArtifact(
+        if (ruleKey.extractArtifact(
             projectFilesystemFactory,
             outputPath.get(),
             tmpDir,
-            ruleKey,
             artifact,
             success,
-            this.resultString)) {
+            this.resultString, this)) {
           this.completed = true;
           statusString = "SUCCESS";
         } else {
diff --git a/src/com/facebook/buck/cli/DistBuildLogsCommand.java b/src/com/facebook/buck/cli/DistBuildLogsCommand.java
index cf851ae..fdc96dd 100644
--- a/src/com/facebook/buck/cli/DistBuildLogsCommand.java
+++ b/src/com/facebook/buck/cli/DistBuildLogsCommand.java
@@ -75,7 +75,7 @@ public class DistBuildLogsCommand extends AbstractDistBuildCommand {
       BuildSlaveLogsMaterializer materializer =
           new BuildSlaveLogsMaterializer(service, filesystem, logDir);
       List<BuildSlaveRunId> notMaterialized =
-          materializer.fetchAndMaterializeAvailableLogs(buildJob.getStampedeId(), buildSlaves);
+          buildJob.getStampedeId().fetchAndMaterializeAvailableLogs(buildSlaves, materializer);
 
       if (notMaterialized.isEmpty()) {
         console.printSuccess(
diff --git a/src/com/facebook/buck/cli/DoctorCommand.java b/src/com/facebook/buck/cli/DoctorCommand.java
index 112b648..8cf52a0 100644
--- a/src/com/facebook/buck/cli/DoctorCommand.java
+++ b/src/com/facebook/buck/cli/DoctorCommand.java
@@ -17,25 +17,17 @@
 package com.facebook.buck.cli;
 
 import com.facebook.buck.doctor.BuildLogHelper;
-import com.facebook.buck.doctor.DefaultDefectReporter;
-import com.facebook.buck.doctor.DefaultExtraInfoCollector;
 import com.facebook.buck.doctor.DefectSubmitResult;
-import com.facebook.buck.doctor.DoctorInteractiveReport;
 import com.facebook.buck.doctor.DoctorReportHelper;
 import com.facebook.buck.doctor.UserInput;
-import com.facebook.buck.doctor.WatchmanDiagReportCollector;
 import com.facebook.buck.doctor.config.BuildLogEntry;
 import com.facebook.buck.doctor.config.DoctorConfig;
 import com.facebook.buck.doctor.config.DoctorEndpointRequest;
 import com.facebook.buck.doctor.config.DoctorEndpointResponse;
-import com.facebook.buck.io.ExecutableFinder;
 import com.facebook.buck.io.filesystem.ProjectFilesystem;
 import com.facebook.buck.log.LogConfigSetup;
-import com.facebook.buck.util.DefaultProcessExecutor;
 import com.facebook.buck.util.ExitCode;
-import com.google.common.collect.ImmutableSet;
 import java.io.BufferedReader;
-import java.io.IOException;
 import java.io.InputStreamReader;
 import java.util.ArrayList;
 import java.util.Optional;
@@ -67,7 +59,7 @@ public class DoctorCommand extends AbstractCommand {
     Optional<String> issueDescription = helper.promptForIssue();
 
     Optional<DefectSubmitResult> reportResult =
-        generateReport(params, userInput, entry.get(), issueDescription);
+        userInput.generateReport(params, entry.get(), issueDescription, this);
     if (!reportResult.isPresent()) {
       params.getConsole().printErrorText("Failed to generate report to send.");
       return ExitCode.FATAL_GENERIC;
@@ -82,46 +74,6 @@ public class DoctorCommand extends AbstractCommand {
     return ExitCode.SUCCESS;
   }
 
-  private Optional<DefectSubmitResult> generateReport(
-      CommandRunnerParams params,
-      UserInput userInput,
-      BuildLogEntry entry,
-      Optional<String> issueDescription)
-      throws IOException, InterruptedException {
-    DoctorConfig doctorConfig = DoctorConfig.of(params.getBuckConfig());
-
-    Optional<WatchmanDiagReportCollector> watchmanDiagReportCollector =
-        WatchmanDiagReportCollector.newInstanceIfWatchmanUsed(
-            params.getWatchman(),
-            params.getCell().getFilesystem(),
-            new DefaultProcessExecutor(params.getConsole()),
-            new ExecutableFinder(),
-            params.getEnvironment());
-
-    DoctorInteractiveReport report =
-        new DoctorInteractiveReport(
-            new DefaultDefectReporter(
-                params.getCell().getFilesystem(),
-                doctorConfig,
-                params.getBuckEventBus(),
-                params.getClock()),
-            params.getCell().getFilesystem(),
-            params.getConsole(),
-            userInput,
-            issueDescription,
-            params.getBuildEnvironmentDescription(),
-            params.getVersionControlStatsGenerator(),
-            doctorConfig,
-            new DefaultExtraInfoCollector(
-                doctorConfig,
-                params.getCell().getFilesystem(),
-                new DefaultProcessExecutor(params.getConsole())),
-            ImmutableSet.of(entry),
-            watchmanDiagReportCollector);
-
-    return report.collectAndSubmitResult();
-  }
-
   @Override
   public boolean isReadOnly() {
     return true;
diff --git a/src/com/facebook/buck/cli/FetchCommand.java b/src/com/facebook/buck/cli/FetchCommand.java
index 5eb4c4a..85bd29d 100644
--- a/src/com/facebook/buck/cli/FetchCommand.java
+++ b/src/com/facebook/buck/cli/FetchCommand.java
@@ -174,11 +174,10 @@ public class FetchCommand extends BuildCommand {
                   getExecutionContext(),
                   isKeepGoing())) {
         exitCode =
-            build.executeAndPrintFailuresToEventBus(
+            params.getConsole().executeAndPrintFailuresToEventBus(
                 buildTargets,
                 params.getBuckEventBus(),
-                params.getConsole(),
-                getPathToBuildReport(params.getBuckConfig()));
+                getPathToBuildReport(params.getBuckConfig()), build);
       }
     }
 
diff --git a/src/com/facebook/buck/cli/MainRunner.java b/src/com/facebook/buck/cli/MainRunner.java
index 3197a2c..58ff98c 100644
--- a/src/com/facebook/buck/cli/MainRunner.java
+++ b/src/com/facebook/buck/cli/MainRunner.java
@@ -31,7 +31,6 @@ import com.facebook.buck.core.build.engine.cache.manager.BuildInfoStoreManager;
 import com.facebook.buck.core.cell.Cell;
 import com.facebook.buck.core.cell.CellName;
 import com.facebook.buck.core.cell.CellPathResolver;
-import com.facebook.buck.core.cell.InvalidCellOverrideException;
 import com.facebook.buck.core.cell.impl.DefaultCellPathResolver;
 import com.facebook.buck.core.cell.impl.LocalCellProviderFactory;
 import com.facebook.buck.core.config.BuckConfig;
@@ -529,24 +528,6 @@ public final class MainRunner {
         canonicalRootPath, Configs.createDefaultConfig(canonicalRootPath));
   }
 
-  private Config setupDefaultConfig(ImmutableMap<CellName, Path> cellMapping, BuckCommand command)
-      throws IOException {
-    Path rootPath = cellMapping.get(CellName.ROOT_CELL_NAME);
-    Objects.requireNonNull(rootPath, "Root cell should be implicitly added");
-    RawConfig rootCellConfigOverrides;
-
-    try {
-      ImmutableMap<Path, RawConfig> overridesByPath =
-          command.getConfigOverrides(cellMapping).getOverridesByPath(cellMapping);
-      rootCellConfigOverrides =
-          Optional.ofNullable(overridesByPath.get(rootPath)).orElse(RawConfig.of());
-    } catch (InvalidCellOverrideException exception) {
-      rootCellConfigOverrides =
-          command.getConfigOverrides(cellMapping).getForCell(CellName.ROOT_CELL_NAME);
-    }
-    return Configs.createDefaultConfig(Objects.requireNonNull(rootPath), rootCellConfigOverrides);
-  }
-
   private ImmutableSet<Path> getProjectWatchList(
       Path canonicalRootPath, BuckConfig buckConfig, DefaultCellPathResolver cellPathResolver) {
     return ImmutableSet.<Path>builder()
@@ -629,7 +610,7 @@ public final class MainRunner {
       UnconfiguredBuildTargetViewFactory buildTargetFactory =
           new ParsingUnconfiguredBuildTargetViewFactory();
 
-      Config currentConfig = setupDefaultConfig(rootCellMapping, command);
+      Config currentConfig = command.setupDefaultConfig(rootCellMapping, this);
       Config config;
       ProjectFilesystem filesystem;
       DefaultCellPathResolver cellPathResolver;
@@ -1594,8 +1575,8 @@ public final class MainRunner {
       // Note that watchmanWatcher is non-null only when context.isPresent().
       registerClientDisconnectedListener(context.get(), buckGlobalState);
       if (watchmanWatcher.isPresent()) {
-        buckGlobalState.watchFileSystem(
-            buildEventBus, watchmanWatcher.get(), watchmanFreshInstanceAction);
+        watchmanWatcher.get().watchFileSystem(
+            buildEventBus, watchmanFreshInstanceAction, buckGlobalState);
       }
       if (buckConfig.getView(BuildBuckConfig.class).getRuleKeyCaching()) {
         LOG.debug("Using rule key calculation caching");
diff --git a/src/com/facebook/buck/cli/TargetsCommand.java b/src/com/facebook/buck/cli/TargetsCommand.java
index 4ff61cb..f84bfda 100644
--- a/src/com/facebook/buck/cli/TargetsCommand.java
+++ b/src/com/facebook/buck/cli/TargetsCommand.java
@@ -419,7 +419,7 @@ public class TargetsCommand extends AbstractCommand {
    * during resolution of configurable attribute values.
    */
   private TargetGraph getSubgraphWithoutConfigurationNodes(TargetGraph targetGraph) {
-    if (!hasConfigurationRules(targetGraph)) {
+    if (!targetGraph.hasConfigurationRules(this)) {
       return targetGraph;
     }
     List<TargetNode<?>> nonConfigurationRootNodes =
@@ -447,11 +447,6 @@ public class TargetsCommand extends AbstractCommand {
     return nodes.filter(node -> node.getRuleType().getKind() != RuleType.Kind.CONFIGURATION);
   }
 
-  private boolean hasConfigurationRules(TargetGraph targetGraph) {
-    return targetGraph.getNodesWithNoIncomingEdges().stream()
-        .anyMatch(node -> node.getRuleType().getKind() == RuleType.Kind.CONFIGURATION);
-  }
-
   /**
    * Output rules along with dependencies as a graph in DOT format As a part of invocation,
    * constructs both target and action graphs
diff --git a/src/com/facebook/buck/cli/TestCommand.java b/src/com/facebook/buck/cli/TestCommand.java
index 7c03bf3..e2b1e4f 100644
--- a/src/com/facebook/buck/cli/TestCommand.java
+++ b/src/com/facebook/buck/cli/TestCommand.java
@@ -244,13 +244,6 @@ public class TestCommand extends BuildCommand {
         : buckConfig.getView(TestBuckConfig.class).isBuildingFilteredTestsEnabled();
   }
 
-  public int getNumTestThreads(BuckConfig buckConfig) {
-    if (isDebugEnabled()) {
-      return 1;
-    }
-    return buckConfig.getView(TestBuckConfig.class).getNumTestThreads();
-  }
-
   public int getNumTestManagedThreads(ResourcesConfig resourcesConfig) {
     if (isDebugEnabled()) {
       return 1;
@@ -291,7 +284,7 @@ public class TestCommand extends BuildCommand {
   private ConcurrencyLimit getTestConcurrencyLimit(CommandRunnerParams params) {
     ResourcesConfig resourcesConfig = params.getBuckConfig().getView(ResourcesConfig.class);
     return new ConcurrencyLimit(
-        getNumTestThreads(params.getBuckConfig()),
+        params.getBuckConfig().getNumTestThreads(this),
         resourcesConfig.getResourceAllocationFairness(),
         getNumTestManagedThreads(resourcesConfig),
         resourcesConfig.getDefaultResourceAmounts(),
@@ -634,11 +627,10 @@ public class TestCommand extends BuildCommand {
                   .concat(RichStream.from(testRules).map(TestRule::getBuildTarget))
                   .toImmutableList();
           ExitCode exitCode =
-              build.executeAndPrintFailuresToEventBus(
+              params.getConsole().executeAndPrintFailuresToEventBus(
                   targets,
                   params.getBuckEventBus(),
-                  params.getConsole(),
-                  getPathToBuildReport(params.getBuckConfig()));
+                  getPathToBuildReport(params.getBuckConfig()), build);
           params.getBuckEventBus().post(BuildEvent.finished(started, exitCode));
           if (exitCode != ExitCode.SUCCESS) {
             return exitCode;
diff --git a/src/com/facebook/buck/cli/ThriftOutput.java b/src/com/facebook/buck/cli/ThriftOutput.java
index a0ec10b..0d838b1 100644
--- a/src/com/facebook/buck/cli/ThriftOutput.java
+++ b/src/com/facebook/buck/cli/ThriftOutput.java
@@ -119,7 +119,7 @@ public class ThriftOutput<T> {
       DirectedAcyclicGraphNode fromNode = new DirectedAcyclicGraphNode();
       fromNode.setName(nodeToNameMappingFunction.apply(node));
       nodeToAttributesFunction.apply(node).forEach(fromNode::putToNodeAttributes);
-      thriftDag.addToNodes(fromNode);
+      fromNode.addToNodes(thriftDag);
 
       ImmutableSet<T> outgoingNodes =
           Optional.ofNullable(graph.getOutgoingNodesFor(node)).orElseGet(() -> ImmutableSet.of());
diff --git a/src/com/facebook/buck/cli/VerifyCachesCommand.java b/src/com/facebook/buck/cli/VerifyCachesCommand.java
index 50824a5..6f410f8 100644
--- a/src/com/facebook/buck/cli/VerifyCachesCommand.java
+++ b/src/com/facebook/buck/cli/VerifyCachesCommand.java
@@ -16,25 +16,12 @@
 
 package com.facebook.buck.cli;
 
-import com.facebook.buck.core.cell.CellProvider;
-import com.facebook.buck.core.model.targetgraph.TargetGraph;
-import com.facebook.buck.core.rulekey.RuleKey;
-import com.facebook.buck.core.rules.ActionGraphBuilder;
-import com.facebook.buck.core.rules.BuildRule;
-import com.facebook.buck.core.rules.resolver.impl.SingleThreadedActionGraphBuilder;
-import com.facebook.buck.core.rules.transformer.impl.DefaultTargetNodeToBuildRuleTransformer;
-import com.facebook.buck.rules.keys.DefaultRuleKeyFactory;
-import com.facebook.buck.rules.keys.RuleKeyCacheRecycler;
-import com.facebook.buck.rules.keys.RuleKeyFieldLoader;
 import com.facebook.buck.rules.keys.config.RuleKeyConfiguration;
 import com.facebook.buck.util.ExitCode;
-import com.facebook.buck.util.RichStream;
 import com.facebook.buck.util.cache.FileHashCache;
 import com.facebook.buck.util.cache.FileHashCacheVerificationResult;
-import com.google.common.collect.ImmutableList;
 import java.io.IOException;
 import java.io.PrintStream;
-import java.util.Map;
 import org.kohsuke.args4j.Option;
 
 /** Verify the contents of our FileHashCache. */
@@ -58,37 +45,6 @@ public class VerifyCachesCommand extends AbstractCommand {
     }
   }
 
-  private boolean verifyRuleKeyCache(
-      CellProvider cellProvider,
-      PrintStream stdOut,
-      RuleKeyConfiguration ruleKeyConfiguration,
-      FileHashCache fileHashCache,
-      RuleKeyCacheRecycler<RuleKey> recycler) {
-    ImmutableList<Map.Entry<BuildRule, RuleKey>> contents = recycler.getCachedBuildRules();
-    RuleKeyFieldLoader fieldLoader = new RuleKeyFieldLoader(ruleKeyConfiguration);
-    ActionGraphBuilder graphBuilder =
-        new SingleThreadedActionGraphBuilder(
-            TargetGraph.EMPTY, new DefaultTargetNodeToBuildRuleTransformer(), cellProvider);
-    contents.forEach(e -> graphBuilder.addToIndex(e.getKey()));
-    DefaultRuleKeyFactory defaultRuleKeyFactory =
-        new DefaultRuleKeyFactory(fieldLoader, fileHashCache, graphBuilder);
-    stdOut.println(String.format("Examining %d build rule keys.", contents.size()));
-    ImmutableList<BuildRule> mismatches =
-        RichStream.from(contents)
-            .filter(entry -> !defaultRuleKeyFactory.build(entry.getKey()).equals(entry.getValue()))
-            .map(Map.Entry::getKey)
-            .toImmutableList();
-    if (mismatches.isEmpty()) {
-      stdOut.println("No rule key cache errors found.");
-    } else {
-      stdOut.println("Found rule key cache errors:");
-      for (BuildRule rule : mismatches) {
-        stdOut.println(String.format("  %s", rule));
-      }
-    }
-    return true;
-  }
-
   @Override
   public ExitCode runWithoutHelp(CommandRunnerParams params) throws Exception {
     boolean success = true;
@@ -116,12 +72,11 @@ public class VerifyCachesCommand extends AbstractCommand {
             .getDefaultRuleKeyFactoryCacheRecycler()
             .map(
                 recycler ->
-                    verifyRuleKeyCache(
-                        params.getCell().getCellProvider(),
+                    params.getCell().getCellProvider().verifyRuleKeyCache(
                         params.getConsole().getStdOut(),
                         params.getRuleKeyConfiguration(),
                         params.getFileHashCache(),
-                        recycler))
+                        recycler, this))
             .orElse(true);
 
     return success ? ExitCode.SUCCESS : ExitCode.BUILD_ERROR;
diff --git a/src/com/facebook/buck/command/Build.java b/src/com/facebook/buck/command/Build.java
index 519b444..e476530 100644
--- a/src/com/facebook/buck/command/Build.java
+++ b/src/com/facebook/buck/command/Build.java
@@ -132,20 +132,6 @@ public class Build implements Closeable {
     return executionContext;
   }
 
-  // This method is thread-safe
-  public ExitCode executeAndPrintFailuresToEventBus(
-      Iterable<BuildTarget> targetsish,
-      BuckEventBus eventBus,
-      Console console,
-      Optional<Path> pathToBuildReport)
-      throws Exception {
-
-    ImmutableList<BuildRule> rulesToBuild = getRulesToBuild(targetsish);
-    List<BuildEngineResult> resultFutures = initializeBuild(rulesToBuild);
-    return waitForBuildToFinishAndPrintFailuresToEventBus(
-        rulesToBuild, resultFutures, eventBus, console, pathToBuildReport);
-  }
-
   public void terminateBuildWithFailure(Throwable failure) {
     buildEngine.terminateBuildWithFailure(failure);
   }
diff --git a/src/com/facebook/buck/command/LocalBuildExecutor.java b/src/com/facebook/buck/command/LocalBuildExecutor.java
index a3df200..73ee95c 100644
--- a/src/com/facebook/buck/command/LocalBuildExecutor.java
+++ b/src/com/facebook/buck/command/LocalBuildExecutor.java
@@ -156,8 +156,8 @@ public class LocalBuildExecutor implements BuildExecutor {
       Iterable<BuildTarget> targetsToBuild, Optional<Path> pathToBuildReport) throws Exception {
     Preconditions.checkArgument(!isShutdown);
     try {
-      return build.executeAndPrintFailuresToEventBus(
-          targetsToBuild, args.getBuckEventBus(), args.getConsole(), pathToBuildReport);
+      return args.getConsole().executeAndPrintFailuresToEventBus(
+          targetsToBuild, args.getBuckEventBus(), pathToBuildReport, build);
     } catch (BuildTargetParseException e) {
       throw new HumanReadableException(
           e.getMessage()
diff --git a/src/com/facebook/buck/core/cell/CellProvider.java b/src/com/facebook/buck/core/cell/CellProvider.java
index e518a32..f5843f9 100644
--- a/src/com/facebook/buck/core/cell/CellProvider.java
+++ b/src/com/facebook/buck/core/cell/CellProvider.java
@@ -15,16 +15,31 @@
  */
 package com.facebook.buck.core.cell;
 
+import com.facebook.buck.cli.VerifyCachesCommand;
 import com.facebook.buck.core.exceptions.HumanReadableException;
 import com.facebook.buck.core.model.BuildTarget;
+import com.facebook.buck.core.model.targetgraph.TargetGraph;
+import com.facebook.buck.core.rulekey.RuleKey;
+import com.facebook.buck.core.rules.ActionGraphBuilder;
+import com.facebook.buck.core.rules.BuildRule;
+import com.facebook.buck.core.rules.resolver.impl.SingleThreadedActionGraphBuilder;
+import com.facebook.buck.core.rules.transformer.impl.DefaultTargetNodeToBuildRuleTransformer;
+import com.facebook.buck.rules.keys.DefaultRuleKeyFactory;
+import com.facebook.buck.rules.keys.RuleKeyCacheRecycler;
+import com.facebook.buck.rules.keys.RuleKeyFieldLoader;
+import com.facebook.buck.util.RichStream;
+import com.facebook.buck.util.cache.FileHashCache;
 import com.google.common.base.Throwables;
 import com.google.common.cache.CacheBuilder;
 import com.google.common.cache.CacheLoader;
 import com.google.common.cache.LoadingCache;
+import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.util.concurrent.UncheckedExecutionException;
 import java.io.IOException;
+import java.io.PrintStream;
 import java.nio.file.Path;
+import java.util.Map;
 import java.util.concurrent.ExecutionException;
 import java.util.function.Function;
 import javax.annotation.Nullable;
@@ -74,4 +89,34 @@ public final class CellProvider {
   public Cell getBuildTargetCell(BuildTarget buildTarget) {
     return getCellByPath(buildTarget.getCellPath());
   }
+
+  public boolean verifyRuleKeyCache(
+      PrintStream stdOut,
+      RuleKeyConfiguration ruleKeyConfiguration,
+      FileHashCache fileHashCache,
+      RuleKeyCacheRecycler<RuleKey> recycler, VerifyCachesCommand verifyCachesCommand) {
+    ImmutableList<Map.Entry<BuildRule, RuleKey>> contents = recycler.getCachedBuildRules();
+    RuleKeyFieldLoader fieldLoader = new RuleKeyFieldLoader(ruleKeyConfiguration);
+    ActionGraphBuilder graphBuilder =
+        new SingleThreadedActionGraphBuilder(
+            TargetGraph.EMPTY, new DefaultTargetNodeToBuildRuleTransformer(), this);
+    contents.forEach(e -> graphBuilder.addToIndex(e.getKey()));
+    DefaultRuleKeyFactory defaultRuleKeyFactory =
+        new DefaultRuleKeyFactory(fieldLoader, fileHashCache, graphBuilder);
+    stdOut.println(String.format("Examining %d build rule keys.", contents.size()));
+    ImmutableList<BuildRule> mismatches =
+        RichStream.from(contents)
+            .filter(entry -> !defaultRuleKeyFactory.build(entry.getKey()).equals(entry.getValue()))
+            .map(Map.Entry::getKey)
+            .toImmutableList();
+    if (mismatches.isEmpty()) {
+      stdOut.println("No rule key cache errors found.");
+    } else {
+      stdOut.println("Found rule key cache errors:");
+      for (BuildRule rule : mismatches) {
+        stdOut.println(String.format("  %s", rule));
+      }
+    }
+    return true;
+  }
 }
diff --git a/src/com/facebook/buck/core/config/BuckConfig.java b/src/com/facebook/buck/core/config/BuckConfig.java
index b199c89..a60a387 100644
--- a/src/com/facebook/buck/core/config/BuckConfig.java
+++ b/src/com/facebook/buck/core/config/BuckConfig.java
@@ -16,6 +16,7 @@
 
 package com.facebook.buck.core.config;
 
+import com.facebook.buck.cli.TestCommand;
 import com.facebook.buck.core.exceptions.BuckUncheckedExecutionException;
 import com.facebook.buck.core.exceptions.BuildTargetParseException;
 import com.facebook.buck.core.exceptions.HumanReadableException;
@@ -454,4 +455,11 @@ public class BuckConfig {
   public ProjectFilesystem getFilesystem() {
     return projectFilesystem;
   }
+
+  public int getNumTestThreads(TestCommand testCommand) {
+    if (testCommand.isDebugEnabled()) {
+      return 1;
+    }
+    return getView(TestBuckConfig.class).getNumTestThreads();
+  }
 }
diff --git a/src/com/facebook/buck/core/model/targetgraph/TargetGraph.java b/src/com/facebook/buck/core/model/targetgraph/TargetGraph.java
index 04f6131..8b2d3c4 100644
--- a/src/com/facebook/buck/core/model/targetgraph/TargetGraph.java
+++ b/src/com/facebook/buck/core/model/targetgraph/TargetGraph.java
@@ -16,6 +16,7 @@
 
 package com.facebook.buck.core.model.targetgraph;
 
+import com.facebook.buck.cli.TargetsCommand;
 import com.facebook.buck.core.model.BuildTarget;
 import com.facebook.buck.core.util.graph.AbstractBreadthFirstTraversal;
 import com.facebook.buck.core.util.graph.DirectedAcyclicGraph;
@@ -157,4 +158,9 @@ public class TargetGraph extends DirectedAcyclicGraph<TargetNode<?>> {
   public int getSize() {
     return getNodes().size();
   }
+
+  public boolean hasConfigurationRules(TargetsCommand targetsCommand) {
+    return getNodesWithNoIncomingEdges().stream()
+        .anyMatch(node -> node.getRuleType().getKind() == RuleType.Kind.CONFIGURATION);
+  }
 }
diff --git a/src/com/facebook/buck/core/rulekey/RuleKey.java b/src/com/facebook/buck/core/rulekey/RuleKey.java
index 74d28a6..2a7e274 100644
--- a/src/com/facebook/buck/core/rulekey/RuleKey.java
+++ b/src/com/facebook/buck/core/rulekey/RuleKey.java
@@ -16,11 +16,22 @@
 
 package com.facebook.buck.core.rulekey;
 
+import com.facebook.buck.cli.CacheCommand;
+import com.facebook.buck.core.build.engine.buildinfo.BuildInfo;
+import com.facebook.buck.io.filesystem.ProjectFilesystemFactory;
 import com.facebook.buck.log.views.JsonViews;
+import com.facebook.buck.util.unarchive.ArchiveFormat;
+import com.facebook.buck.util.unarchive.ExistingFileMode;
 import com.fasterxml.jackson.annotation.JsonProperty;
 import com.fasterxml.jackson.annotation.JsonView;
 import com.google.common.base.Objects;
+import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableMap;
 import com.google.common.hash.HashCode;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.StandardCopyOption;
 import javax.annotation.Nullable;
 
 /**
@@ -79,4 +90,69 @@ public class RuleKey {
   public int hashCode() {
     return this.getHashCode().hashCode();
   }
+
+  public boolean extractArtifact(
+      ProjectFilesystemFactory projectFilesystemFactory,
+      Path outputPath,
+      Path tmpDir,
+      Path artifact,
+      CacheResult success,
+      StringBuilder resultString, CacheCommand cacheCommand)
+      throws InterruptedException {
+
+    String buckTarget = "Unknown Target";
+    ImmutableMap<String, String> metadata = success.getMetadata();
+    if (metadata.containsKey(BuildInfo.MetadataKey.TARGET)) {
+      buckTarget = success.metadata().get().get(BuildInfo.MetadataKey.TARGET);
+    }
+    ImmutableList<Path> paths;
+    try {
+      paths =
+          ArchiveFormat.TAR_ZSTD
+              .getUnarchiver()
+              .extractArchive(
+                  projectFilesystemFactory,
+                  artifact.toAbsolutePath(),
+                  tmpDir,
+                  ExistingFileMode.OVERWRITE_AND_CLEAN_DIRECTORIES);
+    } catch (IOException e) {
+      resultString.append(String.format("%s %s !(Unable to extract) %s\n", this, buckTarget, e));
+      return false;
+    }
+    int filesMoved = 0;
+    for (Path path : paths) {
+      if (path.getParent().getFileName().toString().equals("metadata")) {
+        continue;
+      }
+      Path relative = tmpDir.relativize(path);
+      Path destination = outputPath.resolve(relative);
+      try {
+        Files.createDirectories(destination.getParent());
+        try {
+          Files.move(path, destination, StandardCopyOption.ATOMIC_MOVE);
+        } catch (IOException e) {
+          String differentMountError =
+              String.format(
+                  "%s and %s are not on the same mount. Falling back to non atomic move\n",
+                  path, destination);
+          Files.move(path, destination);
+          // We are adding it after moving file, so in case we fail due to
+          // different reason, we won't show message twice.
+          resultString.append(differentMountError);
+        }
+        resultString.append(String.format("%s %s => %s\n", this, buckTarget, relative));
+        filesMoved += 1;
+      } catch (IOException e) {
+        resultString.append(
+            String.format(
+                "%s %s !(could not move file: %s) %s\n",
+                this, buckTarget, e.getMessage(), relative));
+        return false;
+      }
+    }
+    if (filesMoved == 0) {
+      resultString.append(String.format("%s %s !(Nothing to extract)\n", this, buckTarget));
+    }
+    return filesMoved > 0;
+  }
 }
diff --git a/src/com/facebook/buck/core/rules/BuildRuleParams.java b/src/com/facebook/buck/core/rules/BuildRuleParams.java
index a1e6c4a..f4f818b 100644
--- a/src/com/facebook/buck/core/rules/BuildRuleParams.java
+++ b/src/com/facebook/buck/core/rules/BuildRuleParams.java
@@ -16,8 +16,14 @@
 
 package com.facebook.buck.core.rules;
 
+import com.facebook.buck.core.exceptions.HumanReadableException;
+import com.facebook.buck.core.model.BuildTarget;
+import com.facebook.buck.core.test.rule.TestRule;
+import com.facebook.buck.shell.TestSuite;
+import com.facebook.buck.shell.TestSuiteDescription;
 import com.facebook.buck.util.MoreSuppliers;
 import com.facebook.buck.util.collect.SortedSets;
+import com.google.common.base.Joiner;
 import com.google.common.base.Suppliers;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableSortedSet;
@@ -105,4 +111,22 @@ public class BuildRuleParams {
   public ImmutableSortedSet<BuildRule> getTargetGraphOnlyDeps() {
     return targetGraphOnlyDeps;
   }
+
+  public void validateTestDepsAreTestRules(BuildTarget buildTarget,
+      TestSuiteDescription testSuiteDescription) {
+    // "tests" are added to build deps via reflection
+    ImmutableList<String> invalidTargets =
+        getBuildDeps().stream()
+            .filter(r -> !(r instanceof TestRule || r instanceof TestSuite))
+            .limit(5) // Too much more and it gets hard to read....
+            .map(r -> r.getBuildTarget().getFullyQualifiedName())
+            .collect(ImmutableList.toImmutableList());
+    if (invalidTargets.size() > 0) {
+      throw new HumanReadableException(
+          "Non-test rule%s provided in `tests` in test_suite %s: %s",
+          invalidTargets.size() > 1 ? "s" : "",
+          buildTarget.getFullyQualifiedName(),
+          Joiner.on("\n").join(invalidTargets));
+    }
+  }
 }
diff --git a/src/com/facebook/buck/cxx/AbstractElfCompactSectionsStep.java b/src/com/facebook/buck/cxx/AbstractElfCompactSectionsStep.java
index a542f97..e3ab0d1 100644
--- a/src/com/facebook/buck/cxx/AbstractElfCompactSectionsStep.java
+++ b/src/com/facebook/buck/cxx/AbstractElfCompactSectionsStep.java
@@ -78,7 +78,7 @@ abstract class AbstractElfCompactSectionsStep implements Step {
       long end = elf.header.e_phoff + elf.header.e_phnum * elf.header.e_phentsize;
       for (int index = 0; index < elf.getNumberOfSections(); index++) {
         ElfSection section = elf.getSectionByIndex(index);
-        String name = elf.getSectionName(section.header);
+        String name = section.header.getSectionName(elf);
         if ((section.header.sh_flags & SHF_ALLOC) != 0) {
           addresses.put(name, end);
           end += section.header.sh_size;
diff --git a/src/com/facebook/buck/cxx/CxxLibrary.java b/src/com/facebook/buck/cxx/CxxLibrary.java
index 663e939..bae0ae1 100644
--- a/src/com/facebook/buck/cxx/CxxLibrary.java
+++ b/src/com/facebook/buck/cxx/CxxLibrary.java
@@ -174,14 +174,6 @@ public class CxxLibrary extends NoopBuildRuleWithDeclaredAndExtraDeps
         .toImmutableList();
   }
 
-  private CxxPreprocessorInput getCxxPreprocessorInput(
-      CxxPlatform cxxPlatform, HeaderVisibility headerVisibility, ActionGraphBuilder graphBuilder) {
-    // Handle via metadata query.
-    return CxxLibraryDescription.queryMetadataCxxPreprocessorInput(
-            graphBuilder, getBuildTarget(), cxxPlatform, headerVisibility)
-        .orElseThrow(IllegalStateException::new);
-  }
-
   @Override
   public CxxPreprocessorInput getCxxPreprocessorInput(
       CxxPlatform cxxPlatform, ActionGraphBuilder graphBuilder) {
@@ -202,14 +194,14 @@ public class CxxLibrary extends NoopBuildRuleWithDeclaredAndExtraDeps
    */
   public CxxPreprocessorInput getPublicCxxPreprocessorInputExcludingDelegate(
       CxxPlatform cxxPlatform, ActionGraphBuilder graphBuilder) {
-    return getCxxPreprocessorInput(cxxPlatform, HeaderVisibility.PUBLIC, graphBuilder);
+    return HeaderVisibility.PUBLIC.getCxxPreprocessorInput(cxxPlatform, graphBuilder, this);
   }
 
   @Override
   public CxxPreprocessorInput getPrivateCxxPreprocessorInput(
       CxxPlatform cxxPlatform, ActionGraphBuilder graphBuilder) {
     CxxPreprocessorInput privateInput =
-        getCxxPreprocessorInput(cxxPlatform, HeaderVisibility.PRIVATE, graphBuilder);
+        HeaderVisibility.PRIVATE.getCxxPreprocessorInput(cxxPlatform, graphBuilder, this);
     Optional<CxxPreprocessorInput> delegateInput =
         delegate.flatMap(
             p -> p.getPrivatePreprocessorInput(getBuildTarget(), graphBuilder, cxxPlatform));
diff --git a/src/com/facebook/buck/cxx/CxxPrecompiledHeaderTemplate.java b/src/com/facebook/buck/cxx/CxxPrecompiledHeaderTemplate.java
index fae4191..96e3f8c 100644
--- a/src/com/facebook/buck/cxx/CxxPrecompiledHeaderTemplate.java
+++ b/src/com/facebook/buck/cxx/CxxPrecompiledHeaderTemplate.java
@@ -103,18 +103,17 @@ public class CxxPrecompiledHeaderTemplate extends PreInclude implements AndroidP
     depsBuilder.add(requireAggregatedDepsRule(cxxPlatform, graphBuilder));
     depsBuilder.add(preprocessorDelegate);
 
-    return requirePrecompiledHeader(
+    return compilerFlags.requirePrecompiledHeader(
         canPrecompile,
         preprocessorDelegate,
         cxxPlatform,
         sourceType,
-        compilerFlags,
         depsBuilder,
         getBuildTarget()
             .withFlavors(
                 cxxPlatform.getFlavor(),
                 InternalFlavor.of(Flavor.replaceInvalidCharacters(pchBaseID))),
-        graphBuilder);
+        graphBuilder, CxxPrecompiledHeaderTemplate.this);
   }
 
   @Override
diff --git a/src/com/facebook/buck/cxx/CxxPrefixHeader.java b/src/com/facebook/buck/cxx/CxxPrefixHeader.java
index eec20aa..1b429c4 100644
--- a/src/com/facebook/buck/cxx/CxxPrefixHeader.java
+++ b/src/com/facebook/buck/cxx/CxxPrefixHeader.java
@@ -71,17 +71,16 @@ public class CxxPrefixHeader extends PreInclude {
 
     String pchFullID = String.format("pch-%s-%s", langCode, getHash.apply(computedCompilerFlags));
 
-    return requirePrecompiledHeader(
+    return computedCompilerFlags.requirePrecompiledHeader(
         canPrecompile,
         preprocessorDelegateForCxxRule,
         cxxPlatform,
         sourceType,
-        computedCompilerFlags,
         depsBuilder,
         getBuildTarget()
             .withFlavors(
                 cxxPlatform.getFlavor(),
                 InternalFlavor.of(Flavor.replaceInvalidCharacters(pchFullID))),
-        graphBuilder);
+        graphBuilder, CxxPrefixHeader.this);
   }
 }
diff --git a/src/com/facebook/buck/cxx/CxxToolFlags.java b/src/com/facebook/buck/cxx/CxxToolFlags.java
index f2f30be..c4f1a97 100644
--- a/src/com/facebook/buck/cxx/CxxToolFlags.java
+++ b/src/com/facebook/buck/cxx/CxxToolFlags.java
@@ -16,13 +16,17 @@
 
 package com.facebook.buck.cxx;
 
+import com.facebook.buck.core.model.BuildTarget;
+import com.facebook.buck.core.model.impl.BuildTargetPaths;
 import com.facebook.buck.core.rulekey.AddToRuleKey;
 import com.facebook.buck.core.rulekey.AddsToRuleKey;
+import com.facebook.buck.core.rules.ActionGraphBuilder;
 import com.facebook.buck.core.util.immutables.BuckStyleImmutable;
 import com.facebook.buck.core.util.immutables.BuckStyleTuple;
 import com.facebook.buck.rules.args.Arg;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.Iterables;
+import java.nio.file.Path;
 import org.immutables.value.Value;
 
 /**
@@ -71,6 +75,72 @@ public abstract class CxxToolFlags implements AddsToRuleKey {
     }
     return IterableCxxToolFlags.of(platformFlags.build(), ruleFlags.build());
   }
+
+  /**
+   * Look up or build a precompiled header build rule which this build rule is requesting.
+   *
+   * <p>This method will first try to determine whether a matching PCH was already created; if so,
+   * it will be reused. This is done by searching the cache in the {@link ActionGraphBuilder} owned
+   * by this class. If this ends up building a new instance of {@link CxxPrecompiledHeader}, it will
+   * be added to the graphBuilder cache.
+   * @param canPrecompile
+   * @param preprocessorDelegate
+   * @param cxxPlatform
+   * @param sourceType
+   * @param depsBuilder
+   * @param buildTarget
+   * @param graphBuilder
+   * @param preInclude
+   */
+  public CxxPrecompiledHeader requirePrecompiledHeader(
+      boolean canPrecompile,
+      PreprocessorDelegate preprocessorDelegate,
+      CxxPlatform cxxPlatform,
+      CxxSource.Type sourceType,
+      DepsBuilder depsBuilder,
+      BuildTarget buildTarget,
+      ActionGraphBuilder graphBuilder, PreInclude preInclude) {
+    return (CxxPrecompiledHeader)
+        graphBuilder.computeIfAbsent(
+            buildTarget,
+            target -> {
+              // Give the PCH a filename that looks like a header file with .gch appended to it,
+              // GCC-style.
+              // GCC accepts an "-include" flag with the .h file as its arg, and auto-appends
+              // ".gch" to
+              // automagically use the precompiled header in place of the original header.  Of
+              // course in
+              // our case we'll only have the ".gch" file, which is alright; the ".h" isn't
+              // truly needed.
+              Path output = BuildTargetPaths
+                  .getGenPath(preInclude.getProjectFilesystem(), target, "%s.h.gch");
+
+              CompilerDelegate compilerDelegate =
+                  new CompilerDelegate(
+                      cxxPlatform.getCompilerDebugPathSanitizer(),
+                      CxxSourceTypes.getCompiler(
+                              cxxPlatform, CxxSourceTypes.getPreprocessorOutputType(sourceType))
+                          .resolve(graphBuilder, buildTarget.getTargetConfiguration()),
+                      this,
+                      cxxPlatform.getUseArgFile());
+              depsBuilder.add(compilerDelegate);
+
+              depsBuilder.add(preInclude.getHeaderSourcePath());
+
+              return new CxxPrecompiledHeader(
+                  canPrecompile,
+                  target,
+                  preInclude.getProjectFilesystem(),
+                  depsBuilder.build(),
+                  output,
+                  preprocessorDelegate,
+                  compilerDelegate,
+                  this,
+                  preInclude.getHeaderSourcePath(),
+                  sourceType,
+                  cxxPlatform.getCompilerDebugPathSanitizer());
+            });
+  }
 }
 
 interface CxxToolFlagsBuilder {
diff --git a/src/com/facebook/buck/cxx/PreInclude.java b/src/com/facebook/buck/cxx/PreInclude.java
index cfe4916..41f75be 100644
--- a/src/com/facebook/buck/cxx/PreInclude.java
+++ b/src/com/facebook/buck/cxx/PreInclude.java
@@ -20,7 +20,6 @@ import com.facebook.buck.core.model.BuildTarget;
 import com.facebook.buck.core.model.Flavor;
 import com.facebook.buck.core.model.InternalFlavor;
 import com.facebook.buck.core.model.TargetConfiguration;
-import com.facebook.buck.core.model.impl.BuildTargetPaths;
 import com.facebook.buck.core.rules.ActionGraphBuilder;
 import com.facebook.buck.core.rules.BuildRule;
 import com.facebook.buck.core.rules.BuildRuleParams;
@@ -287,61 +286,4 @@ public abstract class PreInclude extends NoopBuildRuleWithDeclaredAndExtraDeps
       ActionGraphBuilder graphBuilder,
       SourcePathResolver pathResolver);
 
-  /**
-   * Look up or build a precompiled header build rule which this build rule is requesting.
-   *
-   * <p>This method will first try to determine whether a matching PCH was already created; if so,
-   * it will be reused. This is done by searching the cache in the {@link ActionGraphBuilder} owned
-   * by this class. If this ends up building a new instance of {@link CxxPrecompiledHeader}, it will
-   * be added to the graphBuilder cache.
-   */
-  protected CxxPrecompiledHeader requirePrecompiledHeader(
-      boolean canPrecompile,
-      PreprocessorDelegate preprocessorDelegate,
-      CxxPlatform cxxPlatform,
-      CxxSource.Type sourceType,
-      CxxToolFlags compilerFlags,
-      DepsBuilder depsBuilder,
-      BuildTarget buildTarget,
-      ActionGraphBuilder graphBuilder) {
-    return (CxxPrecompiledHeader)
-        graphBuilder.computeIfAbsent(
-            buildTarget,
-            target -> {
-              // Give the PCH a filename that looks like a header file with .gch appended to it,
-              // GCC-style.
-              // GCC accepts an "-include" flag with the .h file as its arg, and auto-appends
-              // ".gch" to
-              // automagically use the precompiled header in place of the original header.  Of
-              // course in
-              // our case we'll only have the ".gch" file, which is alright; the ".h" isn't
-              // truly needed.
-              Path output = BuildTargetPaths.getGenPath(getProjectFilesystem(), target, "%s.h.gch");
-
-              CompilerDelegate compilerDelegate =
-                  new CompilerDelegate(
-                      cxxPlatform.getCompilerDebugPathSanitizer(),
-                      CxxSourceTypes.getCompiler(
-                              cxxPlatform, CxxSourceTypes.getPreprocessorOutputType(sourceType))
-                          .resolve(graphBuilder, buildTarget.getTargetConfiguration()),
-                      compilerFlags,
-                      cxxPlatform.getUseArgFile());
-              depsBuilder.add(compilerDelegate);
-
-              depsBuilder.add(getHeaderSourcePath());
-
-              return new CxxPrecompiledHeader(
-                  canPrecompile,
-                  target,
-                  getProjectFilesystem(),
-                  depsBuilder.build(),
-                  output,
-                  preprocessorDelegate,
-                  compilerDelegate,
-                  compilerFlags,
-                  getHeaderSourcePath(),
-                  sourceType,
-                  cxxPlatform.getCompilerDebugPathSanitizer());
-            });
-  }
 }
diff --git a/src/com/facebook/buck/cxx/toolchain/HeaderVisibility.java b/src/com/facebook/buck/cxx/toolchain/HeaderVisibility.java
index 8bf7b33..ff3be56 100644
--- a/src/com/facebook/buck/cxx/toolchain/HeaderVisibility.java
+++ b/src/com/facebook/buck/cxx/toolchain/HeaderVisibility.java
@@ -19,6 +19,9 @@ package com.facebook.buck.cxx.toolchain;
 import com.facebook.buck.core.model.Flavor;
 import com.facebook.buck.core.model.FlavorConvertible;
 import com.facebook.buck.core.model.InternalFlavor;
+import com.facebook.buck.core.rules.ActionGraphBuilder;
+import com.facebook.buck.cxx.CxxLibrary;
+import com.facebook.buck.cxx.CxxLibraryDescription;
 
 public enum HeaderVisibility implements FlavorConvertible {
   PUBLIC(InternalFlavor.of("public-header-visibility")),
@@ -35,4 +38,12 @@ public enum HeaderVisibility implements FlavorConvertible {
   public Flavor getFlavor() {
     return flavor;
   }
+
+  public CxxPreprocessorInput getCxxPreprocessorInput(
+      CxxPlatform cxxPlatform, ActionGraphBuilder graphBuilder, CxxLibrary cxxLibrary) {
+    // Handle via metadata query.
+    return CxxLibraryDescription.queryMetadataCxxPreprocessorInput(
+            graphBuilder, cxxLibrary.getBuildTarget(), cxxPlatform, this)
+        .orElseThrow(IllegalStateException::new);
+  }
 }
diff --git a/src/com/facebook/buck/cxx/toolchain/elf/Elf.java b/src/com/facebook/buck/cxx/toolchain/elf/Elf.java
index 12007e9..18cad16 100644
--- a/src/com/facebook/buck/cxx/toolchain/elf/Elf.java
+++ b/src/com/facebook/buck/cxx/toolchain/elf/Elf.java
@@ -63,12 +63,6 @@ public class Elf {
     return section;
   }
 
-  /** @return the name of the section found in the section header string table. */
-  public String getSectionName(ElfSectionHeader sectionHeader) {
-    ElfSection stringTable = getSectionByIndex(header.e_shstrndx);
-    return stringTable.lookupString(sectionHeader.sh_name);
-  }
-
   /** @return the parsed section header for the section of the given name. */
   public Optional<ElfSectionLookupResult> getSectionByName(String name) {
     ElfSection stringTable = getSectionByIndex(header.e_shstrndx);
diff --git a/src/com/facebook/buck/cxx/toolchain/elf/ElfSectionHeader.java b/src/com/facebook/buck/cxx/toolchain/elf/ElfSectionHeader.java
index 87f1be8..f31509e 100644
--- a/src/com/facebook/buck/cxx/toolchain/elf/ElfSectionHeader.java
+++ b/src/com/facebook/buck/cxx/toolchain/elf/ElfSectionHeader.java
@@ -142,6 +142,13 @@ public class ElfSectionHeader {
         sh_entsize);
   }
 
+  /** @return the name of the section found in the section header string table.
+   * @param elf*/
+  public String getSectionName(Elf elf) {
+    ElfSection stringTable = elf.getSectionByIndex(elf.header.e_shstrndx);
+    return stringTable.lookupString(sh_name);
+  }
+
   public enum SHType {
     SHT_NULL(0),
     SHT_PROGBITS(1),
diff --git a/src/com/facebook/buck/distributed/BuckVersionUtil.java b/src/com/facebook/buck/distributed/BuckVersionUtil.java
index a1202a6..4991ac3 100644
--- a/src/com/facebook/buck/distributed/BuckVersionUtil.java
+++ b/src/com/facebook/buck/distributed/BuckVersionUtil.java
@@ -31,7 +31,7 @@ public abstract class BuckVersionUtil {
 
   public static BuckVersion createFromGitHash(String gitHash) {
     BuckVersion buckVersion = new BuckVersion();
-    buckVersion.setType(BuckVersionType.GIT);
+    BuckVersionType.GIT.setType(buckVersion);
     buckVersion.setGitHash(gitHash);
     return buckVersion;
   }
@@ -45,7 +45,7 @@ public abstract class BuckVersionUtil {
     buckBinary.setContentHash(hash);
 
     BuckVersion buckVersion = new BuckVersion();
-    buckVersion.setType(BuckVersionType.DEVELOPMENT);
+    BuckVersionType.DEVELOPMENT.setType(buckVersion);
     buckVersion.setDevelopmentVersion(buckBinary);
     return buckVersion;
   }
diff --git a/src/com/facebook/buck/distributed/DistBuildService.java b/src/com/facebook/buck/distributed/DistBuildService.java
index c2c824f..b03b08a 100644
--- a/src/com/facebook/buck/distributed/DistBuildService.java
+++ b/src/com/facebook/buck/distributed/DistBuildService.java
@@ -139,7 +139,7 @@ public class DistBuildService implements Closeable {
     getLogLinesRequest.setBatches(logLineRequests);
 
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.GET_BUILD_SLAVE_REAL_TIME_LOGS);
+    FrontendRequestType.GET_BUILD_SLAVE_REAL_TIME_LOGS.setType(request);
     request.setMultiGetBuildSlaveRealTimeLogsRequest(getLogLinesRequest);
     FrontendResponse response = makeRequestChecked(request);
     return response.getMultiGetBuildSlaveRealTimeLogsResponse();
@@ -154,7 +154,7 @@ public class DistBuildService implements Closeable {
     getBuildSlaveLogDirRequest.setBuildSlaveRunIds(runIds);
 
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.GET_BUILD_SLAVE_LOG_DIR);
+    FrontendRequestType.GET_BUILD_SLAVE_LOG_DIR.setType(request);
     request.setMultiGetBuildSlaveLogDirRequest(getBuildSlaveLogDirRequest);
     FrontendResponse response = makeRequestChecked(request);
     Preconditions.checkState(response.isSetMultiGetBuildSlaveLogDirResponse());
@@ -172,7 +172,7 @@ public class DistBuildService implements Closeable {
     storeBuildGraphRequest.setBuildGraph(BuildJobStateSerializer.serialize(buildJobState));
 
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.STORE_BUILD_GRAPH);
+    FrontendRequestType.STORE_BUILD_GRAPH.setType(request);
     request.setStoreBuildGraphRequest(storeBuildGraphRequest);
     makeRequestChecked(request);
     distBuildClientStats.stopTimer(UPLOAD_TARGET_GRAPH);
@@ -256,8 +256,7 @@ public class DistBuildService implements Closeable {
         executorService.submit(
             () ->
                 makeRequestChecked(
-                    new FrontendRequest()
-                        .setType(FrontendRequestType.CAS_CONTAINS)
+                    FrontendRequestType.CAS_CONTAINS.setType(new FrontendRequest())
                         .setCasContainsRequest(containsReq)));
 
     ListenableFuture<List<FileInfo>> filesToBeUploaded =
@@ -315,8 +314,7 @@ public class DistBuildService implements Closeable {
           storeReq.setFiles(fileList);
           try {
             makeRequestChecked(
-                new FrontendRequest()
-                    .setType(FrontendRequestType.STORE_LOCAL_CHANGES)
+                FrontendRequestType.STORE_LOCAL_CHANGES.setType(new FrontendRequest())
                     .setStoreLocalChangesRequest(storeReq));
             // No response expected.
           } catch (IOException e) {
@@ -347,13 +345,12 @@ public class DistBuildService implements Closeable {
 
     // Tell server to create the build and get the build id.
     CreateBuildRequest createBuildRequest = new CreateBuildRequest();
-    createBuildRequest
+    minionRequirements.setMinionRequirements(createBuildRequest
         .setCreateTimestampMillis(System.currentTimeMillis())
         .setBuckBuildUuid(buildId.toString())
         .setBuildMode(buildMode)
         .setUsername(username)
-        .setBuildTargets(buildTargets)
-        .setMinionRequirements(minionRequirements)
+        .setBuildTargets(buildTargets))
         // TODO(alisdair): remove in future once minion requirements fully supported.
         .setTotalNumberOfMinions(DistBuildUtil.countMinions(minionRequirements))
         .setBuildLabel(buildLabel);
@@ -367,7 +364,7 @@ public class DistBuildService implements Closeable {
     }
 
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.CREATE_BUILD);
+    FrontendRequestType.CREATE_BUILD.setType(request);
     request.setCreateBuildRequest(createBuildRequest);
     FrontendResponse response = makeRequestChecked(request);
 
@@ -396,7 +393,7 @@ public class DistBuildService implements Closeable {
     startRequest.setStampedeId(id);
     startRequest.setEnqueueJob(enqueueJob);
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.START_BUILD);
+    FrontendRequestType.START_BUILD.setType(request);
     request.setStartBuildRequest(startRequest);
     FrontendResponse response = makeRequestChecked(request);
 
@@ -409,7 +406,7 @@ public class DistBuildService implements Closeable {
     BuildStatusRequest statusRequest = new BuildStatusRequest();
     statusRequest.setStampedeId(id);
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.BUILD_STATUS);
+    FrontendRequestType.BUILD_STATUS.setType(request);
     request.setBuildStatusRequest(statusRequest);
     FrontendResponse response = makeRequestChecked(request);
 
@@ -434,7 +431,7 @@ public class DistBuildService implements Closeable {
     FetchBuildGraphRequest fetchBuildGraphRequest = new FetchBuildGraphRequest();
     fetchBuildGraphRequest.setStampedeId(stampedeId);
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.FETCH_BUILD_GRAPH);
+    FrontendRequestType.FETCH_BUILD_GRAPH.setType(frontendRequest);
     frontendRequest.setFetchBuildGraphRequest(fetchBuildGraphRequest);
     return frontendRequest;
   }
@@ -469,7 +466,7 @@ public class DistBuildService implements Closeable {
     FetchSourceFilesRequest fetchSourceFileRequest = new FetchSourceFilesRequest();
     fetchSourceFileRequest.setContentHashes(ImmutableList.copyOf(fileHashes));
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.FETCH_SRC_FILES);
+    FrontendRequestType.FETCH_SRC_FILES.setType(frontendRequest);
     frontendRequest.setFetchSourceFilesRequest(fetchSourceFileRequest);
     return frontendRequest;
   }
@@ -478,7 +475,7 @@ public class DistBuildService implements Closeable {
     BuildStatusRequest buildStatusRequest = new BuildStatusRequest();
     buildStatusRequest.setStampedeId(stampedeId);
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.BUILD_STATUS);
+    FrontendRequestType.BUILD_STATUS.setType(frontendRequest);
     frontendRequest.setBuildStatusRequest(buildStatusRequest);
     return frontendRequest;
   }
@@ -491,7 +488,7 @@ public class DistBuildService implements Closeable {
     setBuckVersionRequest.setStampedeId(id);
     setBuckVersionRequest.setBuckVersion(buckVersion);
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.SET_BUCK_VERSION);
+    FrontendRequestType.SET_BUCK_VERSION.setType(request);
     request.setSetBuckVersionRequest(setBuckVersionRequest);
     makeRequestChecked(request);
     distBuildClientStats.stopTimer(SET_BUCK_VERSION);
@@ -503,7 +500,7 @@ public class DistBuildService implements Closeable {
     storeBuckDotFilesRequest.setStampedeId(id);
     storeBuckDotFilesRequest.setDotFiles(dotFilesRelativePaths);
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.SET_DOTFILE_PATHS);
+    FrontendRequestType.SET_DOTFILE_PATHS.setType(request);
     request.setSetBuckDotFilePathsRequest(storeBuckDotFilesRequest);
     makeRequestChecked(request);
   }
@@ -595,7 +592,7 @@ public class DistBuildService implements Closeable {
     }
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.APPEND_BUILD_SLAVE_EVENTS);
+    FrontendRequestType.APPEND_BUILD_SLAVE_EVENTS.setType(frontendRequest);
     frontendRequest.setAppendBuildSlaveEventsRequest(request);
     makeRequestChecked(frontendRequest);
     LOG.debug(
@@ -624,7 +621,7 @@ public class DistBuildService implements Closeable {
         ThriftUtil.serializeToByteBuffer(PROTOCOL_FOR_CLIENT_ONLY_STRUCTS, buildSlaveEvent));
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.APPEND_BUILD_SLAVE_EVENTS);
+    FrontendRequestType.APPEND_BUILD_SLAVE_EVENTS.setType(frontendRequest);
     frontendRequest.setAppendBuildSlaveEventsRequest(request);
     makeRequestChecked(frontendRequest);
   }
@@ -644,7 +641,7 @@ public class DistBuildService implements Closeable {
     request.setBuildStatus(status);
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.UPDATE_BUILD_SLAVE_BUILD_STATUS);
+    FrontendRequestType.UPDATE_BUILD_SLAVE_BUILD_STATUS.setType(frontendRequest);
     frontendRequest.setUpdateBuildSlaveBuildStatusRequest(request);
     makeRequestChecked(frontendRequest);
   }
@@ -657,20 +654,11 @@ public class DistBuildService implements Closeable {
     request.setBuildSlaveStatus(ThriftUtil.serialize(PROTOCOL_FOR_CLIENT_ONLY_STRUCTS, status));
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.UPDATE_BUILD_SLAVE_STATUS);
+    FrontendRequestType.UPDATE_BUILD_SLAVE_STATUS.setType(frontendRequest);
     frontendRequest.setUpdateBuildSlaveStatusRequest(request);
     makeRequestChecked(frontendRequest);
   }
 
-  public BuildSlaveEventsQuery createBuildSlaveEventsQuery(
-      StampedeId stampedeId, BuildSlaveRunId runId, int firstEventToBeFetched) {
-    BuildSlaveEventsQuery query = new BuildSlaveEventsQuery();
-    query.setStampedeId(stampedeId);
-    query.setBuildSlaveRunId(runId);
-    query.setFirstEventNumber(firstEventToBeFetched);
-    return query;
-  }
-
   /** Fetch BuildSlaveEvents based on a list of queries. */
   public List<BuildSlaveEventWrapper> multiGetBuildSlaveEvents(
       List<BuildSlaveEventsQuery> eventsQueries) throws IOException {
@@ -678,7 +666,7 @@ public class DistBuildService implements Closeable {
     MultiGetBuildSlaveEventsRequest request = new MultiGetBuildSlaveEventsRequest();
     request.setRequests(eventsQueries);
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.MULTI_GET_BUILD_SLAVE_EVENTS);
+    FrontendRequestType.MULTI_GET_BUILD_SLAVE_EVENTS.setType(frontendRequest);
     frontendRequest.setMultiGetBuildSlaveEventsRequest(request);
     FrontendResponse response = makeRequestChecked(frontendRequest);
 
@@ -720,7 +708,7 @@ public class DistBuildService implements Closeable {
     request.setStampedeId(stampedeId);
     request.setBuildSlaveRunId(runId);
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.FETCH_BUILD_SLAVE_STATUS);
+    FrontendRequestType.FETCH_BUILD_SLAVE_STATUS.setType(frontendRequest);
     frontendRequest.setFetchBuildSlaveStatusRequest(request);
     FrontendResponse response = makeRequestChecked(frontendRequest);
 
@@ -747,7 +735,7 @@ public class DistBuildService implements Closeable {
         ThriftUtil.serialize(PROTOCOL_FOR_CLIENT_ONLY_STRUCTS, status));
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.STORE_BUILD_SLAVE_FINISHED_STATS);
+    FrontendRequestType.STORE_BUILD_SLAVE_FINISHED_STATS.setType(frontendRequest);
     frontendRequest.setStoreBuildSlaveFinishedStatsRequest(request);
     makeRequestChecked(frontendRequest);
   }
@@ -758,7 +746,7 @@ public class DistBuildService implements Closeable {
     request.setStampedeId(stampedeId);
     request.setBuildSlaveRunId(runId);
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.FETCH_BUILD_SLAVE_FINISHED_STATS);
+    FrontendRequestType.FETCH_BUILD_SLAVE_FINISHED_STATS.setType(frontendRequest);
     frontendRequest.setFetchBuildSlaveFinishedStatsRequest(request);
     FrontendResponse response = makeRequestChecked(frontendRequest);
 
@@ -792,7 +780,7 @@ public class DistBuildService implements Closeable {
     request.setDistributedBuildModeEnabled(distributedBuildModeEnabled);
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.FETCH_RULE_KEY_LOGS);
+    FrontendRequestType.FETCH_RULE_KEY_LOGS.setType(frontendRequest);
     frontendRequest.setFetchRuleKeyLogsRequest(request);
 
     FrontendResponse response = makeRequestChecked(frontendRequest);
@@ -814,8 +802,7 @@ public class DistBuildService implements Closeable {
             .setBuildStatus(status)
             .setBuildStatusMessage(statusMessage);
     FrontendRequest frontendRequest =
-        new FrontendRequest()
-            .setType(FrontendRequestType.SET_FINAL_BUILD_STATUS)
+        FrontendRequestType.SET_FINAL_BUILD_STATUS.setType(new FrontendRequest())
             .setSetFinalBuildStatusRequest(request);
     makeRequestChecked(frontendRequest);
   }
@@ -834,7 +821,7 @@ public class DistBuildService implements Closeable {
             .setStampedeId(stampedeId);
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.SET_COORDINATOR);
+    FrontendRequestType.SET_COORDINATOR.setType(frontendRequest);
     frontendRequest.setSetCoordinatorRequest(request);
 
     FrontendResponse response = makeRequestChecked(frontendRequest);
@@ -864,7 +851,7 @@ public class DistBuildService implements Closeable {
             .setRegion(minionRegion);
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.ENQUEUE_MINIONS);
+    FrontendRequestType.ENQUEUE_MINIONS.setType(frontendRequest);
     frontendRequest.setEnqueueMinionsRequest(request);
 
     FrontendResponse response = makeRequestChecked(frontendRequest);
@@ -877,7 +864,7 @@ public class DistBuildService implements Closeable {
     request.setStampedeId(stampedeId);
 
     FrontendRequest frontendRequest = new FrontendRequest();
-    frontendRequest.setType(FrontendRequestType.REPORT_COORDINATOR_ALIVE);
+    FrontendRequestType.REPORT_COORDINATOR_ALIVE.setType(frontendRequest);
     frontendRequest.setReportCoordinatorAliveRequest(request);
     FrontendResponse response = makeRequestChecked(frontendRequest);
     Preconditions.checkState(response.isSetReportCoordinatorAliveResponse());
diff --git a/src/com/facebook/buck/distributed/DistBuildTargetGraphCodec.java b/src/com/facebook/buck/distributed/DistBuildTargetGraphCodec.java
index ab49fa2..2d5e059 100644
--- a/src/com/facebook/buck/distributed/DistBuildTargetGraphCodec.java
+++ b/src/com/facebook/buck/distributed/DistBuildTargetGraphCodec.java
@@ -109,7 +109,7 @@ public class DistBuildTargetGraphCodec {
 
           BuildJobStateTargetNode remoteNode = new BuildJobStateTargetNode();
           remoteNode.setCellIndex(cellIndexer.getCellIndex(projectFilesystem.getRootPath()));
-          remoteNode.setBuildTarget(encodeBuildTarget(targetNode.getBuildTarget()));
+          encodeBuildTarget(targetNode.getBuildTarget()).setBuildTarget(remoteNode);
           try {
             remoteNode.setRawNode(ObjectMappers.WRITER.writeValueAsString(rawTargetNode));
           } catch (JsonProcessingException e) {
diff --git a/src/com/facebook/buck/distributed/DistBuildUtil.java b/src/com/facebook/buck/distributed/DistBuildUtil.java
index 5fa3574..8e434bf 100644
--- a/src/com/facebook/buck/distributed/DistBuildUtil.java
+++ b/src/com/facebook/buck/distributed/DistBuildUtil.java
@@ -117,7 +117,7 @@ public class DistBuildUtil {
 
   public static BuildSlaveEvent createBuildSlaveEvent(
       BuildSlaveEventType eventType, long timeMillis) {
-    return new BuildSlaveEvent().setEventType(eventType).setTimestampMillis(timeMillis);
+    return eventType.setEventType(new BuildSlaveEvent()).setTimestampMillis(timeMillis);
   }
 
   /** Create an empty BuildSlaveConsoleEvent. */
@@ -132,11 +132,11 @@ public class DistBuildUtil {
     buildSlaveConsoleEvent.setMessage(event.getMessage());
 
     if (event.getLevel().equals(Level.WARNING)) {
-      buildSlaveConsoleEvent.setSeverity(ConsoleEventSeverity.WARNING);
+      ConsoleEventSeverity.WARNING.setSeverity(buildSlaveConsoleEvent);
     } else if (event.getLevel().equals(Level.SEVERE)) {
-      buildSlaveConsoleEvent.setSeverity(ConsoleEventSeverity.SEVERE);
+      ConsoleEventSeverity.SEVERE.setSeverity(buildSlaveConsoleEvent);
     } else {
-      buildSlaveConsoleEvent.setSeverity(ConsoleEventSeverity.INFO);
+      ConsoleEventSeverity.INFO.setSeverity(buildSlaveConsoleEvent);
     }
 
     return createBuildSlaveConsoleEvent(timeMillis).setConsoleEvent(buildSlaveConsoleEvent);
diff --git a/src/com/facebook/buck/distributed/InlineContentsProvider.java b/src/com/facebook/buck/distributed/InlineContentsProvider.java
index 6a31152..19dc997 100644
--- a/src/com/facebook/buck/distributed/InlineContentsProvider.java
+++ b/src/com/facebook/buck/distributed/InlineContentsProvider.java
@@ -34,23 +34,10 @@ public class InlineContentsProvider implements FileContentsProvider {
     this.executor = executor;
   }
 
-  private boolean materializeFileContents(BuildJobStateFileHashEntry entry, Path targetAbsPath)
-      throws IOException {
-    if (entry.isSetContents()) {
-      try (OutputStream outputStream = newOutputStream(targetAbsPath)) {
-        outputStream.write(entry.getContents());
-      }
-
-      return true;
-    }
-
-    return false;
-  }
-
   @Override
   public ListenableFuture<Boolean> materializeFileContentsAsync(
       BuildJobStateFileHashEntry entry, Path targetAbsPath) {
-    return executor.submit(() -> materializeFileContents(entry, targetAbsPath));
+    return executor.submit(() -> entry.materializeFileContents(targetAbsPath, this));
   }
 
   public static OutputStream newOutputStream(Path absPath) throws IOException {
diff --git a/src/com/facebook/buck/distributed/build_client/BuildPhase.java b/src/com/facebook/buck/distributed/build_client/BuildPhase.java
index f3ebd2b..c66d81e 100644
--- a/src/com/facebook/buck/distributed/build_client/BuildPhase.java
+++ b/src/com/facebook/buck/distributed/build_client/BuildPhase.java
@@ -520,8 +520,8 @@ public class BuildPhase {
     for (BuildSlaveInfo slave : job.getBuildSlaves()) {
       BuildSlaveRunId runId = slave.getBuildSlaveRunId();
       fetchEventQueries.add(
-          distBuildService.createBuildSlaveEventsQuery(
-              stampedeId, runId, nextEventIdBySlaveRunId.getOrDefault(runId, 0)));
+          runId.createBuildSlaveEventsQuery(
+              stampedeId, nextEventIdBySlaveRunId.getOrDefault(runId, 0), distBuildService));
     }
     ListenableFuture<List<BuildSlaveEventWrapper>> fetchEventsFuture =
         networkExecutorService.submit(
@@ -657,7 +657,7 @@ public class BuildPhase {
       // Top level build was set to finished status, however individual slaves might not yet
       // have marked themselves finished, so wait for this to happen before returning.
       // (Without this we have no guarantees about BuildSlaveFinishedStats being uploaded yet).
-      if (!allSlavesFinished(job)) {
+      if (!job.allSlavesFinished(this)) {
         if (elapseMillisSinceFirstFinishedStatus < waitForAllWorkerFinalStatusTimeoutMillis) {
           LOG.warn(
               String.format(
@@ -694,20 +694,6 @@ public class BuildPhase {
     }
   }
 
-  private boolean allSlavesFinished(BuildJob job) {
-    // In case no slaves ever joined the build.
-    if (!job.isSetBuildSlaves()) {
-      return true;
-    }
-
-    for (BuildSlaveInfo slaveInfo : job.getBuildSlaves()) {
-      if (!BuildStatusUtil.isTerminalBuildStatus(slaveInfo.getStatus())) {
-        return false;
-      }
-    }
-    return true;
-  }
-
   /** Exception thrown when the build job is complete. */
   public static final class JobCompletedException extends RuntimeException {
 
diff --git a/src/com/facebook/buck/distributed/build_client/BuildSlaveLogsMaterializer.java b/src/com/facebook/buck/distributed/build_client/BuildSlaveLogsMaterializer.java
index 1afae0f..2fb06c1 100644
--- a/src/com/facebook/buck/distributed/build_client/BuildSlaveLogsMaterializer.java
+++ b/src/com/facebook/buck/distributed/build_client/BuildSlaveLogsMaterializer.java
@@ -66,7 +66,7 @@ public class BuildSlaveLogsMaterializer {
       throws TimeoutException {
     Stopwatch stopwatch = Stopwatch.createStarted();
     while (stopwatch.elapsed(TimeUnit.MILLISECONDS) <= maxTimeoutForLogsToBeAvailableMillis) {
-      toMaterialize = fetchAndMaterializeAvailableLogs(stampedeId, toMaterialize);
+      toMaterialize = stampedeId.fetchAndMaterializeAvailableLogs(toMaterialize, this);
       if (toMaterialize.isEmpty()) {
         return;
       }
@@ -89,21 +89,6 @@ public class BuildSlaveLogsMaterializer {
             maxTimeoutForLogsToBeAvailableMillis));
   }
 
-  /**
-   * @param stampedeId
-   * @param toMaterialize
-   * @return The list BuildSlaveRunIds that still not have their logs available to materialize.
-   */
-  public List<BuildSlaveRunId> fetchAndMaterializeAvailableLogs(
-      StampedeId stampedeId, List<BuildSlaveRunId> toMaterialize) {
-    List<LogDir> logDirs = fetchBuildSlaveLogDirs(stampedeId, toMaterialize);
-    materializeLogDirs(logDirs);
-    return logDirs.stream()
-        .filter(x -> x.isSetErrorMessage())
-        .map(x -> x.getBuildSlaveRunId())
-        .collect(Collectors.toList());
-  }
-
   /** Fetches the logs directory of a BuildSlave. */
   public List<LogDir> fetchBuildSlaveLogDirs(
       StampedeId stampedeId, List<BuildSlaveRunId> toMaterialize) {
diff --git a/src/com/facebook/buck/distributed/build_client/ConsoleEventsDispatcher.java b/src/com/facebook/buck/distributed/build_client/ConsoleEventsDispatcher.java
index 33bb991..c788f25 100644
--- a/src/com/facebook/buck/distributed/build_client/ConsoleEventsDispatcher.java
+++ b/src/com/facebook/buck/distributed/build_client/ConsoleEventsDispatcher.java
@@ -18,11 +18,14 @@ package com.facebook.buck.distributed.build_client;
 import com.facebook.buck.distributed.DistBuildStatusEvent;
 import com.facebook.buck.distributed.ImmutableDistBuildStatus;
 import com.facebook.buck.distributed.thrift.BuildJob;
+import com.facebook.buck.distributed.thrift.BuildSlaveFinishedStats;
+import com.facebook.buck.distributed.thrift.BuildSlaveRunId;
 import com.facebook.buck.distributed.thrift.BuildSlaveStatus;
 import com.facebook.buck.distributed.thrift.BuildStatus;
 import com.facebook.buck.distributed.thrift.CoordinatorBuildProgress;
 import com.facebook.buck.event.BuckEventBus;
 import com.facebook.buck.event.ConsoleEvent;
+import com.facebook.buck.util.types.Pair;
 import java.util.List;
 import java.util.Objects;
 import java.util.Optional;
@@ -71,4 +74,17 @@ public class ConsoleEventsDispatcher {
   public void postConsoleEvent(ConsoleEvent event) {
     buckEventBus.post(event);
   }
+
+  public BuildSlaveStats createAndPublishBuildSlaveStats(
+      Builder builder,
+      List<Pair<BuildSlaveRunId, Optional<BuildSlaveFinishedStats>>> statsList,
+      PostBuildPhase postBuildPhase) {
+    for (Pair<BuildSlaveRunId, Optional<BuildSlaveFinishedStats>> entry : statsList) {
+      builder.putBuildSlaveStats(entry.getFirst(), entry.getSecond());
+    }
+
+    BuildSlaveStats stats = builder.build();
+    sendBuildFinishedEvent(stats);
+    return stats;
+  }
 }
diff --git a/src/com/facebook/buck/distributed/build_client/PostBuildPhase.java b/src/com/facebook/buck/distributed/build_client/PostBuildPhase.java
index 3b586bc..842c487 100644
--- a/src/com/facebook/buck/distributed/build_client/PostBuildPhase.java
+++ b/src/com/facebook/buck/distributed/build_client/PostBuildPhase.java
@@ -139,7 +139,7 @@ public class PostBuildPhase {
         throw new RuntimeException(e);
       }
     } else {
-      materializer.fetchAndMaterializeAvailableLogs(job.getStampedeId(), logsToFetchAndMaterialize);
+      job.getStampedeId().fetchAndMaterializeAvailableLogs(logsToFetchAndMaterialize, materializer);
     }
     distBuildClientStats.stopTimer(MATERIALIZE_SLAVE_LOGS);
   }
@@ -168,23 +168,11 @@ public class PostBuildPhase {
     Builder builder = BuildSlaveStats.builder().setStampedeId(job.getStampedeId());
     return Futures.transform(
         Futures.allAsList(slaveFinishedStatsFutures),
-        statsList -> createAndPublishBuildSlaveStats(builder, statsList, consoleEventsDispatcher),
+        statsList -> consoleEventsDispatcher
+            .createAndPublishBuildSlaveStats(builder, statsList, this),
         MoreExecutors.directExecutor());
   }
 
-  private BuildSlaveStats createAndPublishBuildSlaveStats(
-      Builder builder,
-      List<Pair<BuildSlaveRunId, Optional<BuildSlaveFinishedStats>>> statsList,
-      ConsoleEventsDispatcher consoleEventsDispatcher) {
-    for (Pair<BuildSlaveRunId, Optional<BuildSlaveFinishedStats>> entry : statsList) {
-      builder.putBuildSlaveStats(entry.getFirst(), entry.getSecond());
-    }
-
-    BuildSlaveStats stats = builder.build();
-    consoleEventsDispatcher.sendBuildFinishedEvent(stats);
-    return stats;
-  }
-
   private Optional<BuildSlaveFinishedStats> fetchStatsForIndividualSlave(
       BuildJob job, BuildSlaveRunId runId) {
     Optional<BuildSlaveFinishedStats> finishedStats = Optional.empty();
diff --git a/src/com/facebook/buck/distributed/build_slave/CapacityService.java b/src/com/facebook/buck/distributed/build_slave/CapacityService.java
index 2a3f7ef..c64a843 100644
--- a/src/com/facebook/buck/distributed/build_slave/CapacityService.java
+++ b/src/com/facebook/buck/distributed/build_slave/CapacityService.java
@@ -46,7 +46,7 @@ public class CapacityService {
     GetAllAvailableCapacityRequest getCapacityRequest = new GetAllAvailableCapacityRequest();
 
     BuildSlaveRequest request = new BuildSlaveRequest();
-    request.setType(BuildSlaveRequestType.GET_ALL_AVAILABLE_CAPACITY);
+    BuildSlaveRequestType.GET_ALL_AVAILABLE_CAPACITY.setType(request);
     request.setGetAllAvailableCapacityRequest(getCapacityRequest);
 
     LOG.info("Fetching available capacity.");
@@ -63,7 +63,7 @@ public class CapacityService {
     obtainCapacityRequest.setBuildSlaveRunId(buildSlaveRunId);
 
     BuildSlaveRequest request = new BuildSlaveRequest();
-    request.setType(BuildSlaveRequestType.OBTAIN_ALL_AVAILABLE_CAPACITY);
+    BuildSlaveRequestType.OBTAIN_ALL_AVAILABLE_CAPACITY.setType(request);
     request.setObtainAllAvailableCapacityRequest(obtainCapacityRequest);
 
     LOG.info("Reserving available capacity.");
@@ -80,7 +80,7 @@ public class CapacityService {
     obtainCapacityRequest.setCapacity(size);
 
     BuildSlaveRequest request = new BuildSlaveRequest();
-    request.setType(BuildSlaveRequestType.OBTAIN_CAPACITY);
+    BuildSlaveRequestType.OBTAIN_CAPACITY.setType(request);
     request.setObtainCapacityRequest(obtainCapacityRequest);
 
     LOG.info(String.format("Committing capacity: [%d].", size));
@@ -98,7 +98,7 @@ public class CapacityService {
     returnCapacityRequest.setCapacity(size);
 
     BuildSlaveRequest request = new BuildSlaveRequest();
-    request.setType(BuildSlaveRequestType.RETURN_CAPACITY);
+    BuildSlaveRequestType.RETURN_CAPACITY.setType(request);
     request.setReturnCapacityRequest(returnCapacityRequest);
 
     LOG.info(String.format("Returning capacity: [%d]", size));
diff --git a/src/com/facebook/buck/distributed/build_slave/RuleKeyDivergenceRunnerFactory.java b/src/com/facebook/buck/distributed/build_slave/RuleKeyDivergenceRunnerFactory.java
index 79b80e3..8a566f2 100644
--- a/src/com/facebook/buck/distributed/build_slave/RuleKeyDivergenceRunnerFactory.java
+++ b/src/com/facebook/buck/distributed/build_slave/RuleKeyDivergenceRunnerFactory.java
@@ -111,8 +111,8 @@ public class RuleKeyDivergenceRunnerFactory {
                           event.setDefaultRuleKey(rk.getSecond().getHashCode().toString());
 
                           BuildSlaveEvent buildSlaveEvent = new BuildSlaveEvent();
-                          buildSlaveEvent.setEventType(
-                              BuildSlaveEventType.RULE_KEY_CALCULATED_EVENT);
+                          BuildSlaveEventType.RULE_KEY_CALCULATED_EVENT.setEventType(
+                              buildSlaveEvent);
                           buildSlaveEvent.setRuleKeyCalculatedEvent(event);
 
                           return buildSlaveEvent;
diff --git a/src/com/facebook/buck/distributed/build_slave/ThriftCoordinatorClient.java b/src/com/facebook/buck/distributed/build_slave/ThriftCoordinatorClient.java
index d93460f..04e001b 100644
--- a/src/com/facebook/buck/distributed/build_slave/ThriftCoordinatorClient.java
+++ b/src/com/facebook/buck/distributed/build_slave/ThriftCoordinatorClient.java
@@ -119,10 +119,9 @@ public class ThriftCoordinatorClient implements Closeable {
     Client checkedClient = checkThriftClientRunningOrThrow();
 
     GetWorkRequest request =
-        new GetWorkRequest()
+        minionType.setMinionType(new GetWorkRequest()
             .setStampedeId(stampedeId)
-            .setMinionId(minionId)
-            .setMinionType(minionType)
+            .setMinionId(minionId))
             .setFinishedTargets(finishedTargets)
             .setMaxWorkUnitsToFetch(maxWorkUnitsToFetch)
             .setLastExitCode(minionExitCode);
diff --git a/src/com/facebook/buck/doctor/DefaultDefectReporter.java b/src/com/facebook/buck/doctor/DefaultDefectReporter.java
index 1720800..d06fc23 100644
--- a/src/com/facebook/buck/doctor/DefaultDefectReporter.java
+++ b/src/com/facebook/buck/doctor/DefaultDefectReporter.java
@@ -33,7 +33,6 @@ import com.facebook.buck.slb.SlbBuckConfig;
 import com.facebook.buck.util.json.ObjectMappers;
 import com.facebook.buck.util.timing.Clock;
 import com.facebook.buck.util.versioncontrol.VersionControlCommandFailedException;
-import com.facebook.buck.util.versioncontrol.VersionControlSupplier;
 import com.facebook.buck.util.zip.CustomZipEntry;
 import com.facebook.buck.util.zip.CustomZipOutputStream;
 import com.facebook.buck.util.zip.ZipOutputStreams;
@@ -111,18 +110,6 @@ public class DefaultDefectReporter implements DefectReporter {
     }
   }
 
-  private void addNamedFilesToArchive(
-      CustomZipOutputStream out,
-      ImmutableMap<String, VersionControlSupplier<InputStream>> fileStreams)
-      throws IOException, VersionControlCommandFailedException, InterruptedException {
-    for (Map.Entry<String, VersionControlSupplier<InputStream>> fs : fileStreams.entrySet()) {
-      try (InputStream input = fs.getValue().get()) {
-        out.writeEntry(fs.getKey(), input);
-      }
-      out.closeEntry();
-    }
-  }
-
   @Override
   public DefectSubmitResult submitReport(DefectReport defectReport) throws IOException {
     DefectSubmitResult.Builder defectSubmitResult = DefectSubmitResult.builder();
@@ -164,10 +151,9 @@ public class DefaultDefectReporter implements DefectReporter {
       try {
         if (defectReport.getSourceControlInfo().isPresent()
             && defectReport.getSourceControlInfo().get().getDiff().isPresent()) {
-          addNamedFilesToArchive(
-              out,
+          out.addNamedFilesToArchive(
               ImmutableMap.of(
-                  DIFF_FILE_NAME, defectReport.getSourceControlInfo().get().getDiff().get()));
+                  DIFF_FILE_NAME, defectReport.getSourceControlInfo().get().getDiff().get()), this);
         }
       } catch (VersionControlCommandFailedException | InterruptedException e) {
         // log the exceptions thrown from VersionControlSupplier<InputStream> when generating diff
diff --git a/src/com/facebook/buck/doctor/UserInput.java b/src/com/facebook/buck/doctor/UserInput.java
index fd10660..4442aaa 100644
--- a/src/com/facebook/buck/doctor/UserInput.java
+++ b/src/com/facebook/buck/doctor/UserInput.java
@@ -16,6 +16,9 @@
 
 package com.facebook.buck.doctor;
 
+import com.facebook.buck.cli.DoctorCommand;
+import com.facebook.buck.io.ExecutableFinder;
+import com.facebook.buck.util.DefaultProcessExecutor;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.ImmutableSet;
@@ -166,4 +169,43 @@ public class UserInput {
     }
     return result.build();
   }
+
+  public Optional<DefectSubmitResult> generateReport(
+      CommandRunnerParams params,
+      BuildLogEntry entry,
+      Optional<String> issueDescription, DoctorCommand doctorCommand)
+      throws IOException, InterruptedException {
+    DoctorConfig doctorConfig = DoctorConfig.of(params.getBuckConfig());
+
+    Optional<WatchmanDiagReportCollector> watchmanDiagReportCollector =
+        WatchmanDiagReportCollector.newInstanceIfWatchmanUsed(
+            params.getWatchman(),
+            params.getCell().getFilesystem(),
+            new DefaultProcessExecutor(params.getConsole()),
+            new ExecutableFinder(),
+            params.getEnvironment());
+
+    DoctorInteractiveReport report =
+        new DoctorInteractiveReport(
+            new DefaultDefectReporter(
+                params.getCell().getFilesystem(),
+                doctorConfig,
+                params.getBuckEventBus(),
+                params.getClock()),
+            params.getCell().getFilesystem(),
+            params.getConsole(),
+            this,
+            issueDescription,
+            params.getBuildEnvironmentDescription(),
+            params.getVersionControlStatsGenerator(),
+            doctorConfig,
+            new DefaultExtraInfoCollector(
+                doctorConfig,
+                params.getCell().getFilesystem(),
+                new DefaultProcessExecutor(params.getConsole())),
+            ImmutableSet.of(entry),
+            watchmanDiagReportCollector);
+
+    return report.collectAndSubmitResult();
+  }
 }
diff --git a/src/com/facebook/buck/event/listener/DistBuildSlaveEventBusListener.java b/src/com/facebook/buck/event/listener/DistBuildSlaveEventBusListener.java
index eb5cf08..e320bfc 100644
--- a/src/com/facebook/buck/event/listener/DistBuildSlaveEventBusListener.java
+++ b/src/com/facebook/buck/event/listener/DistBuildSlaveEventBusListener.java
@@ -199,13 +199,12 @@ public class DistBuildSlaveEventBusListener
 
   private BuildSlaveFinishedStats createBuildSlaveFinishedStats() {
     BuildSlaveFinishedStats finishedStats =
-        new BuildSlaveFinishedStats()
-            .setHostname(hostname)
-            .setJobName(jobName)
-            .setDistBuildMode(distBuildMode.name())
-            .setBuildSlaveStatus(createBuildSlaveStatus())
-            .setFileMaterializationStats(
-                fileMaterializationStatsTracker.getFileMaterializationStats())
+        fileMaterializationStatsTracker.getFileMaterializationStats().setFileMaterializationStats(
+            new BuildSlaveFinishedStats()
+                .setHostname(hostname)
+                .setJobName(jobName)
+                .setDistBuildMode(distBuildMode.name())
+                .setBuildSlaveStatus(createBuildSlaveStatus()))
             .setHealthCheckStats(healthCheckStatsTracker.getHealthCheckStats())
             .setBuildSlavePerStageTimingStats(slaveStatsTracker.generateStats());
     Preconditions.checkState(
@@ -262,7 +261,7 @@ public class DistBuildSlaveEventBusListener
     }
 
     CoordinatorBuildProgressEvent progressEvent =
-        new CoordinatorBuildProgressEvent().setBuildProgress(coordinatorBuildProgress);
+        coordinatorBuildProgress.setBuildProgress(new CoordinatorBuildProgressEvent());
 
     BuildSlaveEvent buildSlaveEvent =
         DistBuildUtil.createBuildSlaveEvent(
diff --git a/src/com/facebook/buck/event/listener/DistBuildSlaveStateRenderer.java b/src/com/facebook/buck/event/listener/DistBuildSlaveStateRenderer.java
index e3f5cba..0bc350f 100644
--- a/src/com/facebook/buck/event/listener/DistBuildSlaveStateRenderer.java
+++ b/src/com/facebook/buck/event/listener/DistBuildSlaveStateRenderer.java
@@ -77,13 +77,9 @@ public class DistBuildSlaveStateRenderer implements MultiStateRenderer {
     return "Servers";
   }
 
-  private boolean isSlaveIdle(BuildSlaveStatus status) {
-    return status.getTotalRulesCount() != 0 && status.getRulesBuildingCount() == 0;
-  }
-
   @Override
   public int getExecutorCount() {
-    return (int) slaveStatuses.stream().filter(status -> !isSlaveIdle(status)).count();
+    return (int) slaveStatuses.stream().filter(status -> !status.isSlaveIdle(this)).count();
   }
 
   @Override
@@ -91,7 +87,7 @@ public class DistBuildSlaveStateRenderer implements MultiStateRenderer {
     return IntStream.range(0, slaveStatuses.size())
         .boxed()
         .map(i -> new Pair<>(i, slaveStatuses.get(i)))
-        .filter(pair -> !isSlaveIdle(pair.getSecond()))
+        .filter(pair -> !pair.getSecond().isSlaveIdle(this))
         .sorted(serverComparator)
         .map(pair -> (long) pair.getFirst())
         .collect(ImmutableList.toImmutableList());
diff --git a/src/com/facebook/buck/event/listener/PublicAnnouncementManager.java b/src/com/facebook/buck/event/listener/PublicAnnouncementManager.java
index 63c3d86..0b58921 100644
--- a/src/com/facebook/buck/event/listener/PublicAnnouncementManager.java
+++ b/src/com/facebook/buck/event/listener/PublicAnnouncementManager.java
@@ -88,7 +88,7 @@ public class PublicAnnouncementManager {
                   announcementRequest.setBuckVersion(getBuckVersion());
                   announcementRequest.setRepository(logConfig.getRepository());
                   FrontendRequest request = new FrontendRequest();
-                  request.setType(FrontendRequestType.ANNOUNCEMENT);
+                  FrontendRequestType.ANNOUNCEMENT.setType(request);
                   request.setAnnouncementRequest(announcementRequest);
 
                   FrontendResponse response = frontendService.makeRequest(request);
diff --git a/src/com/facebook/buck/features/apple/project/ProjectGenerator.java b/src/com/facebook/buck/features/apple/project/ProjectGenerator.java
index 6625019..fc4049b 100644
--- a/src/com/facebook/buck/features/apple/project/ProjectGenerator.java
+++ b/src/com/facebook/buck/features/apple/project/ProjectGenerator.java
@@ -25,7 +25,6 @@ import com.facebook.buck.apple.AppleBinaryDescription;
 import com.facebook.buck.apple.AppleBinaryDescriptionArg;
 import com.facebook.buck.apple.AppleBuildRules;
 import com.facebook.buck.apple.AppleBuildRules.RecursiveDependenciesMode;
-import com.facebook.buck.apple.AppleBundle;
 import com.facebook.buck.apple.AppleBundleDescription;
 import com.facebook.buck.apple.AppleBundleDescriptionArg;
 import com.facebook.buck.apple.AppleBundleExtension;
@@ -44,7 +43,6 @@ import com.facebook.buck.apple.AppleTestDescriptionArg;
 import com.facebook.buck.apple.AppleWrapperResourceArg;
 import com.facebook.buck.apple.CoreDataModelDescription;
 import com.facebook.buck.apple.HasAppleBundleFields;
-import com.facebook.buck.apple.InfoPlistSubstitution;
 import com.facebook.buck.apple.PrebuiltAppleFrameworkDescription;
 import com.facebook.buck.apple.PrebuiltAppleFrameworkDescriptionArg;
 import com.facebook.buck.apple.SceneKitAssetsDescription;
@@ -1995,7 +1993,7 @@ public class ProjectGenerator {
     if (bundle.isPresent()
         && isFocusedOnTarget
         && !options.shouldGenerateHeaderSymlinkTreesOnly()) {
-      addEntitlementsPlistIntoTarget(bundle.get(), targetGroup.get());
+      targetGroup.get().addEntitlementsPlistIntoTarget(bundle.get(), this);
     }
 
     return target;
@@ -2684,29 +2682,6 @@ public class ProjectGenerator {
     }
   }
 
-  private void addEntitlementsPlistIntoTarget(
-      TargetNode<? extends HasAppleBundleFields> targetNode, PBXGroup targetGroup) {
-    ImmutableMap<String, String> infoPlistSubstitutions =
-        targetNode.getConstructorArg().getInfoPlistSubstitutions();
-
-    if (infoPlistSubstitutions.containsKey(AppleBundle.CODE_SIGN_ENTITLEMENTS)) {
-      String entitlementsPlistPath =
-          InfoPlistSubstitution.replaceVariablesInString(
-              "$(" + AppleBundle.CODE_SIGN_ENTITLEMENTS + ")",
-              AppleBundle.withDefaults(
-                  infoPlistSubstitutions,
-                  ImmutableMap.of(
-                      "SOURCE_ROOT", ".",
-                      "SRCROOT", ".")));
-
-      targetGroup.getOrCreateFileReferenceBySourceTreePath(
-          new SourceTreePath(
-              PBXReference.SourceTree.SOURCE_ROOT,
-              Paths.get(entitlementsPlistPath),
-              Optional.empty()));
-    }
-  }
-
   private void addCoreDataModelsIntoTarget(
       TargetNode<? extends CxxLibraryDescription.CommonArg> targetNode, PBXGroup targetGroup)
       throws IOException {
diff --git a/src/com/facebook/buck/features/dotnet/CsharpLibraryCompile.java b/src/com/facebook/buck/features/dotnet/CsharpLibraryCompile.java
index 8df6d34..d06c6e1 100644
--- a/src/com/facebook/buck/features/dotnet/CsharpLibraryCompile.java
+++ b/src/com/facebook/buck/features/dotnet/CsharpLibraryCompile.java
@@ -71,7 +71,7 @@ public class CsharpLibraryCompile extends ShellStep {
     args.add("/target:library").add("/out:" + output);
 
     for (Either<Path, String> ref : references) {
-      args.add("/reference:" + resolveReference(netFramework, ref));
+      args.add("/reference:" + netFramework.resolveReference(ref, this));
     }
 
     for (Path resource : resources.keySet()) {
@@ -88,15 +88,6 @@ public class CsharpLibraryCompile extends ShellStep {
     return args.build();
   }
 
-  private String resolveReference(DotnetFramework netFramework, Either<Path, String> ref) {
-    if (ref.isLeft()) {
-      return ref.getLeft().toString();
-    }
-
-    Path pathToAssembly = netFramework.findReferenceAssembly(ref.getRight());
-    return pathToAssembly.toString();
-  }
-
   @Override
   public String getShortName() {
     return "compile csharp";
diff --git a/src/com/facebook/buck/features/dotnet/DotnetFramework.java b/src/com/facebook/buck/features/dotnet/DotnetFramework.java
index 2807663..383651f 100644
--- a/src/com/facebook/buck/features/dotnet/DotnetFramework.java
+++ b/src/com/facebook/buck/features/dotnet/DotnetFramework.java
@@ -17,6 +17,7 @@
 package com.facebook.buck.features.dotnet;
 
 import com.facebook.buck.core.exceptions.HumanReadableException;
+import com.facebook.buck.util.types.Either;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableList.Builder;
@@ -93,4 +94,14 @@ public class DotnetFramework {
 
     return new DotnetFramework(version, builder.build());
   }
+
+  public String resolveReference(Either<Path, String> ref,
+      CsharpLibraryCompile csharpLibraryCompile) {
+    if (ref.isLeft()) {
+      return ref.getLeft().toString();
+    }
+
+    Path pathToAssembly = findReferenceAssembly(ref.getRight());
+    return pathToAssembly.toString();
+  }
 }
diff --git a/src/com/facebook/buck/features/project/intellij/ModuleBuildContext.java b/src/com/facebook/buck/features/project/intellij/ModuleBuildContext.java
index e6bdb9b..5b6009e 100644
--- a/src/com/facebook/buck/features/project/intellij/ModuleBuildContext.java
+++ b/src/com/facebook/buck/features/project/intellij/ModuleBuildContext.java
@@ -23,9 +23,6 @@ import com.facebook.buck.features.project.intellij.model.IjModule;
 import com.facebook.buck.features.project.intellij.model.IjModuleAndroidFacet;
 import com.facebook.buck.features.project.intellij.model.IjModuleType;
 import com.facebook.buck.features.project.intellij.model.folders.IjFolder;
-import com.facebook.buck.features.project.intellij.model.folders.JavaResourceFolder;
-import com.facebook.buck.features.project.intellij.model.folders.ResourceFolder;
-import com.facebook.buck.features.project.intellij.model.folders.SourceFolder;
 import com.facebook.buck.features.project.intellij.model.folders.TestFolder;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.HashMultimap;
@@ -177,54 +174,11 @@ public class ModuleBuildContext {
     Path path = folder.getPath();
     IjFolder otherFolder = sourceFoldersMergeMap.get(path);
     if (otherFolder != null) {
-      folder = mergePromotingToSourceIfDifferent(folder, otherFolder);
+      folder = folder.mergePromotingToSourceIfDifferent(otherFolder, this);
     }
     sourceFoldersMergeMap.put(path, folder);
   }
 
-  /**
-   * Merges the two folders according to the following rules:
-   *
-   * <ul>
-   *   <li>Folders of the same type merge normally.
-   *   <li>A resource folder and a test resource folder should become a regular resource folder.
-   *   <li>A folder that contains both regular and test sources should become a source folder.
-   *   <li>A folder that contains any kind of source and any kind of resource will not work
-   *       correctly if the resources_root is different from the src_root, since buck allows
-   *       individual files to be marked as sources/resources, but IntelliJ's granularity is only at
-   *       the folder level. Thus, we try to handle this by promoting these to source folders (or
-   *       test folders if it is test + resource), but there isn't really a good way around it.
-   * </ul>
-   */
-  private IjFolder mergePromotingToSourceIfDifferent(IjFolder from, IjFolder to) {
-    if (from.getClass().equals(to.getClass())) {
-      return from.merge(to);
-    }
-
-    // If both are resource folders of different types, we merge them into a regular resource
-    // folder.
-    if (from instanceof ResourceFolder && to instanceof ResourceFolder) {
-      Path resourcesRoot = ((ResourceFolder) to).getResourcesRoot();
-      return new JavaResourceFolder(to.getPath(), resourcesRoot, IjFolder.combineInputs(from, to));
-    }
-
-    // If one is a test folder and one is a resource folder, we merge them into a test folder. Note
-    // that as per the comment for this function, this may not necessarily work correctly.
-    if ((from.getClass().equals(TestFolder.class) && to instanceof ResourceFolder)
-        || (to.getClass().equals(TestFolder.class) && from instanceof ResourceFolder)) {
-      return new TestFolder(
-          to.getPath(),
-          from.getWantsPackagePrefix() || to.getWantsPackagePrefix(),
-          IjFolder.combineInputs(from, to));
-    }
-
-    // If we're not sure what to do otherwise, use SourceFolder.
-    return new SourceFolder(
-        to.getPath(),
-        from.getWantsPackagePrefix() || to.getWantsPackagePrefix(),
-        IjFolder.combineInputs(from, to));
-  }
-
   public void addDeps(Iterable<BuildTarget> buildTargets, DependencyType dependencyType) {
     addDeps(ImmutableSet.of(), buildTargets, dependencyType);
   }
diff --git a/src/com/facebook/buck/features/project/intellij/model/folders/IjFolder.java b/src/com/facebook/buck/features/project/intellij/model/folders/IjFolder.java
index cf7338d..29143aa 100644
--- a/src/com/facebook/buck/features/project/intellij/model/folders/IjFolder.java
+++ b/src/com/facebook/buck/features/project/intellij/model/folders/IjFolder.java
@@ -16,6 +16,7 @@
 
 package com.facebook.buck.features.project.intellij.model.folders;
 
+import com.facebook.buck.features.project.intellij.ModuleBuildContext;
 import com.google.common.base.Suppliers;
 import com.google.common.collect.ImmutableSortedSet;
 import java.nio.file.Path;
@@ -159,4 +160,50 @@ public abstract class IjFolder implements Comparable<IjFolder> {
         .addAll(second.getInputs())
         .build();
   }
+
+  /**
+   * Merges the two folders according to the following rules:
+   *
+   * <ul>
+   *   <li>Folders of the same type merge normally.
+   *   <li>A resource folder and a test resource folder should become a regular resource folder.
+   *   <li>A folder that contains both regular and test sources should become a source folder.
+   *   <li>A folder that contains any kind of source and any kind of resource will not work
+   *       correctly if the resources_root is different from the src_root, since buck allows
+   *       individual files to be marked as sources/resources, but IntelliJ's granularity is only at
+   *       the folder level. Thus, we try to handle this by promoting these to source folders (or
+   *       test folders if it is test + resource), but there isn't really a good way around it.
+   * </ul>
+   * @param to
+   * @param moduleBuildContext
+   */
+  public IjFolder mergePromotingToSourceIfDifferent(IjFolder to,
+      ModuleBuildContext moduleBuildContext) {
+    if (getClass().equals(to.getClass())) {
+      return merge(to);
+    }
+
+    // If both are resource folders of different types, we merge them into a regular resource
+    // folder.
+    if (this instanceof ResourceFolder && to instanceof ResourceFolder) {
+      Path resourcesRoot = ((ResourceFolder) to).getResourcesRoot();
+      return new JavaResourceFolder(to.getPath(), resourcesRoot, combineInputs(this, to));
+    }
+
+    // If one is a test folder and one is a resource folder, we merge them into a test folder. Note
+    // that as per the comment for this function, this may not necessarily work correctly.
+    if ((getClass().equals(TestFolder.class) && to instanceof ResourceFolder)
+        || (to.getClass().equals(TestFolder.class) && this instanceof ResourceFolder)) {
+      return new TestFolder(
+          to.getPath(),
+          getWantsPackagePrefix() || to.getWantsPackagePrefix(),
+          combineInputs(this, to));
+    }
+
+    // If we're not sure what to do otherwise, use SourceFolder.
+    return new SourceFolder(
+        to.getPath(),
+        getWantsPackagePrefix() || to.getWantsPackagePrefix(),
+        combineInputs(this, to));
+  }
 }
diff --git a/src/com/facebook/buck/features/python/PythonBuckConfig.java b/src/com/facebook/buck/features/python/PythonBuckConfig.java
index 0d54975..6d0f755 100644
--- a/src/com/facebook/buck/features/python/PythonBuckConfig.java
+++ b/src/com/facebook/buck/features/python/PythonBuckConfig.java
@@ -25,7 +25,10 @@ import com.facebook.buck.core.rules.BuildRuleResolver;
 import com.facebook.buck.core.sourcepath.PathSourcePath;
 import com.facebook.buck.core.toolchain.tool.Tool;
 import com.facebook.buck.cxx.toolchain.nativelink.NativeLinkStrategy;
+import com.facebook.buck.features.python.toolchain.impl.LazyPythonPlatform;
+import com.facebook.buck.features.python.toolchain.impl.PythonVersionFactory;
 import com.facebook.buck.rules.tool.config.ToolConfig;
+import com.facebook.buck.util.ProcessExecutor;
 import java.nio.file.Path;
 import java.util.Optional;
 import java.util.stream.Stream;
@@ -135,6 +138,24 @@ public class PythonBuckConfig {
     return delegate.getPathSourcePath(pythonPath);
   }
 
+  public PythonVersion getVersion(
+      ProcessExecutor processExecutor,
+      String section,
+      Path path, LazyPythonPlatform lazyPythonPlatform) {
+
+    Optional<PythonVersion> configuredVersion =
+        getConfiguredVersion(section).map(PythonVersionFactory::fromString);
+    if (configuredVersion.isPresent()) {
+      return configuredVersion.get();
+    }
+
+    try {
+      return PythonVersionFactory.fromInterpreter(processExecutor, path);
+    } catch (InterruptedException e) {
+      throw new RuntimeException(e);
+    }
+  }
+
   public enum PackageStyle {
     STANDALONE {
       @Override
diff --git a/src/com/facebook/buck/features/python/toolchain/impl/LazyPythonPlatform.java b/src/com/facebook/buck/features/python/toolchain/impl/LazyPythonPlatform.java
index 6f9dcf4..ec6b835 100644
--- a/src/com/facebook/buck/features/python/toolchain/impl/LazyPythonPlatform.java
+++ b/src/com/facebook/buck/features/python/toolchain/impl/LazyPythonPlatform.java
@@ -68,30 +68,11 @@ public class LazyPythonPlatform implements PythonPlatform {
 
               Path pythonPath = pythonInterpreter.getPythonInterpreterPath(configSection);
               PythonVersion pythonVersion =
-                  getVersion(pythonBuckConfig, this.processExecutor, configSection, pythonPath);
+                  pythonBuckConfig.getVersion(this.processExecutor, configSection, pythonPath, this);
               return new PythonEnvironment(pythonPath, pythonVersion, configSection);
             });
   }
 
-  private PythonVersion getVersion(
-      PythonBuckConfig pythonBuckConfig,
-      ProcessExecutor processExecutor,
-      String section,
-      Path path) {
-
-    Optional<PythonVersion> configuredVersion =
-        pythonBuckConfig.getConfiguredVersion(section).map(PythonVersionFactory::fromString);
-    if (configuredVersion.isPresent()) {
-      return configuredVersion.get();
-    }
-
-    try {
-      return PythonVersionFactory.fromInterpreter(processExecutor, path);
-    } catch (InterruptedException e) {
-      throw new RuntimeException(e);
-    }
-  }
-
   @Override
   public Flavor getFlavor() {
     return flavor;
diff --git a/src/com/facebook/buck/file/HttpArchive.java b/src/com/facebook/buck/file/HttpArchive.java
index 004193d..8dd4f75 100644
--- a/src/com/facebook/buck/file/HttpArchive.java
+++ b/src/com/facebook/buck/file/HttpArchive.java
@@ -29,9 +29,6 @@ import com.facebook.buck.io.BuildCellRelativePath;
 import com.facebook.buck.io.filesystem.ProjectFilesystem;
 import com.facebook.buck.step.Step;
 import com.facebook.buck.step.fs.MakeCleanDirectoryStep;
-import com.facebook.buck.unarchive.UnarchiveStep;
-import com.facebook.buck.unarchive.UntarStep;
-import com.facebook.buck.unarchive.UnzipStep;
 import com.facebook.buck.util.unarchive.ArchiveFormat;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.collect.ImmutableList;
@@ -88,14 +85,14 @@ public class HttpArchive extends AbstractBuildRuleWithDeclaredAndExtraDeps {
                 context.getBuildCellRootPath(), getProjectFilesystem(), output)));
 
     steps.add(
-        getUnarchiveStep(
+        format.getUnarchiveStep(
             getProjectFilesystem(),
             context
                 .getSourcePathResolver()
                 .getAbsolutePath(implicitHttpFile.getSourcePathToOutput()),
             output,
             stripPrefix,
-            format));
+            this));
 
     buildableContext.recordArtifact(output);
 
@@ -107,22 +104,4 @@ public class HttpArchive extends AbstractBuildRuleWithDeclaredAndExtraDeps {
     return ExplicitBuildTargetSourcePath.of(getBuildTarget(), output);
   }
 
-  private UnarchiveStep getUnarchiveStep(
-      ProjectFilesystem filesystem,
-      Path archiveFile,
-      Path destinationDirectory,
-      Optional<Path> stripPrefix,
-      ArchiveFormat format) {
-    switch (format) {
-      case TAR:
-      case TAR_BZ2:
-      case TAR_GZ:
-      case TAR_XZ:
-      case TAR_ZSTD:
-        return new UntarStep(filesystem, archiveFile, destinationDirectory, stripPrefix, format);
-      case ZIP:
-        return new UnzipStep(filesystem, archiveFile, destinationDirectory, stripPrefix);
-    }
-    throw new RuntimeException("Invalid format type " + format);
-  }
 }
diff --git a/src/com/facebook/buck/io/watchman/WatchmanWatcher.java b/src/com/facebook/buck/io/watchman/WatchmanWatcher.java
index c20dd33..1d1d7e9 100644
--- a/src/com/facebook/buck/io/watchman/WatchmanWatcher.java
+++ b/src/com/facebook/buck/io/watchman/WatchmanWatcher.java
@@ -18,12 +18,16 @@ package com.facebook.buck.io.watchman;
 
 import com.facebook.buck.core.util.log.Logger;
 import com.facebook.buck.event.BuckEventBus;
+import com.facebook.buck.event.FileHashCacheEvent;
 import com.facebook.buck.event.PerfEventId;
 import com.facebook.buck.event.SimplePerfEvent;
 import com.facebook.buck.event.WatchmanStatusEvent;
 import com.facebook.buck.io.filesystem.PathMatcher;
 import com.facebook.buck.io.watchman.WatchmanEvent.Type;
+import com.facebook.buck.support.state.BuckGlobalState;
 import com.facebook.buck.util.Threads;
+import com.facebook.buck.util.cache.ProjectFileHashCache;
+import com.facebook.buck.util.cache.impl.WatchedFileHashCache;
 import com.facebook.buck.util.concurrent.MostExecutors;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Throwables;
@@ -51,6 +55,40 @@ import java.util.concurrent.atomic.AtomicBoolean;
 /** Queries Watchman for changes to a path. */
 public class WatchmanWatcher {
 
+  public void watchFileSystem(
+      BuckEventBus eventBus,
+      FreshInstanceAction watchmanFreshInstanceAction,
+      BuckGlobalState buckGlobalState)
+      throws IOException, InterruptedException {
+
+    // Synchronize on parser object so that all outstanding watch events are processed
+    // as a single, atomic Parser cache update and are not interleaved with Parser cache
+    // invalidations triggered by requests to parse build files or interrupted by client
+    // disconnections.
+    synchronized (buckGlobalState.getDaemonicParserState()) {
+      // Track the file hash cache invalidation run time.
+      FileHashCacheEvent.InvalidationStarted started = FileHashCacheEvent.invalidationStarted();
+      eventBus.post(started);
+
+      // TODO(sergeyb): replace with one single invalidation event containing all changes
+      buckGlobalState.getFileEventBus().post(started);
+      try {
+        postEvents(eventBus, watchmanFreshInstanceAction);
+      } finally {
+        FileHashCacheEvent.InvalidationFinished finished =
+            FileHashCacheEvent.invalidationFinished(started);
+        eventBus.post(finished);
+        buckGlobalState.getFileEventBus().post(finished);
+        for (ProjectFileHashCache hashCache : buckGlobalState.getFileHashCaches()) {
+          if (hashCache instanceof WatchedFileHashCache) {
+            WatchedFileHashCache cache = (WatchedFileHashCache) hashCache;
+            cache.getStatsEvents().forEach(eventBus::post);
+          }
+        }
+      }
+    }
+  }
+
   // Action to take if Watchman indicates a fresh instance (which happens
   // both on the first buckd command as well as if Watchman needs to recrawl
   // for any reason).
diff --git a/src/com/facebook/buck/jvm/java/JavacPipelineState.java b/src/com/facebook/buck/jvm/java/JavacPipelineState.java
index e89a340..d78e701 100644
--- a/src/com/facebook/buck/jvm/java/JavacPipelineState.java
+++ b/src/com/facebook/buck/jvm/java/JavacPipelineState.java
@@ -22,6 +22,8 @@ import com.facebook.buck.core.rules.pipeline.RulePipelineState;
 import com.facebook.buck.core.sourcepath.resolver.SourcePathResolver;
 import com.facebook.buck.core.util.log.Logger;
 import com.facebook.buck.io.filesystem.ProjectFilesystem;
+import com.facebook.buck.jvm.core.JavaAbis;
+import com.facebook.buck.step.Step;
 import com.facebook.buck.util.CapturingPrintStream;
 import com.facebook.buck.util.Verbosity;
 import com.google.common.annotations.VisibleForTesting;
@@ -277,4 +279,24 @@ public class JavacPipelineState implements RulePipelineState {
   Optional<JarParameters> getAbiJarParameters() {
     return Optional.ofNullable(abiJarParameters);
   }
+
+  public void createPipelinedCompileStep(
+      BuildContext context,
+      ProjectFilesystem projectFilesystem,
+      BuildTarget invokingRule,
+      ImmutableList.Builder<Step> steps, JavacToJarStepFactory javacToJarStepFactory) {
+    boolean generatingCode = !javacToJarStepFactory.getJavacOptions().getJavaAnnotationProcessorParams().isEmpty();
+    if (generatingCode && isRunning()) {
+      steps.add(
+          SymlinkFileStep.of(
+              projectFilesystem,
+              CompilerOutputPaths.getAnnotationPath(
+                      projectFilesystem, JavaAbis.getSourceAbiJar(invokingRule))
+                  .get(),
+              CompilerOutputPaths.getAnnotationPath(projectFilesystem, invokingRule).get()));
+    }
+
+    steps.add(
+        new JavacStep(this, invokingRule, context.getSourcePathResolver(), projectFilesystem));
+  }
 }
diff --git a/src/com/facebook/buck/jvm/java/JavacToJarStepFactory.java b/src/com/facebook/buck/jvm/java/JavacToJarStepFactory.java
index cf95097..ac23fd7 100644
--- a/src/com/facebook/buck/jvm/java/JavacToJarStepFactory.java
+++ b/src/com/facebook/buck/jvm/java/JavacToJarStepFactory.java
@@ -146,7 +146,7 @@ public class JavacToJarStepFactory extends CompileToJarStepFactory implements Ad
       recordDepFileIfNecessary(projectFilesystem, target, compilerParameters, buildableContext);
 
       // This adds the javac command, along with any supporting commands.
-      createPipelinedCompileStep(context, projectFilesystem, pipeline, target, steps);
+      pipeline.createPipelinedCompileStep(context, projectFilesystem, target, steps, this);
     }
 
     if (jarParameters.isPresent()) {
@@ -227,27 +227,6 @@ public class JavacToJarStepFactory extends CompileToJarStepFactory implements Ad
     }
   }
 
-  public void createPipelinedCompileStep(
-      BuildContext context,
-      ProjectFilesystem projectFilesystem,
-      JavacPipelineState pipeline,
-      BuildTarget invokingRule,
-      Builder<Step> steps) {
-    boolean generatingCode = !javacOptions.getJavaAnnotationProcessorParams().isEmpty();
-    if (generatingCode && pipeline.isRunning()) {
-      steps.add(
-          SymlinkFileStep.of(
-              projectFilesystem,
-              CompilerOutputPaths.getAnnotationPath(
-                      projectFilesystem, JavaAbis.getSourceAbiJar(invokingRule))
-                  .get(),
-              CompilerOutputPaths.getAnnotationPath(projectFilesystem, invokingRule).get()));
-    }
-
-    steps.add(
-        new JavacStep(pipeline, invokingRule, context.getSourcePathResolver(), projectFilesystem));
-  }
-
   @VisibleForTesting
   public JavacOptions getJavacOptions() {
     return javacOptions;
diff --git a/src/com/facebook/buck/jvm/java/plugin/adapter/TaskListenerProxy.java b/src/com/facebook/buck/jvm/java/plugin/adapter/TaskListenerProxy.java
index 7b5944b..508ff4c 100644
--- a/src/com/facebook/buck/jvm/java/plugin/adapter/TaskListenerProxy.java
+++ b/src/com/facebook/buck/jvm/java/plugin/adapter/TaskListenerProxy.java
@@ -18,7 +18,6 @@ package com.facebook.buck.jvm.java.plugin.adapter;
 
 import com.facebook.buck.jvm.java.plugin.api.BuckJavacTaskListener;
 import com.facebook.buck.jvm.java.plugin.api.TaskEventMirror;
-import com.sun.source.util.TaskEvent;
 import com.sun.source.util.TaskListener;
 
 /**
@@ -43,15 +42,12 @@ public class TaskListenerProxy implements BuckJavacTaskListener {
 
   @Override
   public void started(TaskEventMirror e) {
-    taskListener.started(unmirror(e));
+    taskListener.started(e.unmirror(this));
   }
 
   @Override
   public void finished(TaskEventMirror e) {
-    taskListener.finished(unmirror(e));
+    taskListener.finished(e.unmirror(this));
   }
 
-  private TaskEvent unmirror(TaskEventMirror mirror) {
-    return (TaskEvent) mirror.getOriginal();
-  }
 }
diff --git a/src/com/facebook/buck/jvm/java/plugin/api/TaskEventMirror.java b/src/com/facebook/buck/jvm/java/plugin/api/TaskEventMirror.java
index de200ea..3318dbf 100644
--- a/src/com/facebook/buck/jvm/java/plugin/api/TaskEventMirror.java
+++ b/src/com/facebook/buck/jvm/java/plugin/api/TaskEventMirror.java
@@ -16,7 +16,9 @@
 
 package com.facebook.buck.jvm.java.plugin.api;
 
+import com.facebook.buck.jvm.java.plugin.adapter.TaskListenerProxy;
 import com.facebook.buck.util.liteinfersupport.Nullable;
+import com.sun.source.util.TaskEvent;
 import javax.lang.model.element.TypeElement;
 import javax.tools.JavaFileObject;
 
@@ -26,6 +28,11 @@ import javax.tools.JavaFileObject;
  * loader for a {@link com.sun.source.util.TaskEvent} within the compiler's.
  */
 public final class TaskEventMirror {
+
+  public TaskEvent unmirror(TaskListenerProxy taskListenerProxy) {
+    return (TaskEvent) getOriginal();
+  }
+
   public enum Kind {
     /** For events related to the parsing of a file. */
     PARSE,
diff --git a/src/com/facebook/buck/manifestservice/ThriftManifestService.java b/src/com/facebook/buck/manifestservice/ThriftManifestService.java
index 18ddaaa..2f41ee9 100644
--- a/src/com/facebook/buck/manifestservice/ThriftManifestService.java
+++ b/src/com/facebook/buck/manifestservice/ThriftManifestService.java
@@ -49,8 +49,7 @@ public class ThriftManifestService implements ManifestService {
   @Override
   public ListenableFuture<Void> appendToManifest(Manifest manifest) {
     BuckCacheRequest request =
-        new BuckCacheRequest()
-            .setType(BuckCacheRequestType.MANIFEST_APPEND)
+        BuckCacheRequestType.MANIFEST_APPEND.setType(new BuckCacheRequest())
             .setManifestAppendRequest(new ManifestAppendRequest().setManifest(manifest));
     return executor.submit(
         () -> {
@@ -62,8 +61,7 @@ public class ThriftManifestService implements ManifestService {
   @Override
   public ListenableFuture<Manifest> fetchManifest(String manifestKey) {
     BuckCacheRequest request =
-        new BuckCacheRequest()
-            .setType(BuckCacheRequestType.MANIFEST_FETCH)
+        BuckCacheRequestType.MANIFEST_FETCH.setType(new BuckCacheRequest())
             .setManifestFetchRequest(new ManifestFetchRequest().setManifestKey(manifestKey));
     return executor.submit(() -> makeRequestSync(request).getManifestFetchResponse().getManifest());
   }
@@ -71,8 +69,7 @@ public class ThriftManifestService implements ManifestService {
   @Override
   public ListenableFuture<Void> deleteManifest(String manifestKey) {
     BuckCacheRequest request =
-        new BuckCacheRequest()
-            .setType(BuckCacheRequestType.MANIFEST_DELETE)
+        BuckCacheRequestType.MANIFEST_DELETE.setType(new BuckCacheRequest())
             .setManifestDeleteRequest(new ManifestDeleteRequest().setManifestKey(manifestKey));
     return executor.submit(
         () -> {
@@ -84,9 +81,8 @@ public class ThriftManifestService implements ManifestService {
   @Override
   public ListenableFuture<Void> setManifest(Manifest manifest) {
     BuckCacheRequest request =
-        new BuckCacheRequest()
-            .setType(BuckCacheRequestType.MANIFEST_SET)
-            .setManifestSetRequest(new ManifestSetRequest().setManifest(manifest));
+        BuckCacheRequestType.MANIFEST_SET.setType(new BuckCacheRequest())
+            .setManifestSetRequest(manifest.setManifest(new ManifestSetRequest()));
     return executor.submit(
         () -> {
           makeRequestSync(request);
diff --git a/src/com/facebook/buck/multitenant/multitenant.iml b/src/com/facebook/buck/multitenant/multitenant.iml
index f10de8d..9e08eb7 100644
--- a/src/com/facebook/buck/multitenant/multitenant.iml
+++ b/src/com/facebook/buck/multitenant/multitenant.iml
@@ -2,15 +2,15 @@
 <module type="JAVA_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$" isTestSource="false" packagePrefix="com.facebook.buck.multitenant" />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/multitenant">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../../../../MoveMethodDataset/buck/buck/src/com/facebook/buck/multitenant" isTestSource="false" packagePrefix="com.facebook.buck.multitenant" />
     </content>
-    <content url="file://$MODULE_DIR$/../../../../../test/com/facebook/buck/multitenant">
-      <sourceFolder url="file://$MODULE_DIR$/../../../../../test/com/facebook/buck/multitenant" isTestSource="true" packagePrefix="com.facebook.buck.multitenant" />
-      <sourceFolder url="file://$MODULE_DIR$/../../../../../test/com/facebook/buck/multitenant/query" type="java-resource" relativeOutputPath="com/facebook/buck/multitenant/query" />
-      <sourceFolder url="file://$MODULE_DIR$/../../../../../test/com/facebook/buck/multitenant/service" type="java-resource" relativeOutputPath="com/facebook/buck/multitenant/service" />
+    <content url="file://$MODULE_DIR$/../../../../../../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/multitenant">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/multitenant" isTestSource="true" packagePrefix="com.facebook.buck.multitenant" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/multitenant/query" type="java-resource" relativeOutputPath="com/facebook/buck/multitenant/query" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../../../../MoveMethodDataset/buck/buck/test/com/facebook/buck/multitenant/service" type="java-resource" relativeOutputPath="com/facebook/buck/multitenant/service" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="java 1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="KotlinJavaRuntime" level="project" />
     <orderEntry type="module" module-name="buck" />
diff --git a/src/com/facebook/buck/rules/coercer/DefaultConstructorArgMarshaller.java b/src/com/facebook/buck/rules/coercer/DefaultConstructorArgMarshaller.java
index 7d2a9b0..8956c13 100644
--- a/src/com/facebook/buck/rules/coercer/DefaultConstructorArgMarshaller.java
+++ b/src/com/facebook/buck/rules/coercer/DefaultConstructorArgMarshaller.java
@@ -71,28 +71,10 @@ public class DefaultConstructorArgMarshaller implements ConstructorArgMarshaller
           instance);
     }
     T dto = dtoAndBuild.getSecond().apply(dtoAndBuild.getFirst());
-    collectDeclaredDeps(cellRoots, allParamInfo.get("deps"), declaredDeps, dto);
+    allParamInfo.get("deps").collectDeclaredDeps(cellRoots, declaredDeps, dto, this);
     return dto;
   }
 
-  private void collectDeclaredDeps(
-      CellPathResolver cellPathResolver,
-      @Nullable ParamInfo deps,
-      ImmutableSet.Builder<BuildTarget> declaredDeps,
-      Object dto) {
-    if (deps != null && deps.isDep()) {
-      deps.traverse(
-          cellPathResolver,
-          object -> {
-            if (!(object instanceof BuildTarget)) {
-              return;
-            }
-            declaredDeps.add((BuildTarget) object);
-          },
-          dto);
-    }
-  }
-
   @Override
   public <T> T populateWithConfiguringAttributes(
       CellPathResolver cellPathResolver,
@@ -133,7 +115,7 @@ public class DefaultConstructorArgMarshaller implements ConstructorArgMarshaller
       }
     }
     T dto = dtoAndBuild.getSecond().apply(dtoAndBuild.getFirst());
-    collectDeclaredDeps(cellPathResolver, allParamInfo.get("deps"), declaredDeps, dto);
+    allParamInfo.get("deps").collectDeclaredDeps(cellPathResolver, declaredDeps, dto, this);
     return dto;
   }
 
diff --git a/src/com/facebook/buck/rules/coercer/ParamInfo.java b/src/com/facebook/buck/rules/coercer/ParamInfo.java
index b2852c4..f9502f9 100644
--- a/src/com/facebook/buck/rules/coercer/ParamInfo.java
+++ b/src/com/facebook/buck/rules/coercer/ParamInfo.java
@@ -27,6 +27,7 @@ import com.facebook.buck.util.Types;
 import com.google.common.base.CaseFormat;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Iterables;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
@@ -359,5 +360,22 @@ public class ParamInfo implements Comparable<ParamInfo> {
     return name.equals(that.getName());
   }
 
+  public void collectDeclaredDeps(
+      CellPathResolver cellPathResolver,
+      ImmutableSet.Builder<BuildTarget> declaredDeps,
+      Object dto, DefaultConstructorArgMarshaller defaultConstructorArgMarshaller) {
+    if (this != null && isDep()) {
+      traverse(
+          cellPathResolver,
+          object -> {
+            if (!(object instanceof BuildTarget)) {
+              return;
+            }
+            declaredDeps.add((BuildTarget) object);
+          },
+          dto);
+    }
+  }
+
   public interface Traversal extends TypeCoercer.Traversal {}
 }
diff --git a/src/com/facebook/buck/shell/TestSuiteDescription.java b/src/com/facebook/buck/shell/TestSuiteDescription.java
index febf073..f6f72d9 100644
--- a/src/com/facebook/buck/shell/TestSuiteDescription.java
+++ b/src/com/facebook/buck/shell/TestSuiteDescription.java
@@ -17,15 +17,11 @@
 package com.facebook.buck.shell;
 
 import com.facebook.buck.core.description.arg.CommonDescriptionArg;
-import com.facebook.buck.core.exceptions.HumanReadableException;
 import com.facebook.buck.core.model.BuildTarget;
 import com.facebook.buck.core.model.targetgraph.BuildRuleCreationContextWithTargetGraph;
 import com.facebook.buck.core.model.targetgraph.DescriptionWithTargetGraph;
 import com.facebook.buck.core.rules.BuildRuleParams;
-import com.facebook.buck.core.test.rule.TestRule;
 import com.facebook.buck.core.util.immutables.BuckStyleImmutable;
-import com.google.common.base.Joiner;
-import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableSortedSet;
 import org.immutables.value.Value;
 
@@ -48,28 +44,11 @@ public class TestSuiteDescription implements DescriptionWithTargetGraph<TestSuit
       BuildRuleParams params,
       TestSuiteDescriptionArg args) {
 
-    validateTestDepsAreTestRules(buildTarget, params);
+    params.validateTestDepsAreTestRules(buildTarget, this);
 
     return new TestSuite(buildTarget, context.getProjectFilesystem(), params);
   }
 
-  private void validateTestDepsAreTestRules(BuildTarget buildTarget, BuildRuleParams params) {
-    // "tests" are added to build deps via reflection
-    ImmutableList<String> invalidTargets =
-        params.getBuildDeps().stream()
-            .filter(r -> !(r instanceof TestRule || r instanceof TestSuite))
-            .limit(5) // Too much more and it gets hard to read....
-            .map(r -> r.getBuildTarget().getFullyQualifiedName())
-            .collect(ImmutableList.toImmutableList());
-    if (invalidTargets.size() > 0) {
-      throw new HumanReadableException(
-          "Non-test rule%s provided in `tests` in test_suite %s: %s",
-          invalidTargets.size() > 1 ? "s" : "",
-          buildTarget.getFullyQualifiedName(),
-          Joiner.on("\n").join(invalidTargets));
-    }
-  }
-
   /** Args for test_suite */
   @BuckStyleImmutable
   @Value.Immutable
diff --git a/src/com/facebook/buck/shell/WorkerShellStep.java b/src/com/facebook/buck/shell/WorkerShellStep.java
index 06df134..9bc9204 100644
--- a/src/com/facebook/buck/shell/WorkerShellStep.java
+++ b/src/com/facebook/buck/shell/WorkerShellStep.java
@@ -174,10 +174,8 @@ public class WorkerShellStep implements Step {
     return String.format(
         "Sending job with args \'%s\' to the process started with \'%s\'",
         getExpandedJobArgs(context),
-        factory
-            .getCommand(
-                context.getPlatform(),
-                getWorkerJobParamsToUse(context.getPlatform()).getWorkerProcessParams())
+        context.getPlatform().getCommand(
+            getWorkerJobParamsToUse(context.getPlatform()).getWorkerProcessParams(), factory)
             .stream()
             .map(Escaper.SHELL_ESCAPER)
             .collect(Collectors.joining(" ")));
diff --git a/src/com/facebook/buck/support/cli/args/CmdLineParserWithPrintInformation.java b/src/com/facebook/buck/support/cli/args/CmdLineParserWithPrintInformation.java
index 242fe8a..89641f6 100644
--- a/src/com/facebook/buck/support/cli/args/CmdLineParserWithPrintInformation.java
+++ b/src/com/facebook/buck/support/cli/args/CmdLineParserWithPrintInformation.java
@@ -17,6 +17,7 @@
 package com.facebook.buck.support.cli.args;
 
 import java.io.Writer;
+import java.util.Collection;
 import org.kohsuke.args4j.CmdLineParser;
 import org.kohsuke.args4j.OptionHandlerFilter;
 import org.kohsuke.args4j.spi.OptionHandler;
@@ -70,4 +71,14 @@ public class CmdLineParserWithPrintInformation extends CmdLineParser {
 
     w.flush();
   }
+
+  public int calculateTotalMaxLen(
+      Collection<CmdLineParserWithPrintInformation> subCommandParsers,
+      PluginBasedCommandHelpPrinter pluginBasedCommandHelpPrinter) {
+    int maxLen = calculateMaxLen();
+    for (CmdLineParserWithPrintInformation subCommandParser : subCommandParsers) {
+      maxLen = Math.max(maxLen, subCommandParser.calculateMaxLen());
+    }
+    return maxLen;
+  }
 }
diff --git a/src/com/facebook/buck/support/cli/args/PluginBasedCommandHelpPrinter.java b/src/com/facebook/buck/support/cli/args/PluginBasedCommandHelpPrinter.java
index ecf8e8e..edbbd6e 100644
--- a/src/com/facebook/buck/support/cli/args/PluginBasedCommandHelpPrinter.java
+++ b/src/com/facebook/buck/support/cli/args/PluginBasedCommandHelpPrinter.java
@@ -20,7 +20,6 @@ import com.google.common.base.Functions;
 import com.google.common.collect.ImmutableSortedMap;
 import java.io.OutputStreamWriter;
 import java.io.PrintStream;
-import java.util.Collection;
 import java.util.Comparator;
 import java.util.Map;
 import org.kohsuke.args4j.OptionHandlerFilter;
@@ -45,7 +44,7 @@ public class PluginBasedCommandHelpPrinter {
                     Functions.identity(),
                     CmdLineParserWithPrintInformation::new));
 
-    int len = calculateTotalMaxLen(parser, subCommands.values());
+    int len = parser.calculateTotalMaxLen(subCommands.values(), this);
 
     OutputStreamWriter writer = new OutputStreamWriter(stream);
 
@@ -72,16 +71,6 @@ public class PluginBasedCommandHelpPrinter {
     stream.println();
   }
 
-  private int calculateTotalMaxLen(
-      CmdLineParserWithPrintInformation parser,
-      Collection<CmdLineParserWithPrintInformation> subCommandParsers) {
-    int maxLen = parser.calculateMaxLen();
-    for (CmdLineParserWithPrintInformation subCommandParser : subCommandParsers) {
-      maxLen = Math.max(maxLen, subCommandParser.calculateMaxLen());
-    }
-    return maxLen;
-  }
-
   private void printGlobalOptionsUsage(
       PrintStream stream,
       OutputStreamWriter writer,
diff --git a/src/com/facebook/buck/support/state/BuckGlobalState.java b/src/com/facebook/buck/support/state/BuckGlobalState.java
index 25e102c..e8a1298 100644
--- a/src/com/facebook/buck/support/state/BuckGlobalState.java
+++ b/src/com/facebook/buck/support/state/BuckGlobalState.java
@@ -23,17 +23,13 @@ import com.facebook.buck.core.model.actiongraph.computation.ActionGraphCache;
 import com.facebook.buck.core.rulekey.RuleKey;
 import com.facebook.buck.core.rules.knowntypes.KnownRuleTypesProvider;
 import com.facebook.buck.core.util.log.Logger;
-import com.facebook.buck.event.BuckEventBus;
-import com.facebook.buck.event.FileHashCacheEvent;
 import com.facebook.buck.httpserver.WebServer;
 import com.facebook.buck.io.watchman.Watchman;
 import com.facebook.buck.io.watchman.WatchmanCursor;
-import com.facebook.buck.io.watchman.WatchmanWatcher;
 import com.facebook.buck.parser.DaemonicParserState;
 import com.facebook.buck.rules.coercer.TypeCoercerFactory;
 import com.facebook.buck.rules.keys.RuleKeyCacheRecycler;
 import com.facebook.buck.util.cache.ProjectFileHashCache;
-import com.facebook.buck.util.cache.impl.WatchedFileHashCache;
 import com.facebook.buck.util.timing.Clock;
 import com.facebook.buck.versions.VersionedTargetGraphCache;
 import com.facebook.buck.worker.WorkerProcessPool;
@@ -42,7 +38,6 @@ import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.eventbus.EventBus;
 import java.io.Closeable;
-import java.io.IOException;
 import java.nio.file.Path;
 import java.util.Optional;
 import java.util.concurrent.ConcurrentMap;
@@ -186,40 +181,6 @@ public final class BuckGlobalState implements Closeable {
     }
   }
 
-  public void watchFileSystem(
-      BuckEventBus eventBus,
-      WatchmanWatcher watchmanWatcher,
-      WatchmanWatcher.FreshInstanceAction watchmanFreshInstanceAction)
-      throws IOException, InterruptedException {
-
-    // Synchronize on parser object so that all outstanding watch events are processed
-    // as a single, atomic Parser cache update and are not interleaved with Parser cache
-    // invalidations triggered by requests to parse build files or interrupted by client
-    // disconnections.
-    synchronized (daemonicParserState) {
-      // Track the file hash cache invalidation run time.
-      FileHashCacheEvent.InvalidationStarted started = FileHashCacheEvent.invalidationStarted();
-      eventBus.post(started);
-
-      // TODO(sergeyb): replace with one single invalidation event containing all changes
-      fileEventBus.post(started);
-      try {
-        watchmanWatcher.postEvents(eventBus, watchmanFreshInstanceAction);
-      } finally {
-        FileHashCacheEvent.InvalidationFinished finished =
-            FileHashCacheEvent.invalidationFinished(started);
-        eventBus.post(finished);
-        fileEventBus.post(finished);
-        for (ProjectFileHashCache hashCache : hashCaches) {
-          if (hashCache instanceof WatchedFileHashCache) {
-            WatchedFileHashCache cache = (WatchedFileHashCache) hashCache;
-            cache.getStatsEvents().forEach(eventBus::post);
-          }
-        }
-      }
-    }
-  }
-
   /** Global event bus used to process file invalidation events. This event bus is synchronous. */
   public EventBus getFileEventBus() {
     return fileEventBus;
diff --git a/src/com/facebook/buck/util/Console.java b/src/com/facebook/buck/util/Console.java
index d1bc44c..80570b8 100644
--- a/src/com/facebook/buck/util/Console.java
+++ b/src/com/facebook/buck/util/Console.java
@@ -16,10 +16,18 @@
 
 package com.facebook.buck.util;
 
+import com.facebook.buck.command.Build;
+import com.facebook.buck.core.model.BuildTarget;
+import com.facebook.buck.core.rules.BuildRule;
 import com.facebook.buck.core.util.log.Logger;
+import com.facebook.buck.event.BuckEventBus;
 import com.google.common.base.Preconditions;
+import com.google.common.collect.ImmutableList;
 import com.google.common.io.ByteStreams;
 import java.io.PrintStream;
+import java.nio.file.Path;
+import java.util.List;
+import java.util.Optional;
 
 public class Console {
 
@@ -105,4 +113,17 @@ public class Console {
     LOG.warn("Command failure: %s", failureMessage);
     ansi.printlnHighlightedFailureText(stdErr, failureMessage);
   }
+
+  // This method is thread-safe
+  public ExitCode executeAndPrintFailuresToEventBus(
+      Iterable<BuildTarget> targetsish,
+      BuckEventBus eventBus,
+      Optional<Path> pathToBuildReport, Build build)
+      throws Exception {
+
+    ImmutableList<BuildRule> rulesToBuild = build.getRulesToBuild(targetsish);
+    List<BuildEngineResult> resultFutures = build.initializeBuild(rulesToBuild);
+    return build.waitForBuildToFinishAndPrintFailuresToEventBus(
+        rulesToBuild, resultFutures, eventBus, this, pathToBuildReport);
+  }
 }
diff --git a/src/com/facebook/buck/util/PatternsMatcher.java b/src/com/facebook/buck/util/PatternsMatcher.java
index 82418df..a690007 100644
--- a/src/com/facebook/buck/util/PatternsMatcher.java
+++ b/src/com/facebook/buck/util/PatternsMatcher.java
@@ -16,10 +16,18 @@
 
 package com.facebook.buck.util;
 
+import com.facebook.buck.io.filesystem.ProjectFilesystemFactory;
+import com.facebook.buck.util.unarchive.ExistingFileMode;
+import com.facebook.buck.util.unarchive.Unarchiver;
+import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Maps;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
 import java.util.Collection;
 import java.util.Map;
+import java.util.Optional;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 
@@ -100,4 +108,40 @@ public class PatternsMatcher {
 
     return Maps.filterEntries(entries, entry -> matches(entry.getKey()));
   }
+
+  /**
+   * Extract a given archive to a specific directory
+   *
+   * @param projectFilesystemFactory A factory that creates filesystems
+   * @param archiveFile The path to the archive
+   * @param destination The destination directory where the archive should be extracted to
+   * @param stripPrefix If provided, only files under this prefix will be extracted. This prefix
+   *     prefix will also be removed from the destination path. e.g. foo.tar.gz/foo/bar/baz with a
+   *     prefix of foo will extract bar/baz into the destination directory. If not provided, no
+   *     stripping is done.
+   * @param existingFileMode How to handle existing files
+   * @param unarchiver
+   * @return A list of paths to files that were created (not directories)
+   * @throws IOException If the archive could not be extracted for any reason
+   */
+  public ImmutableList<Path> extractArchive(
+      ProjectFilesystemFactory projectFilesystemFactory,
+      Path archiveFile,
+      Path destination,
+      Optional<Path> stripPrefix,
+      ExistingFileMode existingFileMode, Unarchiver unarchiver)
+      throws IOException {
+    // Create output directory if it does not exist
+    Files.createDirectories(destination);
+    return unarchiver.extractArchive(
+            archiveFile,
+            projectFilesystemFactory.createProjectFilesystem(destination),
+            destination.getFileSystem().getPath(""),
+            stripPrefix,
+        this,
+            existingFileMode)
+        .stream()
+        .map(input -> destination.resolve(input).toAbsolutePath())
+        .collect(ImmutableList.toImmutableList());
+  }
 }
diff --git a/src/com/facebook/buck/util/environment/Platform.java b/src/com/facebook/buck/util/environment/Platform.java
index 80c822f..908058c 100644
--- a/src/com/facebook/buck/util/environment/Platform.java
+++ b/src/com/facebook/buck/util/environment/Platform.java
@@ -15,9 +15,13 @@
  */
 package com.facebook.buck.util.environment;
 
+import com.facebook.buck.util.Escaper;
+import com.facebook.buck.worker.WorkerProcessPoolFactory;
+import com.google.common.collect.ImmutableList;
 import java.nio.file.Path;
 import java.nio.file.Paths;
 import java.util.Properties;
+import java.util.stream.Collectors;
 
 /**
  * Platform on which Buck is currently running. Limited to the OS kind, e.g. Windows or a kind of
@@ -111,4 +115,20 @@ public enum Platform {
   public static Platform detect() {
     return HOST_PLATFORM;
   }
+
+  public ImmutableList<String> getCommand(WorkerProcessParams paramsToUse,
+      WorkerProcessPoolFactory workerProcessPoolFactory) {
+    ImmutableList<String> executionArgs =
+        this == WINDOWS
+            ? ImmutableList.of("cmd.exe", "/c")
+            : ImmutableList.of("/bin/bash", "-e", "-c");
+
+    return ImmutableList.<String>builder()
+        .addAll(executionArgs)
+        .add(
+            paramsToUse.getStartupCommand().stream()
+                .map(Escaper::escapeAsShellString)
+                .collect(Collectors.joining(" ")))
+        .build();
+  }
 }
diff --git a/src/com/facebook/buck/util/network/ThriftScribeLogger.java b/src/com/facebook/buck/util/network/ThriftScribeLogger.java
index 03e0aa7..a4950c7 100644
--- a/src/com/facebook/buck/util/network/ThriftScribeLogger.java
+++ b/src/com/facebook/buck/util/network/ThriftScribeLogger.java
@@ -70,12 +70,12 @@ public class ThriftScribeLogger extends ScribeLogger {
       scribeData.setBucket(bucket.get());
     }
     LogRequest logRequest = new LogRequest();
-    logRequest.setType(LogRequestType.SCRIBE_DATA);
+    LogRequestType.SCRIBE_DATA.setType(logRequest);
     logRequest.setScribeData(scribeData);
 
     // Wrap in high-level request & response.
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.LOG);
+    FrontendRequestType.LOG.setType(request);
     request.setLogRequest(logRequest);
     FrontendResponse response = new FrontendResponse();
 
diff --git a/src/com/facebook/buck/util/unarchive/ArchiveFormat.java b/src/com/facebook/buck/util/unarchive/ArchiveFormat.java
index c897927..a4c86fe 100644
--- a/src/com/facebook/buck/util/unarchive/ArchiveFormat.java
+++ b/src/com/facebook/buck/util/unarchive/ArchiveFormat.java
@@ -16,7 +16,13 @@
 
 package com.facebook.buck.util.unarchive;
 
+import com.facebook.buck.file.HttpArchive;
+import com.facebook.buck.io.filesystem.ProjectFilesystem;
+import com.facebook.buck.unarchive.UnarchiveStep;
+import com.facebook.buck.unarchive.UntarStep;
+import com.facebook.buck.unarchive.UnzipStep;
 import com.google.common.collect.ImmutableList;
+import java.nio.file.Path;
 import java.util.Optional;
 import java.util.stream.Stream;
 
@@ -105,4 +111,22 @@ public enum ArchiveFormat {
         .map(ArchiveFormat::getExtension)
         .collect(ImmutableList.toImmutableList());
   }
+
+  public UnarchiveStep getUnarchiveStep(
+      ProjectFilesystem filesystem,
+      Path archiveFile,
+      Path destinationDirectory,
+      Optional<Path> stripPrefix, HttpArchive httpArchive) {
+    switch (this) {
+      case TAR:
+      case TAR_BZ2:
+      case TAR_GZ:
+      case TAR_XZ:
+      case TAR_ZSTD:
+        return new UntarStep(filesystem, archiveFile, destinationDirectory, stripPrefix, this);
+      case ZIP:
+        return new UnzipStep(filesystem, archiveFile, destinationDirectory, stripPrefix);
+    }
+    throw new RuntimeException("Invalid format type " + this);
+  }
 }
diff --git a/src/com/facebook/buck/util/unarchive/DirectoryCreator.java b/src/com/facebook/buck/util/unarchive/DirectoryCreator.java
index 4b84853..36b8682 100644
--- a/src/com/facebook/buck/util/unarchive/DirectoryCreator.java
+++ b/src/com/facebook/buck/util/unarchive/DirectoryCreator.java
@@ -18,6 +18,7 @@ package com.facebook.buck.util.unarchive;
 
 import com.facebook.buck.io.filesystem.ProjectFilesystem;
 import java.io.IOException;
+import java.nio.file.LinkOption;
 import java.nio.file.Path;
 import java.util.HashSet;
 import java.util.Set;
@@ -110,4 +111,16 @@ public class DirectoryCreator {
     }
     existing.add(target);
   }
+
+  /** Create a director on the filesystem
+   * @param target
+   * @param untar*/
+  public void mkdirsOther(Path target, Untar untar) throws IOException {
+    ProjectFilesystem filesystem = getFilesystem();
+    if (filesystem.isDirectory(target, LinkOption.NOFOLLOW_LINKS)) {
+      recordPath(target);
+    } else {
+      forcefullyCreateDirs(target);
+    }
+  }
 }
diff --git a/src/com/facebook/buck/util/unarchive/Unarchiver.java b/src/com/facebook/buck/util/unarchive/Unarchiver.java
index 5ea0097..39491cf 100644
--- a/src/com/facebook/buck/util/unarchive/Unarchiver.java
+++ b/src/com/facebook/buck/util/unarchive/Unarchiver.java
@@ -22,7 +22,6 @@ import com.facebook.buck.util.PatternsMatcher;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableSet;
 import java.io.IOException;
-import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.Optional;
 
@@ -116,48 +115,12 @@ public abstract class Unarchiver {
       Path destination,
       ExistingFileMode existingFileMode)
       throws InterruptedException, IOException {
-    return extractArchive(
+    return PatternsMatcher.EMPTY.extractArchive(
         projectFilesystemFactory,
         archiveFile,
         destination,
         Optional.empty(),
-        PatternsMatcher.EMPTY,
-        existingFileMode);
+        existingFileMode, this);
   }
 
-  /**
-   * Extract a given archive to a specific directory
-   *
-   * @param projectFilesystemFactory A factory that creates filesystems
-   * @param archiveFile The path to the archive
-   * @param destination The destination directory where the archive should be extracted to
-   * @param stripPrefix If provided, only files under this prefix will be extracted. This prefix
-   *     prefix will also be removed from the destination path. e.g. foo.tar.gz/foo/bar/baz with a
-   *     prefix of foo will extract bar/baz into the destination directory. If not provided, no
-   *     stripping is done.
-   * @param existingFileMode How to handle existing files
-   * @return A list of paths to files that were created (not directories)
-   * @throws IOException If the archive could not be extracted for any reason
-   */
-  public ImmutableList<Path> extractArchive(
-      ProjectFilesystemFactory projectFilesystemFactory,
-      Path archiveFile,
-      Path destination,
-      Optional<Path> stripPrefix,
-      PatternsMatcher entriesToExclude,
-      ExistingFileMode existingFileMode)
-      throws IOException {
-    // Create output directory if it does not exist
-    Files.createDirectories(destination);
-    return extractArchive(
-            archiveFile,
-            projectFilesystemFactory.createProjectFilesystem(destination),
-            destination.getFileSystem().getPath(""),
-            stripPrefix,
-            entriesToExclude,
-            existingFileMode)
-        .stream()
-        .map(input -> destination.resolve(input).toAbsolutePath())
-        .collect(ImmutableList.toImmutableList());
-  }
 }
diff --git a/src/com/facebook/buck/util/unarchive/Untar.java b/src/com/facebook/buck/util/unarchive/Untar.java
index 2d1287f..69d548f 100644
--- a/src/com/facebook/buck/util/unarchive/Untar.java
+++ b/src/com/facebook/buck/util/unarchive/Untar.java
@@ -135,7 +135,7 @@ public class Untar extends Unarchiver {
 
         if (entry.isDirectory()) {
           dirsToTidy.add(destPath);
-          mkdirs(creator, destPath);
+          creator.mkdirsOther(destPath, this);
           dirCreationTimes.put(destPath, entry.getModTime().getTime());
         } else if (entry.isSymbolicLink()) {
           if (writeSymlinksAfterCreatingFiles) {
@@ -193,16 +193,6 @@ public class Untar extends Unarchiver {
     }
   }
 
-  /** Create a director on the filesystem */
-  private void mkdirs(DirectoryCreator creator, Path target) throws IOException {
-    ProjectFilesystem filesystem = creator.getFilesystem();
-    if (filesystem.isDirectory(target, LinkOption.NOFOLLOW_LINKS)) {
-      creator.recordPath(target);
-    } else {
-      creator.forcefullyCreateDirs(target);
-    }
-  }
-
   /** Prepares to write out a file. This deletes existing files/directories */
   private void prepareForFile(DirectoryCreator creator, Path target) throws IOException {
     ProjectFilesystem filesystem = creator.getFilesystem();
diff --git a/src/com/facebook/buck/util/zip/CustomZipOutputStream.java b/src/com/facebook/buck/util/zip/CustomZipOutputStream.java
index dab1b6e..63c1743 100644
--- a/src/com/facebook/buck/util/zip/CustomZipOutputStream.java
+++ b/src/com/facebook/buck/util/zip/CustomZipOutputStream.java
@@ -16,11 +16,16 @@
 
 package com.facebook.buck.util.zip;
 
+import com.facebook.buck.doctor.DefaultDefectReporter;
+import com.facebook.buck.util.versioncontrol.VersionControlCommandFailedException;
+import com.facebook.buck.util.versioncontrol.VersionControlSupplier;
 import com.google.common.base.Preconditions;
+import com.google.common.collect.ImmutableMap;
 import com.google.common.io.ByteStreams;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
+import java.util.Map;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipException;
 
@@ -30,6 +35,18 @@ import java.util.zip.ZipException;
  */
 public class CustomZipOutputStream extends OutputStream {
 
+  public void addNamedFilesToArchive(
+      ImmutableMap<String, VersionControlSupplier<InputStream>> fileStreams,
+      DefaultDefectReporter defaultDefectReporter)
+      throws IOException, VersionControlCommandFailedException, InterruptedException {
+    for (Map.Entry<String, VersionControlSupplier<InputStream>> fs : fileStreams.entrySet()) {
+      try (InputStream input = fs.getValue().get()) {
+        writeEntry(fs.getKey(), input);
+      }
+      closeEntry();
+    }
+  }
+
   protected interface Impl {
     /**
      * Called by {@link CustomZipOutputStream#putNextEntry(ZipEntry)} and used by impls to put the
diff --git a/src/com/facebook/buck/versions/VersionTargetGraphMode.java b/src/com/facebook/buck/versions/VersionTargetGraphMode.java
index 0b2006a..e1e9fb8 100644
--- a/src/com/facebook/buck/versions/VersionTargetGraphMode.java
+++ b/src/com/facebook/buck/versions/VersionTargetGraphMode.java
@@ -16,6 +16,12 @@
 
 package com.facebook.buck.versions;
 
+import com.facebook.buck.core.graph.transformation.executor.DepsAwareExecutor;
+import com.facebook.buck.core.graph.transformation.executor.impl.DefaultDepsAwareExecutor;
+import com.facebook.buck.core.graph.transformation.executor.impl.DefaultDepsAwareExecutorWithLocalStack;
+import com.facebook.buck.core.graph.transformation.executor.impl.JavaExecutorBackedDefaultDepsAwareExecutor;
+import com.facebook.buck.core.graph.transformation.executor.impl.ToposortBasedDepsAwareExecutor;
+import com.facebook.buck.core.graph.transformation.model.ComputeResult;
 import com.facebook.buck.util.randomizedtrial.WithProbability;
 
 /**
@@ -52,4 +58,24 @@ public enum VersionTargetGraphMode implements WithProbability {
   public double getProbability() {
     return probability;
   }
+
+  public DepsAwareExecutor<? super ComputeResult, ?> getDepsAwareExecutor(
+      int numberOfThreads, VersionedTargetGraphCache versionedTargetGraphCache) {
+    switch (this) {
+      case ENABLED:
+        return DefaultDepsAwareExecutor.of(numberOfThreads);
+      case ENABLED_LS:
+        return DefaultDepsAwareExecutorWithLocalStack.of(numberOfThreads);
+      case ENABLED_JE:
+        return JavaExecutorBackedDefaultDepsAwareExecutor.of(numberOfThreads);
+      case ENABLED_TS:
+        return ToposortBasedDepsAwareExecutor.of(numberOfThreads);
+      case DISABLED:
+        throw new AssertionError("Disabled should be handled already");
+      case EXPERIMENT:
+      default:
+        throw new AssertionError(
+            "EXPERIMENT values should have been resolved to ENABLED or DISABLED.");
+    }
+  }
 }
diff --git a/src/com/facebook/buck/versions/VersionedTargetGraphCache.java b/src/com/facebook/buck/versions/VersionedTargetGraphCache.java
index fc7b71e..5c77973 100644
--- a/src/com/facebook/buck/versions/VersionedTargetGraphCache.java
+++ b/src/com/facebook/buck/versions/VersionedTargetGraphCache.java
@@ -19,10 +19,6 @@ package com.facebook.buck.versions;
 import com.facebook.buck.command.config.BuildBuckConfig;
 import com.facebook.buck.core.config.BuckConfig;
 import com.facebook.buck.core.graph.transformation.executor.DepsAwareExecutor;
-import com.facebook.buck.core.graph.transformation.executor.impl.DefaultDepsAwareExecutor;
-import com.facebook.buck.core.graph.transformation.executor.impl.DefaultDepsAwareExecutorWithLocalStack;
-import com.facebook.buck.core.graph.transformation.executor.impl.JavaExecutorBackedDefaultDepsAwareExecutor;
-import com.facebook.buck.core.graph.transformation.executor.impl.ToposortBasedDepsAwareExecutor;
 import com.facebook.buck.core.graph.transformation.model.ComputeResult;
 import com.facebook.buck.core.model.TargetConfiguration;
 import com.facebook.buck.core.model.targetgraph.TargetGraphAndBuildTargets;
@@ -97,7 +93,7 @@ public class VersionedTargetGraphCache {
           timeoutSeconds);
     } else {
       try (DepsAwareExecutor<? super ComputeResult, ?> executor =
-          getDepsAwareExecutor(resolvedMode, numberOfThreads)) {
+          resolvedMode.getDepsAwareExecutor(numberOfThreads, this)) {
         TargetGraphAndBuildTargets versionedTargetGraph =
             AsyncVersionedTargetGraphBuilder.transform(
                 new VersionUniverseVersionSelector(
@@ -112,26 +108,6 @@ public class VersionedTargetGraphCache {
     }
   }
 
-  private DepsAwareExecutor<? super ComputeResult, ?> getDepsAwareExecutor(
-      VersionTargetGraphMode resolvedMode, int numberOfThreads) {
-    switch (resolvedMode) {
-      case ENABLED:
-        return DefaultDepsAwareExecutor.of(numberOfThreads);
-      case ENABLED_LS:
-        return DefaultDepsAwareExecutorWithLocalStack.of(numberOfThreads);
-      case ENABLED_JE:
-        return JavaExecutorBackedDefaultDepsAwareExecutor.of(numberOfThreads);
-      case ENABLED_TS:
-        return ToposortBasedDepsAwareExecutor.of(numberOfThreads);
-      case DISABLED:
-        throw new AssertionError("Disabled should be handled already");
-      case EXPERIMENT:
-      default:
-        throw new AssertionError(
-            "EXPERIMENT values should have been resolved to ENABLED or DISABLED.");
-    }
-  }
-
   private VersionedTargetGraphCacheResult getVersionedTargetGraph(
       TargetGraphAndBuildTargets targetGraphAndBuildTargets,
       ImmutableMap<String, VersionUniverse> versionUniverses,
diff --git a/src/com/facebook/buck/worker/WorkerProcessPoolFactory.java b/src/com/facebook/buck/worker/WorkerProcessPoolFactory.java
index 5a0d4af..1c8d3e1 100644
--- a/src/com/facebook/buck/worker/WorkerProcessPoolFactory.java
+++ b/src/com/facebook/buck/worker/WorkerProcessPoolFactory.java
@@ -19,12 +19,9 @@ package com.facebook.buck.worker;
 import com.facebook.buck.core.build.execution.context.ExecutionContext;
 import com.facebook.buck.event.ConsoleEvent;
 import com.facebook.buck.io.filesystem.ProjectFilesystem;
-import com.facebook.buck.util.Escaper;
 import com.facebook.buck.util.ProcessExecutorParams;
-import com.facebook.buck.util.environment.Platform;
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Joiner;
-import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.hash.HashCode;
 import com.google.common.hash.Hashing;
@@ -36,7 +33,6 @@ import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.ConcurrentMap;
 import java.util.concurrent.atomic.AtomicInteger;
-import java.util.stream.Collectors;
 
 /**
  * WorkerProcessPoolFactory class is designed to provide you an instance of WorkerProcessPool based
@@ -68,7 +64,7 @@ public class WorkerProcessPoolFactory {
       workerHash = paramsToUse.getWorkerProcessIdentity().get().getWorkerHash();
     } else {
       processPoolMap = context.getWorkerProcessPools();
-      key = Joiner.on(' ').join(getCommand(context.getPlatform(), paramsToUse));
+      key = Joiner.on(' ').join(context.getPlatform().getCommand(paramsToUse, this));
       workerHash = Hashing.sha1().hashString(key, StandardCharsets.UTF_8);
     }
 
@@ -106,7 +102,7 @@ public class WorkerProcessPoolFactory {
       HashCode workerHash) {
     ProcessExecutorParams processParams =
         ProcessExecutorParams.builder()
-            .setCommand(getCommand(context.getPlatform(), paramsToUse))
+            .setCommand(context.getPlatform().getCommand(paramsToUse, this))
             .setEnvironment(getEnvironmentForProcess(context, paramsToUse))
             .setDirectory(filesystem.getRootPath())
             .build();
@@ -132,21 +128,6 @@ public class WorkerProcessPoolFactory {
     return previousPool == null ? newPool : previousPool;
   }
 
-  public ImmutableList<String> getCommand(Platform platform, WorkerProcessParams paramsToUse) {
-    ImmutableList<String> executionArgs =
-        platform == Platform.WINDOWS
-            ? ImmutableList.of("cmd.exe", "/c")
-            : ImmutableList.of("/bin/bash", "-e", "-c");
-
-    return ImmutableList.<String>builder()
-        .addAll(executionArgs)
-        .add(
-            paramsToUse.getStartupCommand().stream()
-                .map(Escaper::escapeAsShellString)
-                .collect(Collectors.joining(" ")))
-        .build();
-  }
-
   @VisibleForTesting
   public ImmutableMap<String, String> getEnvironmentForProcess(
       ExecutionContext context, WorkerProcessParams workerJobParams) {
diff --git a/test/com/facebook/buck/artifact_cache/ArtifactCachesIntegrationTest.java b/test/com/facebook/buck/artifact_cache/ArtifactCachesIntegrationTest.java
index 94b7f42..4a31b3f 100644
--- a/test/com/facebook/buck/artifact_cache/ArtifactCachesIntegrationTest.java
+++ b/test/com/facebook/buck/artifact_cache/ArtifactCachesIntegrationTest.java
@@ -500,7 +500,7 @@ public class ArtifactCachesIntegrationTest {
         } else {
           BuckCacheMultiFetchResponse multiFetchResponse = new BuckCacheMultiFetchResponse();
           List<FetchResult> fetchResults = new ArrayList<>();
-          fetchResults.add(new FetchResult().setResultType(FetchResultType.MISS));
+          fetchResults.add(FetchResultType.MISS.setResultType(new FetchResult()));
           multiFetchResponse.setResults(fetchResults);
           response.setMultiFetchResponse(multiFetchResponse);
         }
diff --git a/test/com/facebook/buck/artifact_cache/ThriftArtifactCacheProtocolTest.java b/test/com/facebook/buck/artifact_cache/ThriftArtifactCacheProtocolTest.java
index d54a326..ffe47fb 100644
--- a/test/com/facebook/buck/artifact_cache/ThriftArtifactCacheProtocolTest.java
+++ b/test/com/facebook/buck/artifact_cache/ThriftArtifactCacheProtocolTest.java
@@ -233,7 +233,7 @@ public class ThriftArtifactCacheProtocolTest {
     for (byte[] payload : payloads) {
       PayloadInfo info = new PayloadInfo();
       info.setSizeBytes(payload.length);
-      cacheResponse.addToPayloads(info);
+      info.addToPayloads(cacheResponse);
     }
 
     try (DataOutputStream stream = new DataOutputStream(rawStream)) {
@@ -252,7 +252,7 @@ public class ThriftArtifactCacheProtocolTest {
 
   private BuckCacheRequest createDefaultRequest(long... payloadSizeBytes) {
     BuckCacheRequest cacheRequest = new BuckCacheRequest();
-    cacheRequest.setType(BuckCacheRequestType.FETCH);
+    BuckCacheRequestType.FETCH.setType(cacheRequest);
     for (long sizeBytes : payloadSizeBytes) {
       PayloadInfo info = new PayloadInfo();
       info.setSizeBytes(sizeBytes);
diff --git a/test/com/facebook/buck/artifact_cache/ThriftArtifactCacheTest.java b/test/com/facebook/buck/artifact_cache/ThriftArtifactCacheTest.java
index 713b78e..384b30c 100644
--- a/test/com/facebook/buck/artifact_cache/ThriftArtifactCacheTest.java
+++ b/test/com/facebook/buck/artifact_cache/ThriftArtifactCacheTest.java
@@ -82,21 +82,21 @@ public class ThriftArtifactCacheTest {
   @Test
   public void testFetchResponseWithoutPayloadInfo() throws IOException {
     ArtifactMetadata metadata = new ArtifactMetadata();
-    metadata.addToRuleKeys(new RuleKey().setHashString("012345"));
+    new RuleKey().setHashString("012345").addToRuleKeys(metadata);
     testWithMetadataAndPayloadInfo(metadata, false);
   }
 
   @Test
   public void testFetchResponseWithCorruptedRuleKeys() throws IOException {
     ArtifactMetadata metadata = new ArtifactMetadata();
-    metadata.addToRuleKeys(new RuleKey().setHashString("123\uFFFF"));
+    new RuleKey().setHashString("123\uFFFF").addToRuleKeys(metadata);
     testWithMetadata(metadata);
   }
 
   @Test
   public void testFetchResponseWithUnevenRuleKeyHash() throws IOException {
     ArtifactMetadata metadata = new ArtifactMetadata();
-    metadata.addToRuleKeys(new RuleKey().setHashString("akjdasadasdas"));
+    new RuleKey().setHashString("akjdasadasdas").addToRuleKeys(metadata);
     testWithMetadata(metadata);
   }
 
@@ -186,7 +186,7 @@ public class ThriftArtifactCacheTest {
 
     if (setPayloadInfo) {
       PayloadInfo payloadInfo = new PayloadInfo().setSizeBytes(0);
-      response.addToPayloads(payloadInfo);
+      payloadInfo.addToPayloads(response);
     }
     return new InMemoryThriftResponse(response);
   }
@@ -318,21 +318,21 @@ public class ThriftArtifactCacheTest {
     payload3Ref.set(payloadBytes3);
 
     ArtifactMetadata metadata1 = new ArtifactMetadata();
-    metadata1.addToRuleKeys(new RuleKey().setHashString(key1.getHashCode().toString()));
+    new RuleKey().setHashString(key1.getHashCode().toString()).addToRuleKeys(metadata1);
     metadata1.setArtifactPayloadMd5(Hashing.md5().hashBytes(payloadBytes1).toString());
     metadata1.setMetadata(ImmutableMap.of());
     ArtifactMetadata metadata3 = new ArtifactMetadata();
-    metadata3.addToRuleKeys(new RuleKey().setHashString(key3.getHashCode().toString()));
+    new RuleKey().setHashString(key3.getHashCode().toString()).addToRuleKeys(metadata3);
     metadata3.setArtifactPayloadMd5(Hashing.md5().hashBytes(payloadBytes3).toString());
     metadata3.setMetadata(ImmutableMap.of());
 
     BuckCacheMultiFetchResponse multiFetchResponse = new BuckCacheMultiFetchResponse();
-    FetchResult result0 = new FetchResult().setResultType(FetchResultType.MISS);
+    FetchResult result0 = FetchResultType.MISS.setResultType(new FetchResult());
     FetchResult result1 =
-        new FetchResult().setResultType(FetchResultType.HIT).setMetadata(metadata1);
-    FetchResult result2 = new FetchResult().setResultType(FetchResultType.SKIPPED);
+        FetchResultType.HIT.setResultType(new FetchResult()).setMetadata(metadata1);
+    FetchResult result2 = FetchResultType.SKIPPED.setResultType(new FetchResult());
     FetchResult result3 =
-        new FetchResult().setResultType(FetchResultType.HIT).setMetadata(metadata3);
+        FetchResultType.HIT.setResultType(new FetchResult()).setMetadata(metadata3);
 
     multiFetchResponse.addToResults(result0);
     multiFetchResponse.addToResults(result1);
@@ -425,10 +425,10 @@ public class ThriftArtifactCacheTest {
         ImmutableSet.of(key0, key1, key2, key3);
 
     BuckCacheMultiContainsResponse multiContainsResponse = new BuckCacheMultiContainsResponse();
-    ContainsResult result0 = new ContainsResult().setResultType(DOES_NOT_CONTAIN);
-    ContainsResult result1 = new ContainsResult().setResultType(CONTAINS);
-    ContainsResult result2 = new ContainsResult().setResultType(UNKNOWN_DUE_TO_TRANSIENT_ERRORS);
-    ContainsResult result3 = new ContainsResult().setResultType(CONTAINS);
+    ContainsResult result0 = DOES_NOT_CONTAIN.setResultType(new ContainsResult());
+    ContainsResult result1 = CONTAINS.setResultType(new ContainsResult());
+    ContainsResult result2 = UNKNOWN_DUE_TO_TRANSIENT_ERRORS.setResultType(new ContainsResult());
+    ContainsResult result3 = CONTAINS.setResultType(new ContainsResult());
 
     multiContainsResponse.addToResults(result0);
     multiContainsResponse.addToResults(result1);
diff --git a/test/com/facebook/buck/cli/TestCommandTest.java b/test/com/facebook/buck/cli/TestCommandTest.java
index e1fed1c..cd60798 100644
--- a/test/com/facebook/buck/cli/TestCommandTest.java
+++ b/test/com/facebook/buck/cli/TestCommandTest.java
@@ -291,25 +291,25 @@ public class TestCommandTest {
     TestCommand command = getCommand("-j", "15");
 
     assertThat(
-        command.getNumTestThreads(
-            FakeBuckConfig.builder()
-                .setSections(
-                    command
-                        .getConfigOverrides(ImmutableMap.of())
-                        .getForCell(CellName.ROOT_CELL_NAME))
-                .build()),
+        FakeBuckConfig.builder()
+            .setSections(
+                command
+                    .getConfigOverrides(ImmutableMap.of())
+                    .getForCell(CellName.ROOT_CELL_NAME))
+            .build().getNumTestThreads(
+            command),
         Matchers.equalTo(15));
 
     command = getCommand("-j", "15", "--debug");
 
     assertThat(
-        command.getNumTestThreads(
-            FakeBuckConfig.builder()
-                .setSections(
-                    command
-                        .getConfigOverrides(ImmutableMap.of())
-                        .getForCell(CellName.ROOT_CELL_NAME))
-                .build()),
+        FakeBuckConfig.builder()
+            .setSections(
+                command
+                    .getConfigOverrides(ImmutableMap.of())
+                    .getForCell(CellName.ROOT_CELL_NAME))
+            .build().getNumTestThreads(
+            command),
         Matchers.equalTo(1));
   }
 }
diff --git a/test/com/facebook/buck/cxx/ElfExtractSectionsStepTest.java b/test/com/facebook/buck/cxx/ElfExtractSectionsStepTest.java
index b2f33f7..724a1a1 100644
--- a/test/com/facebook/buck/cxx/ElfExtractSectionsStepTest.java
+++ b/test/com/facebook/buck/cxx/ElfExtractSectionsStepTest.java
@@ -92,7 +92,7 @@ public class ElfExtractSectionsStepTest {
     for (int index = 0; index < elf.getNumberOfSections(); index++) {
       ElfSection section = elf.getSectionByIndex(index);
       if (section.header.sh_flags != 0) {
-        String name = elf.getSectionName(section.header);
+        String name = section.header.getSectionName(elf);
         sections.add(name);
       }
     }
diff --git a/test/com/facebook/buck/distributed/DistBuildServiceTest.java b/test/com/facebook/buck/distributed/DistBuildServiceTest.java
index 68db658..093a411 100644
--- a/test/com/facebook/buck/distributed/DistBuildServiceTest.java
+++ b/test/com/facebook/buck/distributed/DistBuildServiceTest.java
@@ -305,7 +305,7 @@ public class DistBuildServiceTest {
     stampedeId.setId(idString);
     buildJob.setStampedeId(stampedeId);
     startBuildResponse.setBuildJob(buildJob);
-    response.setStartBuildResponse(startBuildResponse);
+    startBuildResponse.setStartBuildResponse(response);
     response.setWasSuccessful(true);
     EasyMock.expect(frontendService.makeRequest(EasyMock.capture(request)))
         .andReturn(response)
@@ -375,8 +375,7 @@ public class DistBuildServiceTest {
     }
 
     FrontendRequest expectedRequest =
-        new FrontendRequest()
-            .setType(FrontendRequestType.FETCH_SRC_FILES)
+        FrontendRequestType.FETCH_SRC_FILES.setType(new FrontendRequest())
             .setFetchSourceFilesRequest(new FetchSourceFilesRequest().setContentHashes(hashCodes));
     FrontendResponse response =
         new FrontendResponse()
@@ -449,10 +448,10 @@ public class DistBuildServiceTest {
                       .collect(Collectors.toList());
 
               BuildSlaveEventsQuery query =
-                  distBuildService.createBuildSlaveEventsQuery(stampedeId, buildSlaveRunId, 2);
+                  buildSlaveRunId.createBuildSlaveEventsQuery(stampedeId, 2, distBuildService);
               BuildSlaveEventsRange eventsRange = new BuildSlaveEventsRange();
               eventsRange.setSuccess(true);
-              eventsRange.setQuery(query);
+              query.setQuery(eventsRange);
               eventsRange.setEvents(sequencedEvents);
 
               MultiGetBuildSlaveEventsResponse eventsResponse =
@@ -469,7 +468,7 @@ public class DistBuildServiceTest {
 
     distBuildService.uploadBuildSlaveEvents(stampedeId, buildSlaveRunId, consoleEvents);
     BuildSlaveEventsQuery query =
-        distBuildService.createBuildSlaveEventsQuery(stampedeId, buildSlaveRunId, 2);
+        buildSlaveRunId.createBuildSlaveEventsQuery(stampedeId, 2, distBuildService);
     List<BuildSlaveEventWrapper> events =
         distBuildService.multiGetBuildSlaveEvents(ImmutableList.of(query));
 
diff --git a/test/com/facebook/buck/distributed/DistBuildUtilTest.java b/test/com/facebook/buck/distributed/DistBuildUtilTest.java
index 130ec61..f592f3e 100644
--- a/test/com/facebook/buck/distributed/DistBuildUtilTest.java
+++ b/test/com/facebook/buck/distributed/DistBuildUtilTest.java
@@ -73,19 +73,19 @@ public class DistBuildUtilTest {
     slaveConsoleEvent.getConsoleEvent().setMessage("My message");
     slaveConsoleEvent.setTimestampMillis(0);
 
-    slaveConsoleEvent.getConsoleEvent().setSeverity(ConsoleEventSeverity.INFO);
+    ConsoleEventSeverity.INFO.setSeverity(slaveConsoleEvent.getConsoleEvent());
     ConsoleEvent consoleEvent = DistBuildUtil.createConsoleEvent(slaveConsoleEvent);
     Assert.assertTrue(
         consoleEvent.getMessage().endsWith(slaveConsoleEvent.getConsoleEvent().getMessage()));
     Assert.assertEquals(consoleEvent.getLevel(), Level.INFO);
 
-    slaveConsoleEvent.getConsoleEvent().setSeverity(ConsoleEventSeverity.WARNING);
+    ConsoleEventSeverity.WARNING.setSeverity(slaveConsoleEvent.getConsoleEvent());
     consoleEvent = DistBuildUtil.createConsoleEvent(slaveConsoleEvent);
     Assert.assertTrue(
         consoleEvent.getMessage().endsWith(slaveConsoleEvent.getConsoleEvent().getMessage()));
     Assert.assertEquals(consoleEvent.getLevel(), Level.WARNING);
 
-    slaveConsoleEvent.getConsoleEvent().setSeverity(ConsoleEventSeverity.SEVERE);
+    ConsoleEventSeverity.SEVERE.setSeverity(slaveConsoleEvent.getConsoleEvent());
     consoleEvent = DistBuildUtil.createConsoleEvent(slaveConsoleEvent);
     Assert.assertTrue(
         consoleEvent.getMessage().endsWith(slaveConsoleEvent.getConsoleEvent().getMessage()));
diff --git a/test/com/facebook/buck/distributed/build_client/BuildPhaseTest.java b/test/com/facebook/buck/distributed/build_client/BuildPhaseTest.java
index 41386aa..48bee18 100644
--- a/test/com/facebook/buck/distributed/build_client/BuildPhaseTest.java
+++ b/test/com/facebook/buck/distributed/build_client/BuildPhaseTest.java
@@ -242,9 +242,8 @@ public class BuildPhaseTest {
             .setStampedeId(stampedeId)
             .setStatus(BuildStatus.BUILDING)
             .setBuildModeInfo(
-                new BuildModeInfo()
-                    .setTotalNumberOfMinions(NUM_MINIONS)
-                    .setMode(BuildMode.DISTRIBUTED_BUILD_WITH_LOCAL_COORDINATOR));
+                BuildMode.DISTRIBUTED_BUILD_WITH_LOCAL_COORDINATOR.setMode(new BuildModeInfo()
+                    .setTotalNumberOfMinions(NUM_MINIONS)));
     BuildJob job2 =
         new BuildJob().setStampedeId(stampedeId).setStatus(BuildStatus.FINISHED_SUCCESSFULLY);
     ImmutableList<BuildJob> jobs = ImmutableList.of(job0, job1, job2);
@@ -330,30 +329,30 @@ public class BuildPhaseTest {
 
     // Create first event.
     BuildSlaveEvent event1 = new BuildSlaveEvent();
-    event1.setEventType(BuildSlaveEventType.CONSOLE_EVENT);
+    BuildSlaveEventType.CONSOLE_EVENT.setEventType(event1);
     event1.setTimestampMillis(7);
     BuildSlaveConsoleEvent consoleEvent1 = new BuildSlaveConsoleEvent();
     consoleEvent1.setMessage("This is such fun.");
-    consoleEvent1.setSeverity(ConsoleEventSeverity.WARNING);
+    ConsoleEventSeverity.WARNING.setSeverity(consoleEvent1);
     event1.setConsoleEvent(consoleEvent1);
     BuildSlaveEventWrapper eventWithSeqId1 =
         new BuildSlaveEventWrapper(2, buildSlaveRunIds.get(0), event1);
 
     // Create second event.
     BuildSlaveEvent event2 = new BuildSlaveEvent();
-    event2.setEventType(BuildSlaveEventType.CONSOLE_EVENT);
+    BuildSlaveEventType.CONSOLE_EVENT.setEventType(event2);
     event2.setTimestampMillis(5);
     BuildSlaveConsoleEvent consoleEvent2 = new BuildSlaveConsoleEvent();
     consoleEvent2.setMessage("This is even more fun.");
-    consoleEvent2.setSeverity(ConsoleEventSeverity.SEVERE);
+    ConsoleEventSeverity.SEVERE.setSeverity(consoleEvent2);
     event2.setConsoleEvent(consoleEvent2);
     BuildSlaveEventWrapper eventWithSeqId2 =
         new BuildSlaveEventWrapper(1, buildSlaveRunIds.get(1), event2);
 
     // Set expectations.
-    expect(mockDistBuildService.createBuildSlaveEventsQuery(stampedeId, buildSlaveRunIds.get(0), 0))
+    expect(buildSlaveRunIds.get(0).createBuildSlaveEventsQuery(stampedeId, 0, mockDistBuildService))
         .andReturn(query0);
-    expect(mockDistBuildService.createBuildSlaveEventsQuery(stampedeId, buildSlaveRunIds.get(1), 0))
+    expect(buildSlaveRunIds.get(1).createBuildSlaveEventsQuery(stampedeId, 0, mockDistBuildService))
         .andReturn(query1);
     expect(mockDistBuildService.multiGetBuildSlaveEvents(ImmutableList.of(query0, query1)))
         .andReturn(ImmutableList.of(eventWithSeqId1, eventWithSeqId2));
@@ -364,12 +363,12 @@ public class BuildPhaseTest {
 
     // At the end, also test that sequence ids are being maintained properly.
     expect(
-            mockDistBuildService.createBuildSlaveEventsQuery(
-                stampedeId, buildSlaveRunIds.get(0), eventWithSeqId1.getEventNumber() + 1))
+            buildSlaveRunIds.get(0).createBuildSlaveEventsQuery(
+                stampedeId, eventWithSeqId1.getEventNumber() + 1, mockDistBuildService))
         .andReturn(query0);
     expect(
-            mockDistBuildService.createBuildSlaveEventsQuery(
-                stampedeId, buildSlaveRunIds.get(1), eventWithSeqId2.getEventNumber() + 1))
+            buildSlaveRunIds.get(1).createBuildSlaveEventsQuery(
+                stampedeId, eventWithSeqId2.getEventNumber() + 1, mockDistBuildService))
         .andReturn(query1);
     expect(mockDistBuildService.multiGetBuildSlaveEvents(ImmutableList.of(query0, query1)))
         .andReturn(ImmutableList.of());
diff --git a/test/com/facebook/buck/distributed/build_client/BuildSlaveLogsMaterializerTest.java b/test/com/facebook/buck/distributed/build_client/BuildSlaveLogsMaterializerTest.java
index 4c8cf30..cf9ab5d 100644
--- a/test/com/facebook/buck/distributed/build_client/BuildSlaveLogsMaterializerTest.java
+++ b/test/com/facebook/buck/distributed/build_client/BuildSlaveLogsMaterializerTest.java
@@ -105,8 +105,8 @@ public class BuildSlaveLogsMaterializerTest {
     logDir1.setData("Here is some more data.".getBytes());
 
     MultiGetBuildSlaveLogDirResponse logDirResponse = new MultiGetBuildSlaveLogDirResponse();
-    logDirResponse.addToLogDirs(logDir0);
-    logDirResponse.addToLogDirs(logDir1);
+    logDir0.addToLogDirs(logDirResponse);
+    logDir1.addToLogDirs(logDirResponse);
     StampedeId stampedeId = new StampedeId().setId("down the line");
     List<BuildSlaveRunId> buildSlaveRunIdsToFetch = Lists.newArrayList();
     EasyMock.expect(
diff --git a/test/com/facebook/buck/distributed/build_client/DistBuildControllerTest.java b/test/com/facebook/buck/distributed/build_client/DistBuildControllerTest.java
index 0e95aff..dda8f4c 100644
--- a/test/com/facebook/buck/distributed/build_client/DistBuildControllerTest.java
+++ b/test/com/facebook/buck/distributed/build_client/DistBuildControllerTest.java
@@ -244,7 +244,7 @@ public class DistBuildControllerTest {
 
     BuildJobStateCell cell = new BuildJobStateCell();
     cell.setNameHint("paradise");
-    state.putToCells(42, cell);
+    cell.putToCells(42, state);
 
     state.addToTopLevelTargets("awesome-node");
 
@@ -409,7 +409,7 @@ public class DistBuildControllerTest {
 
     expect(mockLogStateTracker.createStreamLogRequests(job.getBuildSlaves()))
         .andReturn(ImmutableList.of());
-    expect(mockDistBuildService.createBuildSlaveEventsQuery(stampedeId, buildSlaveRunId, 0))
+    expect(buildSlaveRunId.createBuildSlaveEventsQuery(stampedeId, 0, mockDistBuildService))
         .andReturn(query);
     expect(mockDistBuildService.multiGetBuildSlaveEvents(ImmutableList.of(query)))
         .andReturn(ImmutableList.of());
@@ -432,12 +432,12 @@ public class DistBuildControllerTest {
         .once();
     expect(mockDistBuildService.fetchBuildSlaveStatus(stampedeId, buildSlaveRunId))
         .andReturn(Optional.of(slaveStatus));
-    expect(mockDistBuildService.createBuildSlaveEventsQuery(stampedeId, buildSlaveRunId, 0))
+    expect(buildSlaveRunId.createBuildSlaveEventsQuery(stampedeId, 0, mockDistBuildService))
         .andReturn(query);
 
     // Signal that all build rules have been published.
     BuildSlaveEvent buildSlaveEvent = new BuildSlaveEvent();
-    buildSlaveEvent.setEventType(BuildSlaveEventType.ALL_BUILD_RULES_FINISHED_EVENT);
+    BuildSlaveEventType.ALL_BUILD_RULES_FINISHED_EVENT.setEventType(buildSlaveEvent);
 
     expect(mockDistBuildService.multiGetBuildSlaveEvents(ImmutableList.of(query)))
         .andReturn(
@@ -452,7 +452,7 @@ public class DistBuildControllerTest {
     // After the top level build status has been set, the slave also sets its own status.
     // This will complete the build.
     job = job.deepCopy(); // new copy
-    slaveInfo1.setStatus(BuildStatus.FINISHED_SUCCESSFULLY);
+    BuildStatus.FINISHED_SUCCESSFULLY.setStatus(slaveInfo1);
     assertEquals(slaveInfo1.getBuildSlaveRunId(), job.getBuildSlaves().get(0).getBuildSlaveRunId());
     job.getBuildSlaves().set(0, slaveInfo1);
     expect(mockDistBuildService.getCurrentBuildJobState(stampedeId)).andReturn(job);
@@ -461,7 +461,7 @@ public class DistBuildControllerTest {
         .andReturn(ImmutableList.of());
 
     query.setFirstEventNumber(1);
-    expect(mockDistBuildService.createBuildSlaveEventsQuery(stampedeId, buildSlaveRunId, 2))
+    expect(buildSlaveRunId.createBuildSlaveEventsQuery(stampedeId, 2, mockDistBuildService))
         .andReturn(query);
     expect(mockDistBuildService.multiGetBuildSlaveEvents(ImmutableList.of(query)))
         .andReturn(ImmutableList.of());
diff --git a/test/com/facebook/buck/distributed/build_client/LogStateTrackerTest.java b/test/com/facebook/buck/distributed/build_client/LogStateTrackerTest.java
index 00c658a..5e9fe80 100644
--- a/test/com/facebook/buck/distributed/build_client/LogStateTrackerTest.java
+++ b/test/com/facebook/buck/distributed/build_client/LogStateTrackerTest.java
@@ -135,7 +135,7 @@ public class LogStateTrackerTest {
     runTwoStdOutStream.setStreamType(LogStreamType.STDOUT);
 
     StreamLogs runOneStdErrLogs = new StreamLogs();
-    runOneStdErrLogs.setSlaveStream(runOneStdErrStream);
+    runOneStdErrStream.setSlaveStream(runOneStdErrLogs);
     LogLineBatch runOneStdErrLogsBatchOne = new LogLineBatch();
     runOneStdErrLogsBatchOne.setBatchNumber(1);
     runOneStdErrLogsBatchOne.setLines(
@@ -143,7 +143,7 @@ public class LogStateTrackerTest {
     runOneStdErrLogs.setLogLineBatches(ImmutableList.of(runOneStdErrLogsBatchOne));
 
     StreamLogs runTwoStdOutLogs = new StreamLogs();
-    runTwoStdOutLogs.setSlaveStream(runTwoStdOutStream);
+    runTwoStdOutStream.setSlaveStream(runTwoStdOutLogs);
     LogLineBatch runTwoStdOutLogsBatchOne = new LogLineBatch();
     runTwoStdOutLogsBatchOne.setBatchNumber(1);
     runTwoStdOutLogsBatchOne.setLines(ImmutableList.of("runTwoStdOutLine1\n"));
@@ -167,7 +167,7 @@ public class LogStateTrackerTest {
     // Process new logs
 
     runTwoStdOutLogs = new StreamLogs();
-    runTwoStdOutLogs.setSlaveStream(runTwoStdOutStream);
+    runTwoStdOutStream.setSlaveStream(runTwoStdOutLogs);
 
     runTwoStdOutLogsBatchTwo = new LogLineBatch();
     runTwoStdOutLogsBatchTwo.setBatchNumber(2);
@@ -222,7 +222,7 @@ public class LogStateTrackerTest {
 
     // runOne/stdErr
     runOneStdErrLogs = new StreamLogs();
-    runOneStdErrLogs.setSlaveStream(runOneStdErrStream);
+    runOneStdErrStream.setSlaveStream(runOneStdErrLogs);
     runOneStdErrLogsBatchOne = new LogLineBatch();
     runOneStdErrLogsBatchOne.setBatchNumber(1);
     runOneStdErrLogsBatchOne.setLines(
@@ -235,7 +235,7 @@ public class LogStateTrackerTest {
 
     // runOne/stdOut
     StreamLogs runOneStdOutLogs = new StreamLogs();
-    runOneStdOutLogs.setSlaveStream(runOneStdOutStream);
+    runOneStdOutStream.setSlaveStream(runOneStdOutLogs);
     LogLineBatch runOneStdOutLogsBatchOne = new LogLineBatch();
     runOneStdOutLogsBatchOne.setBatchNumber(1);
     runOneStdOutLogsBatchOne.setLines(
@@ -249,7 +249,7 @@ public class LogStateTrackerTest {
 
     // runTwo/stdOut
     runTwoStdOutLogs = new StreamLogs();
-    runTwoStdOutLogs.setSlaveStream(runTwoStdOutStream);
+    runTwoStdOutStream.setSlaveStream(runTwoStdOutLogs);
     runTwoStdOutLogsBatchTwo = new LogLineBatch();
     runTwoStdOutLogsBatchTwo.setBatchNumber(2);
     runTwoStdOutLogsBatchTwo.setLines(
diff --git a/test/com/facebook/buck/event/listener/DistBuildSlaveEventBusListenerTest.java b/test/com/facebook/buck/event/listener/DistBuildSlaveEventBusListenerTest.java
index d006bcb..91cba27 100644
--- a/test/com/facebook/buck/event/listener/DistBuildSlaveEventBusListenerTest.java
+++ b/test/com/facebook/buck/event/listener/DistBuildSlaveEventBusListenerTest.java
@@ -620,7 +620,7 @@ public class DistBuildSlaveEventBusListenerTest {
     BuildSlaveFinishedStats expectedFinishedStats = new BuildSlaveFinishedStats();
     expectedFinishedStats.setHostname(HostnameFetching.getHostname());
     expectedFinishedStats.setBuildSlaveStatus(status);
-    expectedFinishedStats.setFileMaterializationStats(fileMaterializationStats);
+    fileMaterializationStats.setFileMaterializationStats(expectedFinishedStats);
     expectedFinishedStats.setBuildSlavePerStageTimingStats(timingStats);
     expectedFinishedStats.setDistBuildMode("REMOTE_BUILD");
     expectedFinishedStats.setExitCode(EXIT_CODE);
diff --git a/test/com/facebook/buck/event/listener/SimpleConsoleEventBusListenerTest.java b/test/com/facebook/buck/event/listener/SimpleConsoleEventBusListenerTest.java
index 5f84140..8bb10de 100644
--- a/test/com/facebook/buck/event/listener/SimpleConsoleEventBusListenerTest.java
+++ b/test/com/facebook/buck/event/listener/SimpleConsoleEventBusListenerTest.java
@@ -445,7 +445,7 @@ public class SimpleConsoleEventBusListenerTest {
     BuildSlaveInfo slaveInfo1 = new BuildSlaveInfo();
     slaveInfo1.setBuildSlaveRunId(buildSlaveRunId1);
     slaveInfo1.setHostname("hostname1");
-    slaveInfo1.setStatus(BuildStatus.BUILDING);
+    BuildStatus.BUILDING.setStatus(slaveInfo1);
 
     BuildJob job = new BuildJob();
     job.setBuildSlaves(ImmutableList.of(slaveInfo1));
@@ -472,7 +472,7 @@ public class SimpleConsoleEventBusListenerTest {
     BuildSlaveInfo slaveInfo2 = new BuildSlaveInfo();
     slaveInfo2.setBuildSlaveRunId(buildSlaveRunId2);
     slaveInfo2.setHostname("hostname2");
-    slaveInfo2.setStatus(BuildStatus.BUILDING);
+    BuildStatus.BUILDING.setStatus(slaveInfo2);
 
     job.setBuildSlaves(ImmutableList.of(slaveInfo1, slaveInfo2));
 
@@ -491,7 +491,7 @@ public class SimpleConsoleEventBusListenerTest {
             + System.lineSeparator();
     assertOutput(expectedOutput, console);
 
-    slaveInfo2.setStatus(BuildStatus.FINISHED_SUCCESSFULLY);
+    BuildStatus.FINISHED_SUCCESSFULLY.setStatus(slaveInfo2);
 
     eventBus.postWithoutConfiguring(
         configureTestEventAtTime(
diff --git a/test/com/facebook/buck/event/listener/SuperConsoleEventBusListenerTest.java b/test/com/facebook/buck/event/listener/SuperConsoleEventBusListenerTest.java
index 4d4f7a9..45b5e95 100644
--- a/test/com/facebook/buck/event/listener/SuperConsoleEventBusListenerTest.java
+++ b/test/com/facebook/buck/event/listener/SuperConsoleEventBusListenerTest.java
@@ -1254,7 +1254,7 @@ public class SuperConsoleEventBusListenerTest {
     cacheRateStatsForSlave2.setCacheHitsCount(5);
     cacheRateStatsForSlave2.setCacheMissesCount(0);
 
-    slaveInfo3.setStatus(BuildStatus.FAILED);
+    BuildStatus.FAILED.setStatus(slaveInfo3);
 
     eventBus.postWithoutConfiguring(
         configureTestEventAtTime(
diff --git a/test/com/facebook/buck/shell/WorkerShellStepTest.java b/test/com/facebook/buck/shell/WorkerShellStepTest.java
index 0356dc5..ff55b79 100644
--- a/test/com/facebook/buck/shell/WorkerShellStepTest.java
+++ b/test/com/facebook/buck/shell/WorkerShellStepTest.java
@@ -224,11 +224,11 @@ public class WorkerShellStepTest {
 
     WorkerShellStep step = createWorkerShellStep(cmdParams, null, cmdExeParams);
     assertThat(
-        step.getFactory().getCommand(Platform.LINUX, cmdParams.getWorkerProcessParams()),
+        Platform.LINUX.getCommand(cmdParams.getWorkerProcessParams(), step.getFactory()),
         Matchers.equalTo(
             ImmutableList.of("/bin/bash", "-e", "-c", "command --platform unix-like")));
     assertThat(
-        step.getFactory().getCommand(Platform.WINDOWS, cmdExeParams.getWorkerProcessParams()),
+        Platform.WINDOWS.getCommand(cmdExeParams.getWorkerProcessParams(), step.getFactory()),
         Matchers.equalTo(ImmutableList.of("cmd.exe", "/c", "command --platform windows")));
   }
 
diff --git a/test/com/facebook/buck/slb/ThriftOverHttpServiceTest.java b/test/com/facebook/buck/slb/ThriftOverHttpServiceTest.java
index bf8fc98..582965e 100644
--- a/test/com/facebook/buck/slb/ThriftOverHttpServiceTest.java
+++ b/test/com/facebook/buck/slb/ThriftOverHttpServiceTest.java
@@ -48,7 +48,7 @@ public class ThriftOverHttpServiceTest {
   public void testSendValidMessageAndReturnError() throws IOException {
     // TODO(ruibm): Add jetty end to end integration tests for this API.
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.BUILD_STATUS);
+    FrontendRequestType.BUILD_STATUS.setType(request);
 
     FrontendResponse response = new FrontendResponse();
     response.setType(FrontendRequestType.START_BUILD);
@@ -81,7 +81,7 @@ public class ThriftOverHttpServiceTest {
   @Test
   public void testSendValidMessageAndReturnValidResponse() throws IOException, TException {
     FrontendRequest request = new FrontendRequest();
-    request.setType(FrontendRequestType.BUILD_STATUS);
+    FrontendRequestType.BUILD_STATUS.setType(request);
 
     FrontendResponse expectedResponse = new FrontendResponse();
     expectedResponse.setType(FrontendRequestType.START_BUILD);
diff --git a/third-party/java/dx/src/com/android/dx/cf/code/Frame.java b/third-party/java/dx/src/com/android/dx/cf/code/Frame.java
index cb32b92..8bc40f8 100644
--- a/third-party/java/dx/src/com/android/dx/cf/code/Frame.java
+++ b/third-party/java/dx/src/com/android/dx/cf/code/Frame.java
@@ -107,18 +107,7 @@ public final class Frame {
         // "subroutines" is always immutable
     }
 
-    /**
-     * Replaces all the occurrences of the given uninitialized type in
-     * this frame with its initialized equivalent.
-     *
-     * @param type {@code non-null;} type to replace
-     */
-    public void makeInitialized(Type type) {
-        locals.makeInitialized(type);
-        stack.makeInitialized(type);
-    }
-
-    /**
+  /**
      * Gets the locals array for this instance.
      *
      * @return {@code non-null;} the locals array
diff --git a/third-party/java/dx/src/com/android/dx/cf/code/Ropper.java b/third-party/java/dx/src/com/android/dx/cf/code/Ropper.java
index 219298e..f5cb5da 100644
--- a/third-party/java/dx/src/com/android/dx/cf/code/Ropper.java
+++ b/third-party/java/dx/src/com/android/dx/cf/code/Ropper.java
@@ -1621,7 +1621,7 @@ public final class Ropper {
 
             addBlock (
                 new BasicBlock(newLabel,
-                    filterMoveReturnAddressInsns(origBlock.getInsns()),
+                    origBlock.getInsns().filterMoveReturnAddressInsns(this),
                     successors, primarySuccessor),
                     labelToSubroutines.get(newLabel));
         }
@@ -1704,47 +1704,7 @@ public final class Ropper {
     }
 
 
-    /**
-     * Removes all {@code move-return-address} instructions, returning a new
-     * {@code InsnList} if necessary. The {@code move-return-address}
-     * insns are dead code after subroutines have been inlined.
-     *
-     * @param insns {@code InsnList} that may contain
-     * {@code move-return-address} insns
-     * @return {@code InsnList} with {@code move-return-address} removed
-     */
-    private InsnList filterMoveReturnAddressInsns(InsnList insns) {
-        int sz;
-        int newSz = 0;
-
-        // First see if we need to filter, and if so what the new size will be
-        sz = insns.size();
-        for (int i = 0; i < sz; i++) {
-            if (insns.get(i).getOpcode() != Rops.MOVE_RETURN_ADDRESS) {
-                newSz++;
-            }
-        }
-
-        if (newSz == sz) {
-            return insns;
-        }
-
-        // Make a new list without the MOVE_RETURN_ADDRESS insns
-        InsnList newInsns = new InsnList(newSz);
-
-        int newIndex = 0;
-        for (int i = 0; i < sz; i++) {
-            Insn insn = insns.get(i);
-            if (insn.getOpcode() != Rops.MOVE_RETURN_ADDRESS) {
-                newInsns.set(newIndex++, insn);
-            }
-        }
-
-        newInsns.setImmutable();
-        return newInsns;
-    }
-
-    /**
+  /**
      * Visits each non-subroutine block once in depth-first successor order.
      *
      * @param firstLabel label of start block
diff --git a/third-party/java/dx/src/com/android/dx/cf/code/ValueAwareMachine.java b/third-party/java/dx/src/com/android/dx/cf/code/ValueAwareMachine.java
index de75db5..a7bd1ca 100644
--- a/third-party/java/dx/src/com/android/dx/cf/code/ValueAwareMachine.java
+++ b/third-party/java/dx/src/com/android/dx/cf/code/ValueAwareMachine.java
@@ -157,7 +157,7 @@ public class ValueAwareMachine extends BaseMachine {
             case ByteOps.INVOKESPECIAL: {
                 Type thisType = arg(0).getType();
                 if (thisType.isUninitialized()) {
-                    frame.makeInitialized(thisType);
+                    thisType.makeInitialized(frame);
                 }
                 Type type = ((TypeBearer) getAuxCst()).getType();
                 if (type == Type.VOID) {
diff --git a/third-party/java/dx/src/com/android/dx/cf/cst/ConstantPoolParser.java b/third-party/java/dx/src/com/android/dx/cf/cst/ConstantPoolParser.java
index 036c880..16e3148 100644
--- a/third-party/java/dx/src/com/android/dx/cf/cst/ConstantPoolParser.java
+++ b/third-party/java/dx/src/com/android/dx/cf/cst/ConstantPoolParser.java
@@ -350,7 +350,7 @@ public final class ConstantPoolParser {
             throw pe;
         }
 
-        pool.set(idx, cst);
+        cst.set(idx, pool);
         return cst;
     }
 
diff --git a/third-party/java/dx/src/com/android/dx/dex/cf/CfTranslator.java b/third-party/java/dx/src/com/android/dx/dex/cf/CfTranslator.java
index b3e39bb..5919a98 100644
--- a/third-party/java/dx/src/com/android/dx/dex/cf/CfTranslator.java
+++ b/third-party/java/dx/src/com/android/dx/dex/cf/CfTranslator.java
@@ -303,8 +303,9 @@ public class CfTranslator {
                                 paramSize, isStatic, cfOptions.localInfo, advice);
 
                         if (DEBUG) {
-                            context.optimizerOptions.compareOptimizerStep(nonOptRmeth,
-                                    paramSize, isStatic, cfOptions, advice, rmeth);
+                            nonOptRmeth.compareOptimizerStep(
+                                paramSize, isStatic, cfOptions, advice, rmeth,
+                                context.optimizerOptions);
                         }
 
                         if (cfOptions.statistics) {
diff --git a/third-party/java/dx/src/com/android/dx/dex/cf/OptimizerOptions.java b/third-party/java/dx/src/com/android/dx/dex/cf/OptimizerOptions.java
index ebcdbd2..39bbcd0 100644
--- a/third-party/java/dx/src/com/android/dx/dex/cf/OptimizerOptions.java
+++ b/third-party/java/dx/src/com/android/dx/dex/cf/OptimizerOptions.java
@@ -16,13 +16,9 @@
 
 package com.android.dx.dex.cf;
 
-import com.android.dx.rop.code.RopMethod;
-import com.android.dx.rop.code.TranslationAdvice;
-import com.android.dx.ssa.Optimizer;
 import java.io.BufferedReader;
 import java.io.FileReader;
 import java.io.IOException;
-import java.util.EnumSet;
 import java.util.HashSet;
 
 /**
@@ -111,49 +107,7 @@ public class OptimizerOptions {
         return result;
     }
 
-    /**
-     * Compares the output of the optimizer run normally with a run skipping
-     * some optional steps. Results are printed to stderr.
-     *
-     * @param nonOptRmeth {@code non-null;} origional rop method
-     * @param paramSize {@code >= 0;} parameter size of method
-     * @param isStatic true if this method has no 'this' pointer argument.
-     * @param args {@code non-null;} translator arguments
-     * @param advice {@code non-null;} translation advice
-     * @param rmeth {@code non-null;} method with all optimization steps run.
-     */
-    public void compareOptimizerStep(RopMethod nonOptRmeth,
-            int paramSize, boolean isStatic, CfOptions args,
-            TranslationAdvice advice, RopMethod rmeth) {
-        EnumSet<Optimizer.OptionalStep> steps;
-
-        steps = EnumSet.allOf(Optimizer.OptionalStep.class);
-
-        // This is the step to skip.
-        steps.remove(Optimizer.OptionalStep.CONST_COLLECTOR);
-
-        RopMethod skipRopMethod
-                = Optimizer.optimize(nonOptRmeth,
-                        paramSize, isStatic, args.localInfo, advice, steps);
-
-        int normalInsns
-                = rmeth.getBlocks().getEffectiveInstructionCount();
-        int skipInsns
-                = skipRopMethod.getBlocks().getEffectiveInstructionCount();
-
-        System.err.printf(
-                "optimize step regs:(%d/%d/%.2f%%)"
-                + " insns:(%d/%d/%.2f%%)\n",
-                rmeth.getBlocks().getRegCount(),
-                skipRopMethod.getBlocks().getRegCount(),
-                100.0 * ((skipRopMethod.getBlocks().getRegCount()
-                        - rmeth.getBlocks().getRegCount())
-                        / (float) skipRopMethod.getBlocks().getRegCount()),
-                normalInsns, skipInsns,
-                100.0 * ((skipInsns - normalInsns) / (float) skipInsns));
-    }
-
-    /**
+  /**
      * Checks whether the specified method should be optimized
      *
      * @param canonicalMethodName name of method being considered
diff --git a/third-party/java/dx/src/com/android/dx/dex/code/CodeAddress.java b/third-party/java/dx/src/com/android/dx/dex/code/CodeAddress.java
index b31e31c..0c52f0a 100644
--- a/third-party/java/dx/src/com/android/dx/dex/code/CodeAddress.java
+++ b/third-party/java/dx/src/com/android/dx/dex/code/CodeAddress.java
@@ -88,4 +88,20 @@ public final class CodeAddress extends ZeroSizeInsn {
     public boolean getBindsClosely() {
         return bindsClosely;
     }
+
+  /**
+   * Returns an instance that is just like this one, except that its
+   * opcode has the opposite sense (as a test; e.g. a
+   * {@code lt} test becomes a {@code ge}), and its branch
+   * target is replaced by the one given, and all set-once values
+   * associated with the class (such as its address) are reset.
+   *
+   *
+   * @param targetInsn@return {@code non-null;} an appropriately-constructed instance
+   */
+  public TargetInsn withNewTargetAndReversed(TargetInsn targetInsn) {
+    Dop opcode = targetInsn.getOpcode().getOppositeTest();
+
+      return new TargetInsn(opcode, targetInsn.getPosition(), targetInsn.getRegisters(), this);
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/dex/code/DalvInsn.java b/third-party/java/dx/src/com/android/dx/dex/code/DalvInsn.java
index 49a2f30..99f39cb 100644
--- a/third-party/java/dx/src/com/android/dx/dex/code/DalvInsn.java
+++ b/third-party/java/dx/src/com/android/dx/dex/code/DalvInsn.java
@@ -459,4 +459,35 @@ public abstract class DalvInsn {
      * @return {@code null-ok;} the listing string
      */
     protected abstract String listingString0(boolean noteIndices);
+
+  /**
+   * Returns the string form, suitable for inclusion in a listing
+   * dump, of the given instruction. The instruction must be of this
+   * instance's format for proper operation.
+   *
+   * @param noteIndices whether to include an explicit notation of
+   * constant pool indices
+   * @param insnFormat
+   * @return {@code non-null;} the string form
+   */
+  public final String listingStringOther(boolean noteIndices, InsnFormat insnFormat) {
+    String op = getOpcode().getName();
+      String arg = insnFormat.insnArgString(this);
+      String comment = insnFormat.insnCommentString(this, noteIndices);
+      StringBuilder sb = new StringBuilder(100);
+
+      sb.append(op);
+
+      if (arg.length() != 0) {
+          sb.append(' ');
+          sb.append(arg);
+      }
+
+      if (comment.length() != 0) {
+          sb.append(" // ");
+          sb.append(comment);
+      }
+
+      return sb.toString();
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/dex/code/FixedSizeInsn.java b/third-party/java/dx/src/com/android/dx/dex/code/FixedSizeInsn.java
index faed530..c2ea80a 100644
--- a/third-party/java/dx/src/com/android/dx/dex/code/FixedSizeInsn.java
+++ b/third-party/java/dx/src/com/android/dx/dex/code/FixedSizeInsn.java
@@ -68,6 +68,6 @@ public abstract class FixedSizeInsn extends DalvInsn {
     /** {@inheritDoc} */
     @Override
     protected final String listingString0(boolean noteIndices) {
-        return getOpcode().getFormat().listingString(this, noteIndices);
+        return listingStringOther(noteIndices, getOpcode().getFormat());
     }
 }
diff --git a/third-party/java/dx/src/com/android/dx/dex/code/InsnFormat.java b/third-party/java/dx/src/com/android/dx/dex/code/InsnFormat.java
index 1f63d1f..42d23e5 100644
--- a/third-party/java/dx/src/com/android/dx/dex/code/InsnFormat.java
+++ b/third-party/java/dx/src/com/android/dx/dex/code/InsnFormat.java
@@ -42,38 +42,7 @@ public abstract class InsnFormat {
      */
     public static final boolean ALLOW_EXTENDED_OPCODES = true;
 
-    /**
-     * Returns the string form, suitable for inclusion in a listing
-     * dump, of the given instruction. The instruction must be of this
-     * instance's format for proper operation.
-     *
-     * @param insn {@code non-null;} the instruction
-     * @param noteIndices whether to include an explicit notation of
-     * constant pool indices
-     * @return {@code non-null;} the string form
-     */
-    public final String listingString(DalvInsn insn, boolean noteIndices) {
-        String op = insn.getOpcode().getName();
-        String arg = insnArgString(insn);
-        String comment = insnCommentString(insn, noteIndices);
-        StringBuilder sb = new StringBuilder(100);
-
-        sb.append(op);
-
-        if (arg.length() != 0) {
-            sb.append(' ');
-            sb.append(arg);
-        }
-
-        if (comment.length() != 0) {
-            sb.append(" // ");
-            sb.append(comment);
-        }
-
-        return sb.toString();
-    }
-
-    /**
+  /**
      * Returns the string form of the arguments to the given instruction.
      * The instruction must be of this instance's format. If the instruction
      * has no arguments, then the result should be {@code ""}, not
diff --git a/third-party/java/dx/src/com/android/dx/dex/code/OutputFinisher.java b/third-party/java/dx/src/com/android/dx/dex/code/OutputFinisher.java
index 0747c2b..08a23b3 100644
--- a/third-party/java/dx/src/com/android/dx/dex/code/OutputFinisher.java
+++ b/third-party/java/dx/src/com/android/dx/dex/code/OutputFinisher.java
@@ -299,7 +299,7 @@ public final class OutputFinisher {
          * No need to call this.set(), since the format and other info
          * are the same.
          */
-        insns.set(index, targetInsn.withNewTargetAndReversed(newTarget));
+        insns.set(index, newTarget.withNewTargetAndReversed(targetInsn));
     }
 
     /**
@@ -787,7 +787,7 @@ public final class OutputFinisher {
                     new TargetInsn(Dops.GOTO, target.getPosition(),
                             RegisterSpecList.EMPTY, target.getTarget());
                 insns.set(i, gotoInsn);
-                insns.add(i, target.withNewTargetAndReversed(newTarget));
+                insns.add(i, newTarget.withNewTargetAndReversed(target));
                 size++;
                 i++;
             }
diff --git a/third-party/java/dx/src/com/android/dx/dex/code/TargetInsn.java b/third-party/java/dx/src/com/android/dx/dex/code/TargetInsn.java
index cbb5ff9..279c791 100644
--- a/third-party/java/dx/src/com/android/dx/dex/code/TargetInsn.java
+++ b/third-party/java/dx/src/com/android/dx/dex/code/TargetInsn.java
@@ -61,23 +61,7 @@ public final class TargetInsn extends FixedSizeInsn {
         return new TargetInsn(getOpcode(), getPosition(), registers, target);
     }
 
-    /**
-     * Returns an instance that is just like this one, except that its
-     * opcode has the opposite sense (as a test; e.g. a
-     * {@code lt} test becomes a {@code ge}), and its branch
-     * target is replaced by the one given, and all set-once values
-     * associated with the class (such as its address) are reset.
-     *
-     * @param target {@code non-null;} the new branch target
-     * @return {@code non-null;} an appropriately-constructed instance
-     */
-    public TargetInsn withNewTargetAndReversed(CodeAddress target) {
-        Dop opcode = getOpcode().getOppositeTest();
-
-        return new TargetInsn(opcode, getPosition(), getRegisters(), target);
-    }
-
-    /**
+  /**
      * Gets the unique branch target of this instruction.
      *
      * @return {@code non-null;} the branch target
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/CatchStructs.java b/third-party/java/dx/src/com/android/dx/dex/file/CatchStructs.java
index 1e02452..2c7ccbb 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/CatchStructs.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/CatchStructs.java
@@ -161,7 +161,7 @@ public final class CatchStructs {
             for (int i = 0; i < listSize; i++) {
                 CatchHandlerList.Entry entry = list.get(i);
                 out.writeUleb128(
-                        typeIds.indexOf(entry.getExceptionType()));
+                        entry.getExceptionType().indexOf(typeIds));
                 out.writeUleb128(entry.getHandler());
             }
 
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/ClassDefItem.java b/third-party/java/dx/src/com/android/dx/dex/file/ClassDefItem.java
index 47f9b69..a4c1091 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/ClassDefItem.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/ClassDefItem.java
@@ -171,9 +171,9 @@ public final class ClassDefItem extends IndexedItem {
     public void writeTo(DexFile file, AnnotatedOutput out) {
         boolean annotates = out.annotates();
         TypeIdsSection typeIds = file.getTypeIds();
-        int classIdx = typeIds.indexOf(thisClass);
+        int classIdx = thisClass.indexOf(typeIds);
         int superIdx = (superclass == null) ? -1 :
-            typeIds.indexOf(superclass);
+            superclass.indexOf(typeIds);
         int interOff = OffsettedItem.getAbsoluteOffsetOr0(interfaces);
         int annoOff = annotationsDirectory.isEmpty() ? 0 :
             annotationsDirectory.getAbsoluteOffset();
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/DebugInfoEncoder.java b/third-party/java/dx/src/com/android/dx/dex/file/DebugInfoEncoder.java
index 9f57b6b..195201e 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/DebugInfoEncoder.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/DebugInfoEncoder.java
@@ -670,7 +670,7 @@ public final class DebugInfoEncoder {
             output.writeUleb128(0);
         } else {
             output.writeUleb128(
-                    1 + file.getTypeIds().indexOf(type));
+                    1 + type.indexOf(file.getTypeIds()));
         }
 
         if (DEBUG) {
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/DexFile.java b/third-party/java/dx/src/com/android/dx/dex/file/DexFile.java
index 103985c..4f6238a 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/DexFile.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/DexFile.java
@@ -608,7 +608,7 @@ public final class DexFile {
         Statistics stats = new Statistics();
 
         for (Section s : sections) {
-            stats.addAll(s);
+            s.addAll(stats);
         }
 
         return stats;
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/MemberIdItem.java b/third-party/java/dx/src/com/android/dx/dex/file/MemberIdItem.java
index ffe4c6c..41c0dfa 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/MemberIdItem.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/MemberIdItem.java
@@ -62,7 +62,7 @@ public abstract class MemberIdItem extends IdItem {
         TypeIdsSection typeIds = file.getTypeIds();
         StringIdsSection stringIds = file.getStringIds();
         CstNat nat = cst.getNat();
-        int classIdx = typeIds.indexOf(getDefiningClass());
+        int classIdx = getDefiningClass().indexOf(typeIds);
         int nameIdx = stringIds.indexOf(nat.getName());
         int typoidIdx = getTypoidIdx(file);
 
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/Section.java b/third-party/java/dx/src/com/android/dx/dex/file/Section.java
index bde714c..bfe3f46 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/Section.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/Section.java
@@ -283,4 +283,16 @@ public abstract class Section {
     protected final String getName() {
         return name;
     }
+
+  /**
+   * Adds the given list of items to the statistics.
+   *
+   * @param statistics
+   */
+  public void addAll(Statistics statistics) {
+    Collection<? extends Item> items = items();
+      for (Item item : items) {
+          statistics.add(item);
+      }
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/Statistics.java b/third-party/java/dx/src/com/android/dx/dex/file/Statistics.java
index 42f5b49..d7d8817 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/Statistics.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/Statistics.java
@@ -17,7 +17,6 @@
 package com.android.dx.dex.file;
 
 import com.android.dx.util.AnnotatedOutput;
-import java.util.Collection;
 import java.util.HashMap;
 import java.util.TreeMap;
 
@@ -51,19 +50,7 @@ public final class Statistics {
         }
     }
 
-    /**
-     * Adds the given list of items to the statistics.
-     *
-     * @param list {@code non-null;} the list of items to add
-     */
-    public void addAll(Section list) {
-        Collection<? extends Item> items = list.items();
-        for (Item item : items) {
-            add(item);
-        }
-    }
-
-    /**
+  /**
      * Writes the statistics as an annotation.
      *
      * @param out {@code non-null;} where to write to
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/StringIdsSection.java b/third-party/java/dx/src/com/android/dx/dex/file/StringIdsSection.java
index 6826c5a..8ee9740 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/StringIdsSection.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/StringIdsSection.java
@@ -17,7 +17,6 @@
 package com.android.dx.dex.file;
 
 import com.android.dx.rop.cst.Constant;
-import com.android.dx.rop.cst.CstNat;
 import com.android.dx.rop.cst.CstString;
 import com.android.dx.util.AnnotatedOutput;
 import com.android.dx.util.Hex;
@@ -135,17 +134,7 @@ public final class StringIdsSection
         return string;
     }
 
-    /**
-     * Interns the components of a name-and-type into this instance.
-     *
-     * @param nat {@code non-null;} the name-and-type
-     */
-    public synchronized void intern(CstNat nat) {
-        intern(nat.getName());
-        intern(nat.getDescriptor());
-    }
-
-    /**
+  /**
      * Gets the index of the given string, which must have been added
      * to this instance.
      *
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/TypeIdsSection.java b/third-party/java/dx/src/com/android/dx/dex/file/TypeIdsSection.java
index 6b9d3f8..0ef3f44 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/TypeIdsSection.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/TypeIdsSection.java
@@ -169,22 +169,7 @@ public final class TypeIdsSection extends UniformItemSection {
         return item.getIndex();
     }
 
-    /**
-     * Gets the index of the given type, which must have
-     * been added to this instance.
-     *
-     * @param type {@code non-null;} the type to look up
-     * @return {@code >= 0;} the reference's index
-     */
-    public int indexOf(CstType type) {
-        if (type == null) {
-            throw new NullPointerException("type == null");
-        }
-
-        return indexOf(type.getClassType());
-    }
-
-    /** {@inheritDoc} */
+  /** {@inheritDoc} */
     @Override
     protected void orderItems() {
         int idx = 0;
diff --git a/third-party/java/dx/src/com/android/dx/dex/file/ValueEncoder.java b/third-party/java/dx/src/com/android/dx/dex/file/ValueEncoder.java
index fa807a7..7f2ba4e 100644
--- a/third-party/java/dx/src/com/android/dx/dex/file/ValueEncoder.java
+++ b/third-party/java/dx/src/com/android/dx/dex/file/ValueEncoder.java
@@ -159,7 +159,7 @@ public final class ValueEncoder {
                 break;
             }
             case VALUE_TYPE: {
-                int index = file.getTypeIds().indexOf((CstType) cst);
+                int index = ((CstType) cst).indexOf(file.getTypeIds());
                 EncodedValueCodec.writeUnsignedIntegralValue(out, type, (long) index);
                 break;
             }
@@ -311,14 +311,14 @@ public final class ValueEncoder {
         TypeIdsSection typeIds = file.getTypeIds();
 
         CstType type = annotation.getType();
-        int typeIdx = typeIds.indexOf(type);
+        int typeIdx = type.indexOf(typeIds);
 
         if (annotates) {
             out.annotate("  type_idx: " + Hex.u4(typeIdx) + " // " +
                     type.toHuman());
         }
 
-        out.writeUleb128(typeIds.indexOf(annotation.getType()));
+        out.writeUleb128(annotation.getType().indexOf(typeIds));
 
         Collection<NameValuePair> pairs = annotation.getNameValuePairs();
         int size = pairs.size();
diff --git a/third-party/java/dx/src/com/android/dx/rop/code/InsnList.java b/third-party/java/dx/src/com/android/dx/rop/code/InsnList.java
index 88abd72..ea6a315 100644
--- a/third-party/java/dx/src/com/android/dx/rop/code/InsnList.java
+++ b/third-party/java/dx/src/com/android/dx/rop/code/InsnList.java
@@ -16,6 +16,7 @@
 
 package com.android.dx.rop.code;
 
+import com.android.dx.cf.code.Ropper;
 import com.android.dx.util.FixedSizeList;
 
 /**
@@ -127,4 +128,43 @@ public final class InsnList
 
         return result;
     }
+
+  /**
+   * Removes all {@code move-return-address} instructions, returning a new
+   * {@code InsnList} if necessary. The {@code move-return-address}
+   * insns are dead code after subroutines have been inlined.
+   *
+   *
+   * @param ropper@return {@code InsnList} with {@code move-return-address} removed
+   */
+  public InsnList filterMoveReturnAddressInsns(Ropper ropper) {
+    int sz;
+      int newSz = 0;
+
+      // First see if we need to filter, and if so what the new size will be
+      sz = size();
+      for (int i = 0; i < sz; i++) {
+          if (get(i).getOpcode() != Rops.MOVE_RETURN_ADDRESS) {
+              newSz++;
+          }
+      }
+
+      if (newSz == sz) {
+          return this;
+      }
+
+      // Make a new list without the MOVE_RETURN_ADDRESS insns
+      InsnList newInsns = new InsnList(newSz);
+
+      int newIndex = 0;
+      for (int i = 0; i < sz; i++) {
+          Insn insn = get(i);
+          if (insn.getOpcode() != Rops.MOVE_RETURN_ADDRESS) {
+              newInsns.set(newIndex++, insn);
+          }
+      }
+
+      newInsns.setImmutable();
+      return newInsns;
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/rop/code/LocalItem.java b/third-party/java/dx/src/com/android/dx/rop/code/LocalItem.java
index d238f21..8db7157 100644
--- a/third-party/java/dx/src/com/android/dx/rop/code/LocalItem.java
+++ b/third-party/java/dx/src/com/android/dx/rop/code/LocalItem.java
@@ -17,6 +17,7 @@
 package com.android.dx.rop.code;
 
 import com.android.dx.rop.cst.CstString;
+import com.android.dx.rop.type.TypeBearer;
 
 /**
  * A local variable item: either a name or a signature or both.
@@ -140,4 +141,22 @@ public class LocalItem implements Comparable<LocalItem> {
     public CstString getSignature() {
         return signature;
     }
+
+  /**
+   * Helper for {@link #equalsOther} which actually does the test.
+   *
+   * @param reg value of the instance variable, for another instance
+   * @param type value of the instance variable, for another instance
+   * @param registerSpec
+   * @return whether this instance is equal to one with the given
+   * values
+   */
+  public boolean equalsOther(int reg, TypeBearer type, RegisterSpec registerSpec) {
+    registerSpec.getClass();
+    return (registerSpec.getReg() == reg)
+          && registerSpec.getTypeBearer().equals(type)
+          && ((registerSpec.getLocalItem() == this)
+                  || ((registerSpec.getLocalItem() != null) && registerSpec
+        .getLocalItem().equals(this)));
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/rop/code/RegisterSpec.java b/third-party/java/dx/src/com/android/dx/rop/code/RegisterSpec.java
index 9fae825..db477a8 100644
--- a/third-party/java/dx/src/com/android/dx/rop/code/RegisterSpec.java
+++ b/third-party/java/dx/src/com/android/dx/rop/code/RegisterSpec.java
@@ -172,7 +172,7 @@ public final class RegisterSpec
         }
 
         RegisterSpec spec = (RegisterSpec) other;
-        return equals(spec.reg, spec.type, spec.local);
+        return spec.local.equalsOther(spec.reg, spec.type, this);
     }
 
     /**
@@ -212,23 +212,7 @@ public final class RegisterSpec
                     || ((local != null) && local.equals(other.local)));
     }
 
-    /**
-     * Helper for {@link #equals} which actually does the test.
-     *
-     * @param reg value of the instance variable, for another instance
-     * @param type value of the instance variable, for another instance
-     * @param local value of the instance variable, for another instance
-     * @return whether this instance is equal to one with the given
-     * values
-     */
-    private boolean equals(int reg, TypeBearer type, LocalItem local) {
-        return (this.reg == reg)
-            && this.type.equals(type)
-            && ((this.local == local)
-                    || ((this.local != null) && this.local.equals(local)));
-    }
-
-    /**
+  /**
      * Compares by (in priority order) register number, unwrapped type
      * (that is types not {@link TypeBearer}s, and local info.
      *
diff --git a/third-party/java/dx/src/com/android/dx/rop/code/RopMethod.java b/third-party/java/dx/src/com/android/dx/rop/code/RopMethod.java
index f1643c1..f729d39 100644
--- a/third-party/java/dx/src/com/android/dx/rop/code/RopMethod.java
+++ b/third-party/java/dx/src/com/android/dx/rop/code/RopMethod.java
@@ -16,8 +16,12 @@
 
 package com.android.dx.rop.code;
 
+import com.android.dx.dex.cf.CfOptions;
+import com.android.dx.dex.cf.OptimizerOptions;
+import com.android.dx.ssa.Optimizer;
 import com.android.dx.util.Hex;
 import com.android.dx.util.IntList;
+import java.util.EnumSet;
 
 /**
  * All of the parts that make up a method at the rop layer.
@@ -203,4 +207,44 @@ public final class RopMethod {
         this.predecessors = predecessors;
         this.exitPredecessors = exitPredecessors;
     }
+
+  /**
+   * Compares the output of the optimizer run normally with a run skipping
+   * some optional steps. Results are printed to stderr.
+   *  @param paramSize {@code >= 0;} parameter size of method
+   * @param isStatic true if this method has no 'this' pointer argument.
+   * @param args {@code non-null;} translator arguments
+   * @param advice {@code non-null;} translation advice
+   * @param rmeth {@code non-null;} method with all optimization steps run.
+   * @param optimizerOptions
+   */
+  public void compareOptimizerStep(int paramSize, boolean isStatic, CfOptions args,
+      TranslationAdvice advice, RopMethod rmeth, OptimizerOptions optimizerOptions) {
+    EnumSet<Optimizer.OptionalStep> steps;
+
+      steps = EnumSet.allOf(Optimizer.OptionalStep.class);
+
+      // This is the step to skip.
+      steps.remove(Optimizer.OptionalStep.CONST_COLLECTOR);
+
+      RopMethod skipRopMethod
+              = Optimizer.optimize(this,
+                      paramSize, isStatic, args.localInfo, advice, steps);
+
+      int normalInsns
+              = rmeth.getBlocks().getEffectiveInstructionCount();
+      int skipInsns
+              = skipRopMethod.getBlocks().getEffectiveInstructionCount();
+
+      System.err.printf(
+              "optimize step regs:(%d/%d/%.2f%%)"
+              + " insns:(%d/%d/%.2f%%)\n",
+              rmeth.getBlocks().getRegCount(),
+              skipRopMethod.getBlocks().getRegCount(),
+              100.0 * ((skipRopMethod.getBlocks().getRegCount()
+                      - rmeth.getBlocks().getRegCount())
+                      / (float) skipRopMethod.getBlocks().getRegCount()),
+              normalInsns, skipInsns,
+              100.0 * ((skipInsns - normalInsns) / (float) skipInsns));
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/rop/cst/Constant.java b/third-party/java/dx/src/com/android/dx/rop/cst/Constant.java
index 3ef035e..972913e 100644
--- a/third-party/java/dx/src/com/android/dx/rop/cst/Constant.java
+++ b/third-party/java/dx/src/com/android/dx/rop/cst/Constant.java
@@ -65,4 +65,41 @@ public abstract class Constant
      * for a comparison
      */
     protected abstract int compareTo0(Constant other);
+
+  /**
+   * Sets the entry at the given index.
+   *  @param n {@code >= 1, < size();} which entry
+   * @param stdConstantPool
+   */
+  public void set(int n, StdConstantPool stdConstantPool) {
+    stdConstantPool.throwIfImmutable();
+
+      boolean cat2 = (this != null) && isCategory2();
+
+      if (n < 1) {
+          throw new IllegalArgumentException("n < 1");
+      }
+
+      if (cat2) {
+          // Storing a category-2 entry nulls out the next index.
+          if (n == (stdConstantPool.getEntries().length - 1)) {
+              throw new IllegalArgumentException("(n == size - 1) && " +
+                                                 "cst.isCategory2()");
+          }
+          stdConstantPool.getEntries()[n + 1] = null;
+      }
+
+      if ((this != null) && (stdConstantPool.getEntries()[n] == null)) {
+          /*
+           * Overwriting the second half of a category-2 entry nulls out
+           * the first half.
+           */
+          Constant prev = stdConstantPool.getEntries()[n - 1];
+          if ((prev != null) && prev.isCategory2()) {
+              stdConstantPool.getEntries()[n - 1] = null;
+          }
+      }
+
+      stdConstantPool.getEntries()[n] = this;
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/rop/cst/CstNat.java b/third-party/java/dx/src/com/android/dx/rop/cst/CstNat.java
index cd067e9..a848902 100644
--- a/third-party/java/dx/src/com/android/dx/rop/cst/CstNat.java
+++ b/third-party/java/dx/src/com/android/dx/rop/cst/CstNat.java
@@ -16,6 +16,7 @@
 
 package com.android.dx.rop.cst;
 
+import com.android.dx.dex.file.StringIdsSection;
 import com.android.dx.rop.type.Type;
 
 /**
@@ -167,4 +168,14 @@ public final class CstNat extends Constant {
     public final boolean isClassInit() {
         return name.getString().equals("<clinit>");
     }
+
+  /**
+   * Interns the components of a name-and-type into this instance.
+   *
+   * @param stringIdsSection
+   */
+  public synchronized void intern(StringIdsSection stringIdsSection) {
+    stringIdsSection.intern(getName());
+      stringIdsSection.intern(getDescriptor());
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/rop/cst/CstType.java b/third-party/java/dx/src/com/android/dx/rop/cst/CstType.java
index b705cbc..56020c1 100644
--- a/third-party/java/dx/src/com/android/dx/rop/cst/CstType.java
+++ b/third-party/java/dx/src/com/android/dx/rop/cst/CstType.java
@@ -17,6 +17,7 @@
 package com.android.dx.rop.cst;
 
 import com.android.dx.command.dexer.Main;
+import com.android.dx.dex.file.TypeIdsSection;
 import com.android.dx.rop.type.Type;
 import com.google.common.collect.MapMaker;
 
@@ -252,4 +253,19 @@ public final class CstType extends TypedConstant {
             return descriptor.substring(lastLeftSquare + 2, lastSlash).replace('/', '.');
         }
     }
+
+  /**
+   * Gets the index of the given type, which must have
+   * been added to this instance.
+   *
+   *
+   * @param typeIdsSection@return {@code >= 0;} the reference's index
+   */
+  public int indexOf(TypeIdsSection typeIdsSection) {
+    if (this == null) {
+          throw new NullPointerException("type == null");
+      }
+
+      return typeIdsSection.indexOf(getClassType());
+  }
 }
diff --git a/third-party/java/dx/src/com/android/dx/rop/cst/StdConstantPool.java b/third-party/java/dx/src/com/android/dx/rop/cst/StdConstantPool.java
index f941f7d..bbce10d 100644
--- a/third-party/java/dx/src/com/android/dx/rop/cst/StdConstantPool.java
+++ b/third-party/java/dx/src/com/android/dx/rop/cst/StdConstantPool.java
@@ -96,45 +96,7 @@ public final class StdConstantPool
         return entries;
     }
 
-    /**
-     * Sets the entry at the given index.
-     *
-     * @param n {@code >= 1, < size();} which entry
-     * @param cst {@code null-ok;} the constant to store
-     */
-    public void set(int n, Constant cst) {
-        throwIfImmutable();
-
-        boolean cat2 = (cst != null) && cst.isCategory2();
-
-        if (n < 1) {
-            throw new IllegalArgumentException("n < 1");
-        }
-
-        if (cat2) {
-            // Storing a category-2 entry nulls out the next index.
-            if (n == (entries.length - 1)) {
-                throw new IllegalArgumentException("(n == size - 1) && " +
-                                                   "cst.isCategory2()");
-            }
-            entries[n + 1] = null;
-        }
-
-        if ((cst != null) && (entries[n] == null)) {
-            /*
-             * Overwriting the second half of a category-2 entry nulls out
-             * the first half.
-             */
-            Constant prev = entries[n - 1];
-            if ((prev != null) && prev.isCategory2()) {
-                entries[n - 1] = null;
-            }
-        }
-
-        entries[n] = cst;
-    }
-
-    /**
+  /**
      * Throws the right exception for an invalid cpi.
      *
      * @param idx the bad cpi
diff --git a/third-party/java/dx/src/com/android/dx/rop/type/Type.java b/third-party/java/dx/src/com/android/dx/rop/type/Type.java
index 3fe1915..5564970 100644
--- a/third-party/java/dx/src/com/android/dx/rop/type/Type.java
+++ b/third-party/java/dx/src/com/android/dx/rop/type/Type.java
@@ -16,6 +16,7 @@
 
 package com.android.dx.rop.type;
 
+import com.android.dx.cf.code.Frame;
 import com.android.dx.command.dexer.Main;
 import com.android.dx.util.Hex;
 import com.google.common.collect.MapMaker;
@@ -864,4 +865,15 @@ public final class Type implements TypeBearer, Comparable<Type> {
         Type result = internTable.putIfAbsent(type.getDescriptor(), type);
         return result != null ? result : type;
     }
+
+  /**
+   * Replaces all the occurrences of the given uninitialized type in
+   * this frame with its initialized equivalent.
+   *
+   * @param frame
+   */
+  public void makeInitialized(Frame frame) {
+    frame.getLocals().makeInitialized(this);
+      frame.getStack().makeInitialized(this);
+  }
 }
diff --git a/tools/build/modules/modules.iml b/tools/build/modules/modules.iml
index 20f48fa..252f30f 100644
--- a/tools/build/modules/modules.iml
+++ b/tools/build/modules/modules.iml
@@ -2,8 +2,8 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="Python 2.7" jdkType="Python SDK" />
+    <content url="file://$MODULE_DIR$/../../../../../../../../MoveMethodDataset/buck/buck/tools/build/modules" />
+    <orderEntry type="jdk" jdkName="java 1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
diff --git a/tools/consistency_checker/consistency_checker.iml b/tools/consistency_checker/consistency_checker.iml
index a315768..a0d99d9 100644
--- a/tools/consistency_checker/consistency_checker.iml
+++ b/tools/consistency_checker/consistency_checker.iml
@@ -2,11 +2,11 @@
 <module type="JAVA_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
+    <content url="file://$MODULE_DIR$/../../../../../../../MoveMethodDataset/buck/buck/tools/consistency_checker">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../MoveMethodDataset/buck/buck/tools/consistency_checker/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../MoveMethodDataset/buck/buck/tools/consistency_checker/test" isTestSource="true" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="java 1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="module" module-name="buck" />
     <orderEntry type="library" name="buck-lib" level="project" />
diff --git a/tools/documentation_generator/documentation_generator.iml b/tools/documentation_generator/documentation_generator.iml
index 1a55ad7..81de29c 100644
--- a/tools/documentation_generator/documentation_generator.iml
+++ b/tools/documentation_generator/documentation_generator.iml
@@ -2,11 +2,11 @@
 <module type="JAVA_MODULE" version="4">
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
+    <content url="file://$MODULE_DIR$/../../../../../../../MoveMethodDataset/buck/buck/tools/documentation_generator">
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../MoveMethodDataset/buck/buck/tools/documentation_generator/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../../../../../MoveMethodDataset/buck/buck/tools/documentation_generator/test" isTestSource="true" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="java 1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" name="guava" level="project" />
     <orderEntry type="library" name="bazel" level="project" />
